@@ -21,14 +21,12 @@ import java.util.List;
 
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
-import org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration;
-import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
-import org.springframework.context.annotation.Import;
 import org.springframework.http.converter.HttpMessageConverter;
 import org.springframework.http.converter.json.GsonHttpMessageConverter;
 import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
@@ -44,10 +42,10 @@ import com.google.gson.Gson;
  * @author Piotr Maj
  * @author Oliver Gierke
  * @author David Liu
+ * @author Andy Wilkinson
  */
 @Configuration
 @ConditionalOnClass(HttpMessageConverter.class)
-@Import({ JacksonAutoConfiguration.class, GsonAutoConfiguration.class })
 public class HttpMessageConvertersAutoConfiguration {
 
 	@Autowired(required = false)
@@ -61,8 +59,9 @@ public class HttpMessageConvertersAutoConfiguration {
 
 	@Configuration
 	@ConditionalOnClass(ObjectMapper.class)
+	@ConditionalOnBean(ObjectMapper.class)
 	@EnableConfigurationProperties(HttpMapperProperties.class)
-	protected static class ObjectMappers {
+	protected static class MappingJackson2HttpMessageConverterConfiguration {
 
 		@Autowired
 		private HttpMapperProperties properties = new HttpMapperProperties();
@@ -81,7 +80,8 @@ public class HttpMessageConvertersAutoConfiguration {
 
 	@Configuration
 	@ConditionalOnClass(Gson.class)
-	protected static class GsonConfiguration {
+	@ConditionalOnBean(Gson.class)
+	protected static class GsonHttpMessageConverterConfiguration {
 
 		@Bean
 		@ConditionalOnMissingBean

