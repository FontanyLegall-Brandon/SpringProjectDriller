{'_old_path': None, '_new_path': PosixPath('spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/autoconfigure/UserServiceAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2012-2017 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure;\n+\n+import org.springframework.boot.autoconfigure.UserServiceAutoConfiguration.UserProperties;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Sample auto-configuration.\n+ *\n+ * @author Stephane Nicoll\n+ */\n+@Configuration\n+@ConditionalOnClass(UserService.class)\n+@EnableConfigurationProperties(UserProperties.class)\n+public class UserServiceAutoConfiguration {\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\tpublic UserService userService(UserProperties properties) {\n+\t\treturn new UserService(properties.getName());\n+\t}\n+\n+\n+\t@ConfigurationProperties("user")\n+\tstatic class UserProperties {\n+\n+\t\tprivate String name = "test";\n+\n+\t\tpublic String getName() {\n+\t\t\treturn this.name;\n+\t\t}\n+\n+\t\tpublic void setName(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure;\n\nimport org.springframework.boot.autoconfigure.UserServiceAutoConfiguration.UserProperties;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * Sample auto-configuration.\n *\n * @author Stephane Nicoll\n */\n@Configuration\n@ConditionalOnClass(UserService.class)\n@EnableConfigurationProperties(UserProperties.class)\npublic class UserServiceAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\tpublic UserService userService(UserProperties properties) {\n\t\treturn new UserService(properties.getName());\n\t}\n\n\n\t@ConfigurationProperties("user")\n\tstatic class UserProperties {\n\n\t\tprivate String name = "test";\n\n\t\tpublic String getName() {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tpublic void setName(String name) {\n\t\t\tthis.name = name;\n\t\t}\n\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
