{'_old_path': None, '_new_path': PosixPath('spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/reactive/WebTestClientSecurityConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2012-2018 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.boot.test.autoconfigure.web.reactive;\n+\n+/** Configuration for Spring Security\'s {@link org.springframework.test.web.reactive.server.WebTestClient} integration.\n+*\n+ * @author Madhura Bhave\n+ */\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.security.test.web.reactive.server.SecurityMockServerConfigurers;\n+import org.springframework.test.web.reactive.server.MockServerConfigurer;\n+\n+@Configuration\n+@ConditionalOnClass(SecurityMockServerConfigurers.class)\n+class WebTestClientSecurityConfiguration {\n+\n+\t@Bean\n+\tpublic MockServerConfigurer get() {\n+\t\treturn SecurityMockServerConfigurers.springSecurity();\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.boot.test.autoconfigure.web.reactive;\n\n/** Configuration for Spring Security\'s {@link org.springframework.test.web.reactive.server.WebTestClient} integration.\n*\n * @author Madhura Bhave\n */\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.test.web.reactive.server.SecurityMockServerConfigurers;\nimport org.springframework.test.web.reactive.server.MockServerConfigurer;\n\n@Configuration\n@ConditionalOnClass(SecurityMockServerConfigurers.class)\nclass WebTestClientSecurityConfiguration {\n\n\t@Bean\n\tpublic MockServerConfigurer get() {\n\t\treturn SecurityMockServerConfigurers.springSecurity();\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
