{'_old_path': None, '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchDataAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2012-2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure.elasticsearch;\n+\n+import org.elasticsearch.client.Client;\n+import org.springframework.boot.autoconfigure.AutoConfigureAfter;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.data.elasticsearch.core.ElasticsearchTemplate;\n+import org.springframework.data.elasticsearch.repository.config.EnableElasticsearchRepositories;\n+\n+/**\n+ * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Elasticsearch\n+ * support.\n+ * <p>\n+ * Registers a {@link ElasticsearchTemplate} if no other bean of the same type is\n+ * configured.\n+ * \n+ * @author Artur Konczak\n+ * @author Mohsin Husen\n+ * @see EnableElasticsearchRepositories\n+ * @since 1.1.0\n+ */\n+@Configuration\n+@ConditionalOnClass({ Client.class, ElasticsearchTemplate.class })\n+@AutoConfigureAfter(ElasticsearchAutoConfiguration.class)\n+public class ElasticsearchDataAutoConfiguration {\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\tpublic ElasticsearchTemplate elasticsearchTemplate(Client client) {\n+\t\treturn new ElasticsearchTemplate(client);\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.elasticsearch;\n\nimport org.elasticsearch.client.Client;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.elasticsearch.core.ElasticsearchTemplate;\nimport org.springframework.data.elasticsearch.repository.config.EnableElasticsearchRepositories;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Elasticsearch\n * support.\n * <p>\n * Registers a {@link ElasticsearchTemplate} if no other bean of the same type is\n * configured.\n * \n * @author Artur Konczak\n * @author Mohsin Husen\n * @see EnableElasticsearchRepositories\n * @since 1.1.0\n */\n@Configuration\n@ConditionalOnClass({ Client.class, ElasticsearchTemplate.class })\n@AutoConfigureAfter(ElasticsearchAutoConfiguration.class)\npublic class ElasticsearchDataAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\tpublic ElasticsearchTemplate elasticsearchTemplate(Client client) {\n\t\treturn new ElasticsearchTemplate(client);\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
