@@ -0,0 +1,94 @@
+
+
+package org.springframework.boot.autoconfigure.web;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;
+import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
+import org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter;
+
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.dataformat.xml.XmlMapper;
+
+
+@Configuration
+class JacksonHttpMessageConvertersConfiguration {
+
+	@Configuration
+	@ConditionalOnClass(ObjectMapper.class)
+	@ConditionalOnBean(ObjectMapper.class)
+	@EnableConfigurationProperties(HttpMapperProperties.class)
+	@ConditionalOnProperty(name = HttpMessageConvertersAutoConfiguration.PREFERRED_MAPPER_PROPERTY, havingValue = , matchIfMissing = true)
+	@SuppressWarnings()
+	protected static class MappingJackson2HttpMessageConverterConfiguration {
+
+		
+		
+		@Autowired
+		private HttpMapperProperties properties = new HttpMapperProperties();
+
+		@Bean
+		@ConditionalOnMissingBean
+		public MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter(
+				ObjectMapper objectMapper) {
+			MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter(
+					objectMapper);
+			if (this.properties.isJsonPrettyPrint() != null) {
+				converter.setPrettyPrint(this.properties.isJsonPrettyPrint());
+			}
+			return converter;
+		}
+
+	}
+
+	@Configuration
+	@ConditionalOnClass(XmlMapper.class)
+	@ConditionalOnBean(Jackson2ObjectMapperBuilder.class)
+	@EnableConfigurationProperties(HttpMapperProperties.class)
+	@SuppressWarnings()
+	protected static class MappingJackson2XmlHttpMessageConverterConfiguration {
+
+		@Autowired
+		private HttpMapperProperties properties = new HttpMapperProperties();
+
+		@Bean
+		@ConditionalOnMissingBean
+		public MappingJackson2XmlHttpMessageConverter mappingJackson2XmlHttpMessageConverter(
+				Jackson2ObjectMapperBuilder builder) {
+			MappingJackson2XmlHttpMessageConverter converter = new MappingJackson2XmlHttpMessageConverter();
+			converter.setObjectMapper(builder.createXmlMapper(true).build());
+			if (this.properties.isJsonPrettyPrint() != null) {
+				converter.setPrettyPrint(this.properties.isJsonPrettyPrint());
+			}
+			return converter;
+		}
+
+	}
+
+}

