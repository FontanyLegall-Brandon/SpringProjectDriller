{'_old_path': PosixPath('spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/MetricsConfiguration.java'), '_new_path': PosixPath('spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/MetricsConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -21,7 +21,7 @@ import javax.servlet.Servlet;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.bootstrap.actuate.endpoint.metrics.PublicMetrics;\n import org.springframework.bootstrap.actuate.endpoint.metrics.VanillaPublicMetrics;\n-import org.springframework.bootstrap.actuate.endpoint.metrics.VarzEndpoint;\n+import org.springframework.bootstrap.actuate.endpoint.metrics.MetricsEndpoint;\n import org.springframework.bootstrap.actuate.metrics.MetricRepository;\n import org.springframework.bootstrap.context.annotation.ConditionalOnClass;\n import org.springframework.bootstrap.context.annotation.ConditionalOnMissingBean;\n@@ -37,7 +37,7 @@ import org.springframework.web.servlet.DispatcherServlet;\n  */\n @Configuration\n @ConditionalOnClass({ Servlet.class, DispatcherServlet.class })\n-@ConditionalOnMissingBean({ VarzEndpoint.class })\n+@ConditionalOnMissingBean({ MetricsEndpoint.class })\n public class MetricsConfiguration {\n \n \t@Autowired\n@@ -47,11 +47,11 @@ public class MetricsConfiguration {\n \tprivate PublicMetrics metrics;\n \n \t@Bean\n-\tpublic VarzEndpoint varzEndpoint() {\n+\tpublic MetricsEndpoint metricsEndpoint() {\n \t\tif (this.metrics == null) {\n \t\t\tthis.metrics = new VanillaPublicMetrics(this.repository);\n \t\t}\n-\t\treturn new VarzEndpoint(this.metrics);\n+\t\treturn new MetricsEndpoint(this.metrics);\n \t}\n \n }\n', 'source_code': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.bootstrap.actuate.autoconfigure;\n\nimport javax.servlet.Servlet;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.bootstrap.actuate.endpoint.metrics.PublicMetrics;\nimport org.springframework.bootstrap.actuate.endpoint.metrics.VanillaPublicMetrics;\nimport org.springframework.bootstrap.actuate.endpoint.metrics.MetricsEndpoint;\nimport org.springframework.bootstrap.actuate.metrics.MetricRepository;\nimport org.springframework.bootstrap.context.annotation.ConditionalOnClass;\nimport org.springframework.bootstrap.context.annotation.ConditionalOnMissingBean;\nimport org.springframework.bootstrap.context.annotation.EnableAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.DispatcherServlet;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for /varz endpoint.\n * \n * @author Dave Syer\n */\n@Configuration\n@ConditionalOnClass({ Servlet.class, DispatcherServlet.class })\n@ConditionalOnMissingBean({ MetricsEndpoint.class })\npublic class MetricsConfiguration {\n\n\t@Autowired\n\tprivate MetricRepository repository;\n\n\t@Autowired(required = false)\n\tprivate PublicMetrics metrics;\n\n\t@Bean\n\tpublic MetricsEndpoint metricsEndpoint() {\n\t\tif (this.metrics == null) {\n\t\t\tthis.metrics = new VanillaPublicMetrics(this.repository);\n\t\t}\n\t\treturn new MetricsEndpoint(this.metrics);\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.bootstrap.actuate.autoconfigure;\n\nimport javax.servlet.Servlet;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.bootstrap.actuate.endpoint.metrics.PublicMetrics;\nimport org.springframework.bootstrap.actuate.endpoint.metrics.VanillaPublicMetrics;\nimport org.springframework.bootstrap.actuate.endpoint.metrics.VarzEndpoint;\nimport org.springframework.bootstrap.actuate.metrics.MetricRepository;\nimport org.springframework.bootstrap.context.annotation.ConditionalOnClass;\nimport org.springframework.bootstrap.context.annotation.ConditionalOnMissingBean;\nimport org.springframework.bootstrap.context.annotation.EnableAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.DispatcherServlet;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for /varz endpoint.\n * \n * @author Dave Syer\n */\n@Configuration\n@ConditionalOnClass({ Servlet.class, DispatcherServlet.class })\n@ConditionalOnMissingBean({ VarzEndpoint.class })\npublic class MetricsConfiguration {\n\n\t@Autowired\n\tprivate MetricRepository repository;\n\n\t@Autowired(required = false)\n\tprivate PublicMetrics metrics;\n\n\t@Bean\n\tpublic VarzEndpoint varzEndpoint() {\n\t\tif (this.metrics == null) {\n\t\t\tthis.metrics = new VanillaPublicMetrics(this.repository);\n\t\t}\n\t\treturn new VarzEndpoint(this.metrics);\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
