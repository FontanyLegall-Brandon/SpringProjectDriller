@@ -0,0 +1,66 @@
+
+package org.springframework.boot.actuate.autoconfigure.cassandra;
+
+import com.datastax.driver.core.Cluster;
+import org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthIndicatorConfiguration;
+import org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;
+import org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration;
+import org.springframework.boot.actuate.cassandra.CassandraReactiveHealthIndicator;
+import org.springframework.boot.actuate.health.ReactiveHealthIndicator;
+import org.springframework.boot.autoconfigure.AutoConfigureAfter;
+import org.springframework.boot.autoconfigure.AutoConfigureBefore;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.cassandra.core.ReactiveCassandraOperations;
+
+import java.util.Map;
+
+
+@Configuration
+@ConditionalOnClass({ReactiveCassandraOperations.class, Cluster.class })
+@ConditionalOnBean(ReactiveCassandraOperations.class)
+@ConditionalOnEnabledHealthIndicator()
+@AutoConfigureBefore(HealthIndicatorAutoConfiguration.class)
+@AutoConfigureAfter({ CassandraAutoConfiguration.class,
+		CassandraReactiveDataAutoConfiguration.class })
+public class CassandraReactiveHealthIndicatorAutoConfiguration extends
+		CompositeReactiveHealthIndicatorConfiguration<CassandraReactiveHealthIndicator, ReactiveCassandraOperations> {
+	private final Map<String, ReactiveCassandraOperations> reactiveCassandraOperations;
+
+	public CassandraReactiveHealthIndicatorAutoConfiguration(
+			Map<String, ReactiveCassandraOperations> reactiveCassandraOperations) {
+		this.reactiveCassandraOperations = reactiveCassandraOperations;
+	}
+
+	@Bean
+	@ConditionalOnMissingBean(name = )
+	public ReactiveHealthIndicator cassandraHealthIndicator() {
+		return createHealthIndicator(this.reactiveCassandraOperations);
+	}
+}

