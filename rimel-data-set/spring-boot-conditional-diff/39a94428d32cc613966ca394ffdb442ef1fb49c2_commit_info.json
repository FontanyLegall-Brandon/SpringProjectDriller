{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -18,11 +18,12 @@ package org.springframework.boot.autoconfigure.data.solr;\n \n import org.apache.solr.client.solrj.SolrServer;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Import;\n+import org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport;\n import org.springframework.data.solr.repository.SolrRepository;\n-import org.springframework.data.solr.repository.support.SolrRepositoryFactoryBean;\n \n /**\n  * Enables auto configuration for Spring Data Solr repositories.\n@@ -42,7 +43,8 @@ import org.springframework.data.solr.repository.support.SolrRepositoryFactoryBea\n  */\n @Configuration\n @ConditionalOnClass({ SolrServer.class, SolrRepository.class })\n-@ConditionalOnMissingBean(SolrRepositoryFactoryBean.class)\n+@ConditionalOnMissingBean(RepositoryFactoryBeanSupport.class)\n+@ConditionalOnExpression("${spring.data.solr.repositories.enabled:true}")\n @Import(SolrRepositoriesAutoConfigureRegistrar.class)\n public class SolrRepositoriesAutoConfiguration {\n \n', 'source_code': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data.solr;\n\nimport org.apache.solr.client.solrj.SolrServer;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport;\nimport org.springframework.data.solr.repository.SolrRepository;\n\n/**\n * Enables auto configuration for Spring Data Solr repositories.\n * <p>\n * Activates when there is no bean of type\n * {@link org.springframework.data.solr.repository.support.SolrRepositoryFactoryBean}\n * found in context, and both\n * {@link org.springframework.data.solr.repository.SolrRepository} and\n * {@link org.apache.solr.client.solrj.SolrServer} can be found on classpath.\n * </p>\n * If active auto configuration does the same as\n * {@link org.springframework.data.solr.repository.config.EnableSolrRepositories} would\n * do.\n *\n * @author Christoph Strobl\n * @since 1.1.0\n */\n@Configuration\n@ConditionalOnClass({ SolrServer.class, SolrRepository.class })\n@ConditionalOnMissingBean(RepositoryFactoryBeanSupport.class)\n@ConditionalOnExpression("${spring.data.solr.repositories.enabled:true}")\n@Import(SolrRepositoriesAutoConfigureRegistrar.class)\npublic class SolrRepositoriesAutoConfiguration {\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data.solr;\n\nimport org.apache.solr.client.solrj.SolrServer;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.solr.repository.SolrRepository;\nimport org.springframework.data.solr.repository.support.SolrRepositoryFactoryBean;\n\n/**\n * Enables auto configuration for Spring Data Solr repositories.\n * <p>\n * Activates when there is no bean of type\n * {@link org.springframework.data.solr.repository.support.SolrRepositoryFactoryBean}\n * found in context, and both\n * {@link org.springframework.data.solr.repository.SolrRepository} and\n * {@link org.apache.solr.client.solrj.SolrServer} can be found on classpath.\n * </p>\n * If active auto configuration does the same as\n * {@link org.springframework.data.solr.repository.config.EnableSolrRepositories} would\n * do.\n *\n * @author Christoph Strobl\n * @since 1.1.0\n */\n@Configuration\n@ConditionalOnClass({ SolrServer.class, SolrRepository.class })\n@ConditionalOnMissingBean(SolrRepositoryFactoryBean.class)\n@Import(SolrRepositoriesAutoConfigureRegistrar.class)\npublic class SolrRepositoriesAutoConfiguration {\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
