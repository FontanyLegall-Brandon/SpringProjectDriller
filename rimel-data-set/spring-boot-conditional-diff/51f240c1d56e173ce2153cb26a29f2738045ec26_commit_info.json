{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': "@@ -23,12 +23,15 @@ import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\n import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Import;\n import org.springframework.data.jpa.repository.JpaRepository;\n import org.springframework.data.jpa.repository.config.EnableJpaRepositories;\n import org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;\n+import org.springframework.data.web.PageableHandlerMethodArgumentResolver;\n+import org.springframework.data.web.config.EnableSpringDataWebSupport;\n \n /**\n  * {@link EnableAutoConfiguration Auto-configuration} for Spring Data's JPA Repositories.\n@@ -44,4 +47,12 @@ import org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;\n @AutoConfigureAfter(DataSourceAutoConfiguration.class)\n public class JpaRepositoriesAutoConfiguration {\n \n+\t@Configuration\n+\t@EnableSpringDataWebSupport\n+\t@ConditionalOnWebApplication\n+\t@ConditionalOnMissingBean(PageableHandlerMethodArgumentResolver.class)\n+\tprotected static class JpaWebConfiguration {\n+\n+\t}\n+\n }\n", 'source_code': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.config.EnableJpaRepositories;\nimport org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;\nimport org.springframework.data.web.PageableHandlerMethodArgumentResolver;\nimport org.springframework.data.web.config.EnableSpringDataWebSupport;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s JPA Repositories.\n * \n * @author Phillip Webb\n * @see EnableJpaRepositories\n */\n@Configuration\n@ConditionalOnBean(DataSource.class)\n@ConditionalOnClass(JpaRepository.class)\n@ConditionalOnMissingBean(JpaRepositoryFactoryBean.class)\n@Import(JpaRepositoriesAutoConfigureRegistrar.class)\n@AutoConfigureAfter(DataSourceAutoConfiguration.class)\npublic class JpaRepositoriesAutoConfiguration {\n\n\t@Configuration\n\t@EnableSpringDataWebSupport\n\t@ConditionalOnWebApplication\n\t@ConditionalOnMissingBean(PageableHandlerMethodArgumentResolver.class)\n\tprotected static class JpaWebConfiguration {\n\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.config.EnableJpaRepositories;\nimport org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s JPA Repositories.\n * \n * @author Phillip Webb\n * @see EnableJpaRepositories\n */\n@Configuration\n@ConditionalOnBean(DataSource.class)\n@ConditionalOnClass(JpaRepository.class)\n@ConditionalOnMissingBean(JpaRepositoryFactoryBean.class)\n@Import(JpaRepositoriesAutoConfigureRegistrar.class)\n@AutoConfigureAfter(DataSourceAutoConfiguration.class)\npublic class JpaRepositoriesAutoConfiguration {\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
