@@ -16,8 +16,6 @@
 
 package org.springframework.boot.autoconfigure.security;
 
-import javax.servlet.Filter;
-
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;
@@ -29,14 +27,14 @@ import org.springframework.security.config.annotation.web.configuration.WebSecur
  * {@link EnableWebSecurity} annotation. This will make
  * sure that the annotation is present with default security auto-configuration and also
  * if the user adds custom security and forgets to add the annotation. If {@link EnableWebSecurity}
- * has already been added or if a {@link Filter} with name springSecurityFilterChain
+ * has already been added or if a bean with name springSecurityFilterChain
  * has been configured by the user, this will back-off.
  *
  * @author Madhura Bhave
  * @since 2.0.0
  */
 @ConditionalOnBean(WebSecurityConfigurerAdapter.class)
-@ConditionalOnMissingBean(value = Filter.class, name = )
+@ConditionalOnMissingBean(name = )
 @ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.SERVLET)
 @EnableWebSecurity
 public class WebSecurityEnablerConfiguration {

