{'_old_path': None, '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure.sendgrid;\n+\n+import org.apache.http.HttpHost;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import com.sendgrid.SendGrid;\n+\n+/**\n+ * {@link EnableAutoConfiguration Auto-configuration} for SendGrid\n+ *\n+ * @author Maciej Walkowiak\n+ * @since 1.3.0\n+ */\n+@Configuration\n+@ConditionalOnClass(SendGrid.class)\n+@ConditionalOnProperty(prefix = "spring.sendgrid", value = "username")\n+@EnableConfigurationProperties(SendGridProperties.class)\n+public class SendGridAutoConfiguration {\n+\n+\t@Autowired\n+\tprivate SendGridProperties properties;\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean(SendGrid.class)\n+\tpublic SendGrid sendGrid() {\n+\t\tSendGrid sendGrid = new SendGrid(this.properties.getUsername(),\n+\t\t\t\tthis.properties.getPassword());\n+\n+\t\tif (this.properties.isProxyConfigured()) {\n+\t\t\tHttpHost proxy = new HttpHost(this.properties.getProxy().getHost(),\n+\t\t\t\t\tthis.properties.getProxy().getPort());\n+\t\t\tCloseableHttpClient http = HttpClientBuilder.create().setProxy(proxy)\n+\t\t\t\t\t.setUserAgent("sendgrid/" + sendGrid.getVersion() + ";java").build();\n+\n+\t\t\tsendGrid.setClient(http);\n+\t\t}\n+\n+\t\treturn sendGrid;\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.sendgrid;\n\nimport org.apache.http.HttpHost;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClientBuilder;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport com.sendgrid.SendGrid;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for SendGrid\n *\n * @author Maciej Walkowiak\n * @since 1.3.0\n */\n@Configuration\n@ConditionalOnClass(SendGrid.class)\n@ConditionalOnProperty(prefix = "spring.sendgrid", value = "username")\n@EnableConfigurationProperties(SendGridProperties.class)\npublic class SendGridAutoConfiguration {\n\n\t@Autowired\n\tprivate SendGridProperties properties;\n\n\t@Bean\n\t@ConditionalOnMissingBean(SendGrid.class)\n\tpublic SendGrid sendGrid() {\n\t\tSendGrid sendGrid = new SendGrid(this.properties.getUsername(),\n\t\t\t\tthis.properties.getPassword());\n\n\t\tif (this.properties.isProxyConfigured()) {\n\t\t\tHttpHost proxy = new HttpHost(this.properties.getProxy().getHost(),\n\t\t\t\t\tthis.properties.getProxy().getPort());\n\t\t\tCloseableHttpClient http = HttpClientBuilder.create().setProxy(proxy)\n\t\t\t\t\t.setUserAgent("sendgrid/" + sendGrid.getVersion() + ";java").build();\n\n\t\t\tsendGrid.setClient(http);\n\t\t}\n\n\t\treturn sendGrid;\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
