{'_old_path': None, '_new_path': PosixPath('spring-bootstrap/src/main/java/org/springframework/bootstrap/autoconfigure/web/MultipartAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2012-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.bootstrap.autoconfigure.web;\n+\n+import javax.servlet.MultipartConfigElement;\n+\n+import org.springframework.bootstrap.context.annotation.ConditionalOnBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.multipart.support.StandardServletMultipartResolver;\n+\n+/**\n+ * Autoconfiguration for multipart uploads. It detects the existence of a\n+ * {@link MultipartConfigElement} in the app context and then adds critical beans\n+ * while also autowiring it into the Jetty/Tomcat embedded containers.\n+ * \n+ * @author Greg Turnquist\n+ *\n+ */\n+@Configuration\n+public class MultipartAutoConfiguration {\n+\t\n+\t@ConditionalOnBean(MultipartConfigElement.class)\n+\t@Bean\n+\tpublic StandardServletMultipartResolver multipartResolver() {\n+\t\tSystem.out.println("Loading up a MultipartResolver!!!");\n+\t    return new StandardServletMultipartResolver();\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.springframework.bootstrap.autoconfigure.web;\n\nimport javax.servlet.MultipartConfigElement;\n\nimport org.springframework.bootstrap.context.annotation.ConditionalOnBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.multipart.support.StandardServletMultipartResolver;\n\n/**\n * Autoconfiguration for multipart uploads. It detects the existence of a\n * {@link MultipartConfigElement} in the app context and then adds critical beans\n * while also autowiring it into the Jetty/Tomcat embedded containers.\n * \n * @author Greg Turnquist\n *\n */\n@Configuration\npublic class MultipartAutoConfiguration {\n\t\n\t@ConditionalOnBean(MultipartConfigElement.class)\n\t@Bean\n\tpublic StandardServletMultipartResolver multipartResolver() {\n\t\tSystem.out.println("Loading up a MultipartResolver!!!");\n\t    return new StandardServletMultipartResolver();\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
