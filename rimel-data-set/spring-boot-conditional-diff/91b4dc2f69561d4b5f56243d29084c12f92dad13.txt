@@ -17,34 +17,42 @@ package org.springframework.boot.actuate.autoconfigure.couchbase;
 
 import java.util.Map;
 
+import reactor.core.publisher.Flux;
+
 import org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthIndicatorConfiguration;
 import org.springframework.boot.actuate.couchbase.CouchbaseReactiveHealthIndicator;
 import org.springframework.boot.actuate.health.ReactiveHealthIndicator;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.data.couchbase.core.RxJavaCouchbaseOperations;
 
 
 @Configuration
-@ConditionalOnClass(RxJavaCouchbaseOperations.class)
+@ConditionalOnClass({ RxJavaCouchbaseOperations.class, Flux.class })
 @ConditionalOnBean(RxJavaCouchbaseOperations.class)
+@EnableConfigurationProperties(CouchbaseHealthIndicatorProperties.class)
 public class CouchbaseReactiveHealthIndicatorConfiguration extends
 		CompositeReactiveHealthIndicatorConfiguration<CouchbaseReactiveHealthIndicator, RxJavaCouchbaseOperations> {
 
 	private final Map<String, RxJavaCouchbaseOperations> couchbaseOperations;
 
+	private final CouchbaseHealthIndicatorProperties properties;
+
 	CouchbaseReactiveHealthIndicatorConfiguration(
-			Map<String, RxJavaCouchbaseOperations> couchbaseOperations) {
+			Map<String, RxJavaCouchbaseOperations> couchbaseOperations,
+			CouchbaseHealthIndicatorProperties properties) {
 		this.couchbaseOperations = couchbaseOperations;
+		this.properties = properties;
 	}
 
 	@Bean
@@ -53,4 +61,11 @@ public class CouchbaseReactiveHealthIndicatorConfiguration extends
 		return createHealthIndicator(this.couchbaseOperations);
 	}
 
+	@Override
+	protected CouchbaseReactiveHealthIndicator createHealthIndicator(
+			RxJavaCouchbaseOperations couchbaseOperations) {
+		return new CouchbaseReactiveHealthIndicator(couchbaseOperations,
+				this.properties.getTimeout());
+	}
+
 }

