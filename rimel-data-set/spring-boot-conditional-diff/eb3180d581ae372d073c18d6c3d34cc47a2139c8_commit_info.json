{'_old_path': None, '_new_path': PosixPath('spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/restdocs/RestDocsAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2012-2016 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.test.autoconfigure.restdocs;\n+\n+import org.springframework.beans.factory.ObjectProvider;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.restdocs.RestDocumentationContextProvider;\n+import org.springframework.restdocs.mockmvc.MockMvcRestDocumentation;\n+import org.springframework.restdocs.mockmvc.MockMvcRestDocumentationConfigurer;\n+import org.springframework.restdocs.mockmvc.RestDocumentationResultHandler;\n+\n+/**\n+ * {@link EnableAutoConfiguration Auto-configuration} for Spring REST Docs.\n+ *\n+ * @author Andy Wilkinson\n+ */\n+@Configuration\n+@ConditionalOnWebApplication\n+@EnableConfigurationProperties\n+class RestDocsAutoConfiguration {\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean(MockMvcRestDocumentationConfigurer.class)\n+\tpublic MockMvcRestDocumentationConfigurer restDocsMockMvcConfigurer(\n+\t\t\tObjectProvider<RestDocsMockMvcConfigurationCustomizer> configurationCustomizerProvider,\n+\t\t\tRestDocumentationContextProvider contextProvider) {\n+\t\tMockMvcRestDocumentationConfigurer configurer = MockMvcRestDocumentation\n+\t\t\t\t.documentationConfiguration(contextProvider);\n+\t\tRestDocsMockMvcConfigurationCustomizer configurationCustomizer = configurationCustomizerProvider\n+\t\t\t\t.getIfAvailable();\n+\t\tif (configurationCustomizer != null) {\n+\t\t\tconfigurationCustomizer.customize(configurer);\n+\t\t}\n+\t\treturn configurer;\n+\t}\n+\n+\t@Bean\n+\t@ConfigurationProperties("spring.test.restdocs")\n+\tpublic RestDocsMockMvcBuilderCustomizer restDocumentationConfigurer(\n+\t\t\tMockMvcRestDocumentationConfigurer configurer,\n+\t\t\tObjectProvider<RestDocumentationResultHandler> resultHandler) {\n+\t\treturn new RestDocsMockMvcBuilderCustomizer(configurer,\n+\t\t\t\tresultHandler.getIfAvailable());\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2016 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.test.autoconfigure.restdocs;\n\nimport org.springframework.beans.factory.ObjectProvider;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.restdocs.RestDocumentationContextProvider;\nimport org.springframework.restdocs.mockmvc.MockMvcRestDocumentation;\nimport org.springframework.restdocs.mockmvc.MockMvcRestDocumentationConfigurer;\nimport org.springframework.restdocs.mockmvc.RestDocumentationResultHandler;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring REST Docs.\n *\n * @author Andy Wilkinson\n */\n@Configuration\n@ConditionalOnWebApplication\n@EnableConfigurationProperties\nclass RestDocsAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean(MockMvcRestDocumentationConfigurer.class)\n\tpublic MockMvcRestDocumentationConfigurer restDocsMockMvcConfigurer(\n\t\t\tObjectProvider<RestDocsMockMvcConfigurationCustomizer> configurationCustomizerProvider,\n\t\t\tRestDocumentationContextProvider contextProvider) {\n\t\tMockMvcRestDocumentationConfigurer configurer = MockMvcRestDocumentation\n\t\t\t\t.documentationConfiguration(contextProvider);\n\t\tRestDocsMockMvcConfigurationCustomizer configurationCustomizer = configurationCustomizerProvider\n\t\t\t\t.getIfAvailable();\n\t\tif (configurationCustomizer != null) {\n\t\t\tconfigurationCustomizer.customize(configurer);\n\t\t}\n\t\treturn configurer;\n\t}\n\n\t@Bean\n\t@ConfigurationProperties("spring.test.restdocs")\n\tpublic RestDocsMockMvcBuilderCustomizer restDocumentationConfigurer(\n\t\t\tMockMvcRestDocumentationConfigurer configurer,\n\t\t\tObjectProvider<RestDocumentationResultHandler> resultHandler) {\n\t\treturn new RestDocsMockMvcBuilderCustomizer(configurer,\n\t\t\t\tresultHandler.getIfAvailable());\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
