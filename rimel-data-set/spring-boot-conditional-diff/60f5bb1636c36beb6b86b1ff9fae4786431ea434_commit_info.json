{'_old_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/LegacyHealthEndpointAdaptersConfiguration.java'), '_new_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/LegacyHealthEndpointAdaptersConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2019 the original author or authors.\n+ * Copyright 2012-2020 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the "License");\n  * you may not use this file except in compliance with the License.\n@@ -16,7 +16,6 @@\n \n package org.springframework.boot.actuate.autoconfigure.health;\n \n-import org.springframework.boot.actuate.health.HttpCodeStatusMapper;\n import org.springframework.boot.actuate.health.StatusAggregator;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n import org.springframework.context.annotation.Bean;\n@@ -26,6 +25,7 @@ import org.springframework.context.annotation.Configuration;\n  * Configuration to adapt legacy deprecated health endpoint classes and interfaces.\n  *\n  * @author Phillip Webb\n+ * @author Scott Frederick\n  * @see HealthEndpointAutoConfiguration\n  */\n @Configuration(proxyBeanMethods = false)\n@@ -39,11 +39,4 @@ class LegacyHealthEndpointAdaptersConfiguration {\n \t\treturn new HealthAggregatorStatusAggregatorAdapter(healthAggregator);\n \t}\n \n-\t@Bean\n-\t@ConditionalOnBean(org.springframework.boot.actuate.health.HealthStatusHttpMapper.class)\n-\tHttpCodeStatusMapper healthStatusHttpMapperHttpCodeStatusMapperAdapter(\n-\t\t\torg.springframework.boot.actuate.health.HealthStatusHttpMapper healthStatusHttpMapper) {\n-\t\treturn new HealthStatusHttpMapperHttpCodeStatusMapperAdapter(healthStatusHttpMapper);\n-\t}\n-\n }\n', 'source_code': '/*\n * Copyright 2012-2020 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.health;\n\nimport org.springframework.boot.actuate.health.StatusAggregator;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * Configuration to adapt legacy deprecated health endpoint classes and interfaces.\n *\n * @author Phillip Webb\n * @author Scott Frederick\n * @see HealthEndpointAutoConfiguration\n */\n@Configuration(proxyBeanMethods = false)\n@SuppressWarnings("deprecation")\nclass LegacyHealthEndpointAdaptersConfiguration {\n\n\t@Bean\n\t@ConditionalOnBean(org.springframework.boot.actuate.health.HealthAggregator.class)\n\tStatusAggregator healthAggregatorStatusAggregatorAdapter(\n\t\t\torg.springframework.boot.actuate.health.HealthAggregator healthAggregator) {\n\t\treturn new HealthAggregatorStatusAggregatorAdapter(healthAggregator);\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.health;\n\nimport org.springframework.boot.actuate.health.HttpCodeStatusMapper;\nimport org.springframework.boot.actuate.health.StatusAggregator;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * Configuration to adapt legacy deprecated health endpoint classes and interfaces.\n *\n * @author Phillip Webb\n * @see HealthEndpointAutoConfiguration\n */\n@Configuration(proxyBeanMethods = false)\n@SuppressWarnings("deprecation")\nclass LegacyHealthEndpointAdaptersConfiguration {\n\n\t@Bean\n\t@ConditionalOnBean(org.springframework.boot.actuate.health.HealthAggregator.class)\n\tStatusAggregator healthAggregatorStatusAggregatorAdapter(\n\t\t\torg.springframework.boot.actuate.health.HealthAggregator healthAggregator) {\n\t\treturn new HealthAggregatorStatusAggregatorAdapter(healthAggregator);\n\t}\n\n\t@Bean\n\t@ConditionalOnBean(org.springframework.boot.actuate.health.HealthStatusHttpMapper.class)\n\tHttpCodeStatusMapper healthStatusHttpMapperHttpCodeStatusMapperAdapter(\n\t\t\torg.springframework.boot.actuate.health.HealthStatusHttpMapper healthStatusHttpMapper) {\n\t\treturn new HealthStatusHttpMapperHttpCodeStatusMapperAdapter(healthStatusHttpMapper);\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
