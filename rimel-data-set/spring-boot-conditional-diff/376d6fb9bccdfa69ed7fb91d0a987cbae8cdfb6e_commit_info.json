{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -17,10 +17,12 @@\n package org.springframework.boot.autoconfigure.data.mongo;\n \n import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Import;\n+import org.springframework.data.mongodb.core.MongoOperations;\n import org.springframework.data.mongodb.repository.MongoRepository;\n import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;\n import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;\n@@ -50,6 +52,7 @@ import com.mongodb.Mongo;\n  */\n @Configuration\n @ConditionalOnClass({ Mongo.class, MongoRepository.class })\n+@ConditionalOnBean(MongoOperations.class)\n @ConditionalOnMissingBean(MongoRepositoryFactoryBean.class)\n @Import(MongoRepositoriesAutoConfigureRegistrar.class)\n public class MongoRepositoriesAutoConfiguration {\n', 'source_code': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data.mongo;\n\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.mongodb.core.MongoOperations;\nimport org.springframework.data.mongodb.repository.MongoRepository;\nimport org.springframework.data.mongodb.repository.config.EnableMongoRepositories;\nimport org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;\n\nimport com.mongodb.Mongo;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Mongo\n * Repositories.\n * <p>\n * Activates when there is no bean of type\n * {@link org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean}\n * configured in the context, the Spring Data Mongo\n * {@link org.springframework.data.mongodb.repository.MongoRepository} type is on the\n * classpath, the Mongo client driver API is on the classpath, and there is no other\n * configured {@link org.springframework.data.mongodb.repository.MongoRepository}.\n * <p>\n * Once in effect, the auto-configuration is the equivalent of enabling Mongo repositories\n * using the\n * {@link org.springframework.data.mongodb.repository.config.EnableMongoRepositories}\n * annotation.\n * \n * @author Dave Syer\n * @author Oliver Gierke\n * @author Josh Long\n * @see EnableMongoRepositories\n */\n@Configuration\n@ConditionalOnClass({ Mongo.class, MongoRepository.class })\n@ConditionalOnBean(MongoOperations.class)\n@ConditionalOnMissingBean(MongoRepositoryFactoryBean.class)\n@Import(MongoRepositoriesAutoConfigureRegistrar.class)\npublic class MongoRepositoriesAutoConfiguration {\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data.mongo;\n\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.mongodb.repository.MongoRepository;\nimport org.springframework.data.mongodb.repository.config.EnableMongoRepositories;\nimport org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;\n\nimport com.mongodb.Mongo;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Mongo\n * Repositories.\n * <p>\n * Activates when there is no bean of type\n * {@link org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean}\n * configured in the context, the Spring Data Mongo\n * {@link org.springframework.data.mongodb.repository.MongoRepository} type is on the\n * classpath, the Mongo client driver API is on the classpath, and there is no other\n * configured {@link org.springframework.data.mongodb.repository.MongoRepository}.\n * <p>\n * Once in effect, the auto-configuration is the equivalent of enabling Mongo repositories\n * using the\n * {@link org.springframework.data.mongodb.repository.config.EnableMongoRepositories}\n * annotation.\n * \n * @author Dave Syer\n * @author Oliver Gierke\n * @author Josh Long\n * @see EnableMongoRepositories\n */\n@Configuration\n@ConditionalOnClass({ Mongo.class, MongoRepository.class })\n@ConditionalOnMissingBean(MongoRepositoryFactoryBean.class)\n@Import(MongoRepositoriesAutoConfigureRegistrar.class)\npublic class MongoRepositoriesAutoConfiguration {\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
