@@ -16,17 +16,17 @@
 
 package org.springframework.boot.actuate.autoconfigure;
 
-import java.io.IOException;
-
 import org.springframework.boot.actuate.info.EnvironmentInfoContributor;
+import org.springframework.boot.actuate.info.GitInfoContributor;
 import org.springframework.boot.actuate.info.InfoContributor;
-import org.springframework.boot.actuate.info.SimpleInfoContributor;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
 import org.springframework.boot.autoconfigure.AutoConfigureBefore;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;
-import org.springframework.boot.autoconfigure.info.GitInfo;
 import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.boot.info.GitProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.core.Ordered;
@@ -44,6 +44,7 @@ import org.springframework.core.env.ConfigurableEnvironment;
 @Configuration
 @AutoConfigureAfter(ProjectInfoAutoConfiguration.class)
 @AutoConfigureBefore(EndpointAutoConfiguration.class)
+@EnableConfigurationProperties(InfoContributorProperties.class)
 public class InfoContributorAutoConfiguration {
 
 	
 	public static final int DEFAULT_ORDER = Ordered.HIGHEST_PRECEDENCE + 10;
 
+	private final InfoContributorProperties properties;
+
+	public InfoContributorAutoConfiguration(InfoContributorProperties properties) {
+		this.properties = properties;
+	}
+
 	@Bean
 	@ConditionalOnEnabledInfoContributor()
 	@Order(DEFAULT_ORDER)
@@ -61,10 +68,11 @@ public class InfoContributorAutoConfiguration {
 
 	@Bean
 	@ConditionalOnEnabledInfoContributor()
-	@ConditionalOnSingleCandidate(GitInfo.class)
+	@ConditionalOnSingleCandidate(GitProperties.class)
+	@ConditionalOnMissingBean
 	@Order(DEFAULT_ORDER)
-	public InfoContributor gitInfoContributor(GitInfo gitInfo) throws IOException {
-		return new SimpleInfoContributor(, gitInfo);
+	public GitInfoContributor gitInfoContributor(GitProperties gitProperties) {
+		return new GitInfoContributor(gitProperties, this.properties.getGit().getMode());
 	}
 
 }

