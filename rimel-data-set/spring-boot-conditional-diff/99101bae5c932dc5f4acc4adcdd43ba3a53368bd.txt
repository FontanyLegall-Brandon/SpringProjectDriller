@@ -21,20 +21,13 @@ import java.util.UUID;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 
-import org.springframework.beans.factory.NoSuchBeanDefinitionException;
-import org.springframework.beans.factory.SmartInitializingSingleton;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
-import org.springframework.context.ApplicationContext;
-import org.springframework.context.ApplicationListener;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.core.annotation.Order;
-import org.springframework.security.authentication.AuthenticationEventPublisher;
 import org.springframework.security.authentication.AuthenticationManager;
 import org.springframework.security.authentication.AuthenticationProvider;
-import org.springframework.security.authentication.ProviderManager;
 import org.springframework.security.config.annotation.ObjectPostProcessor;
 import org.springframework.security.core.userdetails.User;
 import org.springframework.security.core.userdetails.UserDetailsService;
@@ -52,6 +45,8 @@ import org.springframework.security.provisioning.InMemoryUserDetailsManager;
  */
 @Configuration
 @ConditionalOnBean(ObjectPostProcessor.class)
+@ConditionalOnMissingBean({ AuthenticationManager.class, AuthenticationProvider.class,
+		UserDetailsService.class })
 @Order(0)
 public class AuthenticationManagerConfiguration {
 
@@ -59,8 +54,6 @@ public class AuthenticationManagerConfiguration {
 			.getLog(AuthenticationManagerConfiguration.class);
 
 	@Bean
-	@ConditionalOnMissingBean({ AuthenticationManager.class, AuthenticationProvider.class,
-			UserDetailsService.class })
 	public InMemoryUserDetailsManager inMemoryUserDetailsManager() throws Exception {
 		String password = UUID.randomUUID().toString();
 		logger.info(String.format(, password));
@@ -68,42 +61,4 @@ public class AuthenticationManagerConfiguration {
 				User.withUsername().password(password).roles().build());
 	}
 
-	@Bean
-	public AuthenticationManagerConfigurationListener authenticationManagerConfigurationListener() {
-		return new AuthenticationManagerConfigurationListener();
-	}
-
-	
-	protected static class AuthenticationManagerConfigurationListener
-			implements SmartInitializingSingleton {
-
-		@Autowired
-		private AuthenticationEventPublisher eventPublisher;
-
-		@Autowired
-		private ApplicationContext context;
-
-		@Override
-		public void afterSingletonsInstantiated() {
-			try {
-				configureAuthenticationManager(
-						this.context.getBean(AuthenticationManager.class));
-			}
-			catch (NoSuchBeanDefinitionException ex) {
-				
-			}
-		}
-
-		private void configureAuthenticationManager(AuthenticationManager manager) {
-			if (manager instanceof ProviderManager) {
-				((ProviderManager) manager)
-						.setAuthenticationEventPublisher(this.eventPublisher);
-			}
-		}
-
-	}
-
 }

