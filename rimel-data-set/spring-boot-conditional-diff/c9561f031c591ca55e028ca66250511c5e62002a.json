{"author_date": "2017-04-17 22:32:02-07:00", "msg": "Refine validator and MVC validator configuration\n\nUpdate `ValidationAutoConfiguration` and `WebMvcAutoConfiguration` to\nensure as much as possible that only a single Validator bean of each\ntype is registered.\n\nValidation auto-configuration now does the following:\n- If no validator is found: Registers a `LocalValidatorFactoryBean`\n  (providing both Spring and JSR validation)\n- If the user defines a Spring & JSR validator: Backs off\n- If the user defines only a JSR validator: Adapts it to a Spring\n  validator (without exposing another JSR implementation)\n\nWebMvcAutoConfiguration auto-configuration has been updated to make\nMVC validation follow common Spring Boot patterns:\n- If not validator beans are found (due to the user excluding\n  ValidationAutoConfiguration) a new `mvcValidator` bean will be\n  registered.\n- If a single validator bean is found it will be used for MVC\n  validation.\n- If multiple validator beans are defined it will either use the one\n  named `mvcValidator` or it will register a new `mvcValidator` bean\n\nAny automatically registered `mvcValidator` bean will not implement\nthe JSR validator interface.\n\nFinally, it is no longer possible to provide an MVC validator via a\n`WebMvcConfigurer`.\n\nFixes gh-8495"}