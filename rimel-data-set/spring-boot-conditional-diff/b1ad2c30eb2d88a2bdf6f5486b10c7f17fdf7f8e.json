{"author_date": "2015-05-11 14:56:42+01:00", "msg": "Ignore type-constrained converter when auto-configuring Jackson converter\n\nPreviously, JacksonHttpMessageConvertersConfiguration would configure a\ngeneral-purpose MappingJackson2HttpMessageConverter only if there was\nno existing MappingJackson2HttpMessageConverter in the application\ncontext. This was problematic when a\nTypeConstrainedMappingJackson2HttpMessageConverter bean was present.\nSuch a bean is only capable of performing conversion for a specific\ntype, and therefore is no substitute for a general purpose converter,\nyet its presence was causing the auto-configuration of a general\npurpose converters to be turned off. This would leave Spring MVC\u2019s\ndefault converter being used for application/json requests which would\nnot honour the user\u2019s Jackson configuration.\n\nThis commit enhances @ConditionalOnMissingBean so that the annotation\ncan be used to specify one or more types that should be ignored when\nsearching for beans. This allows the\nTypeConstrainedMappingJackson2HttpMessageConverter beans that are\npublished by Spring Data REST to be ignored such that the\ngeneral-purpose MappingJackson2HttpMessageConverter is still\nauto-configured.\n\nFixes gh-2914"}