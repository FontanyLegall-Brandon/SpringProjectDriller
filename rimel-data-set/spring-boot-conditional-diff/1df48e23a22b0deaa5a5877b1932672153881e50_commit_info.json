{'_old_path': PosixPath('spring-autoconfigure/src/main/java/org/springframework/autoconfigure/reactor/ReactorAutoConfiguration.java'), '_new_path': PosixPath('spring-autoconfigure/src/main/java/org/springframework/autoconfigure/reactor/ReactorAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -33,7 +33,7 @@ import reactor.spring.context.ConsumerBeanPostProcessor;\n  * @author Dave Syer\n  */\n @Configuration\n-@ConditionalOnClass(Reactor.class)\n+@ConditionalOnClass(ConsumerBeanPostProcessor.class)\n @ConditionalOnMissingBean(Reactor.class)\n @AutoConfigureAfter(WebMvcAutoConfiguration.class)\n public class ReactorAutoConfiguration {\n', 'source_code': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.autoconfigure.reactor;\n\nimport org.springframework.autoconfigure.AutoConfigureAfter;\nimport org.springframework.autoconfigure.web.WebMvcAutoConfiguration;\nimport org.springframework.bootstrap.context.condition.ConditionalOnClass;\nimport org.springframework.bootstrap.context.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.Ordered;\nimport org.springframework.core.annotation.Order;\n\nimport reactor.core.Environment;\nimport reactor.core.Reactor;\nimport reactor.spring.context.ConsumerBeanPostProcessor;\n\n/**\n * @author Dave Syer\n */\n@Configuration\n@ConditionalOnClass(ConsumerBeanPostProcessor.class)\n@ConditionalOnMissingBean(Reactor.class)\n@AutoConfigureAfter(WebMvcAutoConfiguration.class)\npublic class ReactorAutoConfiguration {\n\n\t@Bean\n\tpublic Environment reactorEnvironment() {\n\t\treturn new Environment(); // TODO: use Spring Environment to configure?\n\t}\n\n\t@Bean\n\tpublic Reactor rootReactor() {\n\t\treturn reactorEnvironment().getRootReactor();\n\t}\n\n\t@Bean\n\t@Order(Ordered.LOWEST_PRECEDENCE)\n\tprotected ConsumerBeanPostProcessor reactorConsumerBeanPostProcessor() {\n\t\treturn new ConsumerBeanPostProcessor();\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.autoconfigure.reactor;\n\nimport org.springframework.autoconfigure.AutoConfigureAfter;\nimport org.springframework.autoconfigure.web.WebMvcAutoConfiguration;\nimport org.springframework.bootstrap.context.condition.ConditionalOnClass;\nimport org.springframework.bootstrap.context.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.Ordered;\nimport org.springframework.core.annotation.Order;\n\nimport reactor.core.Environment;\nimport reactor.core.Reactor;\nimport reactor.spring.context.ConsumerBeanPostProcessor;\n\n/**\n * @author Dave Syer\n */\n@Configuration\n@ConditionalOnClass(Reactor.class)\n@ConditionalOnMissingBean(Reactor.class)\n@AutoConfigureAfter(WebMvcAutoConfiguration.class)\npublic class ReactorAutoConfiguration {\n\n\t@Bean\n\tpublic Environment reactorEnvironment() {\n\t\treturn new Environment(); // TODO: use Spring Environment to configure?\n\t}\n\n\t@Bean\n\tpublic Reactor rootReactor() {\n\t\treturn reactorEnvironment().getRootReactor();\n\t}\n\n\t@Bean\n\t@Order(Ordered.LOWEST_PRECEDENCE)\n\tprotected ConsumerBeanPostProcessor reactorConsumerBeanPostProcessor() {\n\t\treturn new ConsumerBeanPostProcessor();\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
