{'_old_path': None, '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionRepositoryFilterConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2012-2017 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure.session;\n+\n+import java.util.EnumSet;\n+\n+import javax.servlet.DispatcherType;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.web.servlet.FilterRegistrationBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.session.web.http.SessionRepositoryFilter;\n+\n+/**\n+ * Configuration for customizing the registration of the {@link SessionRepositoryFilter}.\n+ *\n+ * @author Andy Wilkinson\n+ */\n+@Configuration\n+@ConditionalOnBean(SessionRepositoryFilter.class)\n+class SessionRepositoryFilterConfiguration {\n+\n+\t@Bean\n+\tpublic FilterRegistrationBean<SessionRepositoryFilter<?>> sessionRepositoryFilterRegistration(\n+\t\t\tSessionRepositoryFilter<?> filter) {\n+\t\tFilterRegistrationBean<SessionRepositoryFilter<?>> registration = new FilterRegistrationBean<SessionRepositoryFilter<?>>(\n+\t\t\t\tfilter);\n+\t\tregistration.setDispatcherTypes(EnumSet.of(DispatcherType.ASYNC,\n+\t\t\t\tDispatcherType.ERROR, DispatcherType.REQUEST));\n+\t\tregistration.setOrder(SessionRepositoryFilter.DEFAULT_ORDER);\n+\t\treturn registration;\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.session;\n\nimport java.util.EnumSet;\n\nimport javax.servlet.DispatcherType;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.session.web.http.SessionRepositoryFilter;\n\n/**\n * Configuration for customizing the registration of the {@link SessionRepositoryFilter}.\n *\n * @author Andy Wilkinson\n */\n@Configuration\n@ConditionalOnBean(SessionRepositoryFilter.class)\nclass SessionRepositoryFilterConfiguration {\n\n\t@Bean\n\tpublic FilterRegistrationBean<SessionRepositoryFilter<?>> sessionRepositoryFilterRegistration(\n\t\t\tSessionRepositoryFilter<?> filter) {\n\t\tFilterRegistrationBean<SessionRepositoryFilter<?>> registration = new FilterRegistrationBean<SessionRepositoryFilter<?>>(\n\t\t\t\tfilter);\n\t\tregistration.setDispatcherTypes(EnumSet.of(DispatcherType.ASYNC,\n\t\t\t\tDispatcherType.ERROR, DispatcherType.REQUEST));\n\t\tregistration.setOrder(SessionRepositoryFilter.DEFAULT_ORDER);\n\t\treturn registration;\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
