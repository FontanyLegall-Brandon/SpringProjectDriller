@@ -1,5 +1,5 @@
 
 public class ConditionalOnPropertyTests {
 
@@ -227,6 +233,44 @@ public class ConditionalOnPropertyTests {
 		load(NameAndValueAttribute.class, );
 	}
 
+	@Test
+	public void metaAnnotationConditionMatchesWhenPropertyIsSet() throws Exception {
+		load(MetaAnnotation.class, );
+		assertTrue(this.context.containsBean());
+	}
+
+	@Test
+	public void metaAnnotationConditionDoesNotMatchWhenPropertyIsNotSet()
+			throws Exception {
+		load(MetaAnnotation.class);
+		assertFalse(this.context.containsBean());
+	}
+
+	@Test
+	public void metaAndDirectAnnotationConditionDoesNotMatchWhenOnlyDirectPropertyIsSet() {
+		load(MetaAnnotationAndDirectAnnotation.class, );
+		assertFalse(this.context.containsBean());
+	}
+
+	@Test
+	public void metaAndDirectAnnotationConditionDoesNotMatchWhenOnlyMetaPropertyIsSet() {
+		load(MetaAnnotationAndDirectAnnotation.class, );
+		assertFalse(this.context.containsBean());
+	}
+
+	@Test
+	public void metaAndDirectAnnotationConditionDoesNotMatchWhenNeitherPropertyIsSet() {
+		load(MetaAnnotationAndDirectAnnotation.class);
+		assertFalse(this.context.containsBean());
+	}
+
+	@Test
+	public void metaAndDirectAnnotationConditionMatchesWhenBothPropertiesAreSet() {
+		load(MetaAnnotationAndDirectAnnotation.class, ,
+				);
+		assertTrue(this.context.containsBean());
+	}
+
 	private void load(Class<?> config, String... environment) {
 		this.context = new AnnotationConfigApplicationContext();
 		EnvironmentTestUtils.addEnvironment(this.context, environment);
@@ -390,4 +434,32 @@ public class ConditionalOnPropertyTests {
 		}
 
 	}
+
+	@ConditionalOnMyFeature
+	protected static class MetaAnnotation {
+
+		@Bean
+		public String foo() {
+			return ;
+		}
+
+	}
+
+	@ConditionalOnMyFeature
+	@ConditionalOnProperty(prefix = , name = , havingValue = , matchIfMissing = false)
+	protected static class MetaAnnotationAndDirectAnnotation {
+
+		@Bean
+		public String foo() {
+			return ;
+		}
+
+	}
+
+	@Retention(RetentionPolicy.RUNTIME)
+	@Target({ ElementType.TYPE, ElementType.METHOD })
+	@ConditionalOnProperty(prefix = , name = , havingValue = , matchIfMissing = false)
+	public @interface ConditionalOnMyFeature {
+
+	}
 }

