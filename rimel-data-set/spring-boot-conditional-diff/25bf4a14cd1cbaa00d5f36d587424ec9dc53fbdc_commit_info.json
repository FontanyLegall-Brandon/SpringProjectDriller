{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2016 the original author or authors.\n+ * Copyright 2012-2017 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the "License");\n  * you may not use this file except in compliance with the License.\n@@ -25,7 +25,7 @@ import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean\n import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Import;\n-import org.springframework.data.neo4j.repository.GraphRepository;\n+import org.springframework.data.neo4j.repository.Neo4jRepository;\n import org.springframework.data.neo4j.repository.config.EnableNeo4jRepositories;\n import org.springframework.data.neo4j.repository.config.Neo4jRepositoryConfigurationExtension;\n import org.springframework.data.neo4j.repository.support.Neo4jRepositoryFactoryBean;\n@@ -35,9 +35,9 @@ import org.springframework.data.neo4j.repository.support.Neo4jRepositoryFactoryB\n  * Repositories.\n  * <p>\n  * Activates when there is no bean of type {@link Neo4jRepositoryFactoryBean} configured\n- * in the context, the Spring Data Neo4j {@link GraphRepository} type is on the classpath,\n+ * in the context, the Spring Data Neo4j {@link Neo4jRepository} type is on the classpath,\n  * the Neo4j client driver API is on the classpath, and there is no other configured\n- * {@link GraphRepository}.\n+ * {@link Neo4jRepository}.\n  * <p>\n  * Once in effect, the auto-configuration is the equivalent of enabling Neo4j repositories\n  * using the {@link EnableNeo4jRepositories} annotation.\n@@ -49,7 +49,7 @@ import org.springframework.data.neo4j.repository.support.Neo4jRepositoryFactoryB\n  * @see EnableNeo4jRepositories\n  */\n @Configuration\n-@ConditionalOnClass({ Neo4jSession.class, GraphRepository.class })\n+@ConditionalOnClass({ Neo4jSession.class, Neo4jRepository.class })\n @ConditionalOnMissingBean({ Neo4jRepositoryFactoryBean.class,\n \t\tNeo4jRepositoryConfigurationExtension.class })\n @ConditionalOnProperty(prefix = "spring.data.neo4j.repositories", name = "enabled", havingValue = "true", matchIfMissing = true)\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data.neo4j;\n\nimport org.neo4j.ogm.session.Neo4jSession;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.neo4j.repository.Neo4jRepository;\nimport org.springframework.data.neo4j.repository.config.EnableNeo4jRepositories;\nimport org.springframework.data.neo4j.repository.config.Neo4jRepositoryConfigurationExtension;\nimport org.springframework.data.neo4j.repository.support.Neo4jRepositoryFactoryBean;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Neo4j\n * Repositories.\n * <p>\n * Activates when there is no bean of type {@link Neo4jRepositoryFactoryBean} configured\n * in the context, the Spring Data Neo4j {@link Neo4jRepository} type is on the classpath,\n * the Neo4j client driver API is on the classpath, and there is no other configured\n * {@link Neo4jRepository}.\n * <p>\n * Once in effect, the auto-configuration is the equivalent of enabling Neo4j repositories\n * using the {@link EnableNeo4jRepositories} annotation.\n *\n * @author Dave Syer\n * @author Oliver Gierke\n * @author Josh Long\n * @since 1.4.0\n * @see EnableNeo4jRepositories\n */\n@Configuration\n@ConditionalOnClass({ Neo4jSession.class, Neo4jRepository.class })\n@ConditionalOnMissingBean({ Neo4jRepositoryFactoryBean.class,\n\t\tNeo4jRepositoryConfigurationExtension.class })\n@ConditionalOnProperty(prefix = "spring.data.neo4j.repositories", name = "enabled", havingValue = "true", matchIfMissing = true)\n@Import(Neo4jRepositoriesAutoConfigureRegistrar.class)\n@AutoConfigureAfter(Neo4jDataAutoConfiguration.class)\npublic class Neo4jRepositoriesAutoConfiguration {\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2016 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data.neo4j;\n\nimport org.neo4j.ogm.session.Neo4jSession;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.neo4j.repository.GraphRepository;\nimport org.springframework.data.neo4j.repository.config.EnableNeo4jRepositories;\nimport org.springframework.data.neo4j.repository.config.Neo4jRepositoryConfigurationExtension;\nimport org.springframework.data.neo4j.repository.support.Neo4jRepositoryFactoryBean;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Neo4j\n * Repositories.\n * <p>\n * Activates when there is no bean of type {@link Neo4jRepositoryFactoryBean} configured\n * in the context, the Spring Data Neo4j {@link GraphRepository} type is on the classpath,\n * the Neo4j client driver API is on the classpath, and there is no other configured\n * {@link GraphRepository}.\n * <p>\n * Once in effect, the auto-configuration is the equivalent of enabling Neo4j repositories\n * using the {@link EnableNeo4jRepositories} annotation.\n *\n * @author Dave Syer\n * @author Oliver Gierke\n * @author Josh Long\n * @since 1.4.0\n * @see EnableNeo4jRepositories\n */\n@Configuration\n@ConditionalOnClass({ Neo4jSession.class, GraphRepository.class })\n@ConditionalOnMissingBean({ Neo4jRepositoryFactoryBean.class,\n\t\tNeo4jRepositoryConfigurationExtension.class })\n@ConditionalOnProperty(prefix = "spring.data.neo4j.repositories", name = "enabled", havingValue = "true", matchIfMissing = true)\n@Import(Neo4jRepositoriesAutoConfigureRegistrar.class)\n@AutoConfigureAfter(Neo4jDataAutoConfiguration.class)\npublic class Neo4jRepositoriesAutoConfiguration {\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
