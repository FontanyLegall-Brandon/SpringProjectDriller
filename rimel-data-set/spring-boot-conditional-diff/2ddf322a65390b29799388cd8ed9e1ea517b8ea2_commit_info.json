{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': "@@ -27,6 +27,7 @@ import org.springframework.hateoas.LinkDiscoverers;\n import org.springframework.hateoas.Resource;\n import org.springframework.hateoas.config.EnableHypermediaSupport;\n import org.springframework.hateoas.config.EnableHypermediaSupport.HypermediaType;\n+import org.springframework.plugin.core.Plugin;\n \n /**\n  * {@link EnableAutoConfiguration Auto-configuration} for Spring HATEOAS's\n@@ -44,6 +45,7 @@ public class HypermediaAutoConfiguration {\n \n \t@Configuration\n \t@EnableHypermediaSupport(type = HypermediaType.HAL)\n+\t@ConditionalOnClass(Plugin.class)\n \t@ConditionalOnWebApplication\n \tprotected static class HypermediaConfiguration {\n \n", 'source_code': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.hateoas;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.hateoas.LinkDiscoverers;\nimport org.springframework.hateoas.Resource;\nimport org.springframework.hateoas.config.EnableHypermediaSupport;\nimport org.springframework.hateoas.config.EnableHypermediaSupport.HypermediaType;\nimport org.springframework.plugin.core.Plugin;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring HATEOAS\'s\n * {@link EnableHypermediaSupport}.\n * \n * @author Roy Clarkson\n * @author Oliver Gierke\n * @since 1.1.0\n */\n@Configuration\n@ConditionalOnClass(Resource.class)\n@ConditionalOnMissingBean(LinkDiscoverers.class)\n@AutoConfigureAfter(WebMvcAutoConfiguration.class)\npublic class HypermediaAutoConfiguration {\n\n\t@Configuration\n\t@EnableHypermediaSupport(type = HypermediaType.HAL)\n\t@ConditionalOnClass(Plugin.class)\n\t@ConditionalOnWebApplication\n\tprotected static class HypermediaConfiguration {\n\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.hateoas;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.hateoas.LinkDiscoverers;\nimport org.springframework.hateoas.Resource;\nimport org.springframework.hateoas.config.EnableHypermediaSupport;\nimport org.springframework.hateoas.config.EnableHypermediaSupport.HypermediaType;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring HATEOAS\'s\n * {@link EnableHypermediaSupport}.\n * \n * @author Roy Clarkson\n * @author Oliver Gierke\n * @since 1.1.0\n */\n@Configuration\n@ConditionalOnClass(Resource.class)\n@ConditionalOnMissingBean(LinkDiscoverers.class)\n@AutoConfigureAfter(WebMvcAutoConfiguration.class)\npublic class HypermediaAutoConfiguration {\n\n\t@Configuration\n\t@EnableHypermediaSupport(type = HypermediaType.HAL)\n\t@ConditionalOnWebApplication\n\tprotected static class HypermediaConfiguration {\n\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
