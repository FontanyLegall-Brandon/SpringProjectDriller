@@ -29,6 +29,7 @@ import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;
 import org.springframework.boot.autoconfigure.domain.EntityScanPackages;
+import org.springframework.boot.autoconfigure.transaction.TransactionProperties;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.annotation.Bean;
@@ -48,12 +49,13 @@ import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter
  * @author Josh Long
  * @author Vince Bickers
  * @author Stephane Nicoll
+ * @author Kazuki Shimizu
  * @since 1.4.0
  */
 @Configuration
-@ConditionalOnClass(SessionFactory.class)
+@ConditionalOnClass({SessionFactory.class, PlatformTransactionManager.class})
 @ConditionalOnMissingBean(SessionFactory.class)
-@EnableConfigurationProperties(Neo4jProperties.class)
+@EnableConfigurationProperties({Neo4jProperties.class, TransactionProperties.class})
 @SuppressWarnings()
 public class Neo4jDataAutoConfiguration {
 
@@ -87,8 +89,11 @@ public class Neo4jDataAutoConfiguration {
 
 	@Bean
 	@ConditionalOnMissingBean(PlatformTransactionManager.class)
-	public Neo4jTransactionManager transactionManager(SessionFactory sessionFactory) {
-		return new Neo4jTransactionManager(sessionFactory);
+	public Neo4jTransactionManager transactionManager(SessionFactory sessionFactory,
+			TransactionProperties transactionProperties) {
+		Neo4jTransactionManager transactionManager = new Neo4jTransactionManager(sessionFactory);
+		transactionProperties.applyTo(transactionManager);
+		return transactionManager;
 	}
 
 	private String[] getPackagesToScan(ApplicationContext applicationContext) {

