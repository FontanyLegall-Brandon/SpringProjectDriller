{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -41,7 +41,7 @@ import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\n  * @since 1.4.0\n  */\n @Configuration\n-@ConditionalOnClass(DataSource.class)\n+@ConditionalOnClass({ DataSource.class, JdbcTemplate.class })\n @ConditionalOnSingleCandidate(DataSource.class)\n @AutoConfigureAfter(DataSourceAutoConfiguration.class)\n public class JdbcTemplateAutoConfiguration {\n', 'source_code': '/*\n * Copyright 2012-2016 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.jdbc;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jdbc.core.JdbcOperations;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;\nimport org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for {@link JdbcTemplate} and\n * {@link NamedParameterJdbcTemplate}.\n *\n * @author Dave Syer\n * @author Phillip Webb\n * @author Stephane Nicoll\n * @author Kazuki Shimizu\n * @since 1.4.0\n */\n@Configuration\n@ConditionalOnClass({ DataSource.class, JdbcTemplate.class })\n@ConditionalOnSingleCandidate(DataSource.class)\n@AutoConfigureAfter(DataSourceAutoConfiguration.class)\npublic class JdbcTemplateAutoConfiguration {\n\n\tprivate final DataSource dataSource;\n\n\tpublic JdbcTemplateAutoConfiguration(DataSource dataSource) {\n\t\tthis.dataSource = dataSource;\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean(JdbcOperations.class)\n\tpublic JdbcTemplate jdbcTemplate() {\n\t\treturn new JdbcTemplate(this.dataSource);\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean(NamedParameterJdbcOperations.class)\n\tpublic NamedParameterJdbcTemplate namedParameterJdbcTemplate() {\n\t\treturn new NamedParameterJdbcTemplate(this.dataSource);\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2016 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.jdbc;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jdbc.core.JdbcOperations;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;\nimport org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for {@link JdbcTemplate} and\n * {@link NamedParameterJdbcTemplate}.\n *\n * @author Dave Syer\n * @author Phillip Webb\n * @author Stephane Nicoll\n * @author Kazuki Shimizu\n * @since 1.4.0\n */\n@Configuration\n@ConditionalOnClass(DataSource.class)\n@ConditionalOnSingleCandidate(DataSource.class)\n@AutoConfigureAfter(DataSourceAutoConfiguration.class)\npublic class JdbcTemplateAutoConfiguration {\n\n\tprivate final DataSource dataSource;\n\n\tpublic JdbcTemplateAutoConfiguration(DataSource dataSource) {\n\t\tthis.dataSource = dataSource;\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean(JdbcOperations.class)\n\tpublic JdbcTemplate jdbcTemplate() {\n\t\treturn new JdbcTemplate(this.dataSource);\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean(NamedParameterJdbcOperations.class)\n\tpublic NamedParameterJdbcTemplate namedParameterJdbcTemplate() {\n\t\treturn new NamedParameterJdbcTemplate(this.dataSource);\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
