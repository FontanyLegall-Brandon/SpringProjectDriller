{'_old_path': PosixPath('spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/DataSourceMetricsAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/DataSourceMetricsAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -43,8 +43,8 @@ public class DataSourceMetricsAutoConfiguration {\n \n \t@Bean\n \t@ConditionalOnBean(DataSourceMetadataProvider.class)\n-\t@ConditionalOnMissingBean(DataSourcePublicMetrics.class)\n-\tDataSourcePublicMetrics dataSourcePublicMetrics() {\n+\t@ConditionalOnMissingBean\n+\tpublic DataSourcePublicMetrics dataSourcePublicMetrics() {\n \t\treturn new DataSourcePublicMetrics();\n \t}\n \n', 'source_code': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.boot.actuate.endpoint.DataSourcePublicMetrics;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceMetadataProvider;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceMetadataProvidersConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Import;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} that provides metrics on dataSource\n * usage.\n *\n * @author Stephane Nicoll\n * @since 1.2.0\n */\n@ConditionalOnBean(DataSource.class)\n@AutoConfigureAfter(DataSourceAutoConfiguration.class)\n@Import(DataSourceMetadataProvidersConfiguration.class)\npublic class DataSourceMetricsAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnBean(DataSourceMetadataProvider.class)\n\t@ConditionalOnMissingBean\n\tpublic DataSourcePublicMetrics dataSourcePublicMetrics() {\n\t\treturn new DataSourcePublicMetrics();\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.boot.actuate.endpoint.DataSourcePublicMetrics;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceMetadataProvider;\nimport org.springframework.boot.autoconfigure.jdbc.DataSourceMetadataProvidersConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Import;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} that provides metrics on dataSource\n * usage.\n *\n * @author Stephane Nicoll\n * @since 1.2.0\n */\n@ConditionalOnBean(DataSource.class)\n@AutoConfigureAfter(DataSourceAutoConfiguration.class)\n@Import(DataSourceMetadataProvidersConfiguration.class)\npublic class DataSourceMetricsAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnBean(DataSourceMetadataProvider.class)\n\t@ConditionalOnMissingBean(DataSourcePublicMetrics.class)\n\tDataSourcePublicMetrics dataSourcePublicMetrics() {\n\t\treturn new DataSourcePublicMetrics();\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
