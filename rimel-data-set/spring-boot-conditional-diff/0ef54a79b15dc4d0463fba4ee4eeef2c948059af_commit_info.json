{'_old_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/artemis/ArtemisConnectionFactoryConfiguration.java'), '_new_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/artemis/ArtemisConnectionFactoryConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2017 the original author or authors.\n+ * Copyright 2012-2018 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the "License");\n  * you may not use this file except in compliance with the License.\n@@ -19,9 +19,14 @@ package org.springframework.boot.autoconfigure.jms.artemis;\n import javax.jms.ConnectionFactory;\n \n import org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory;\n+import org.apache.activemq.jms.pool.PooledConnectionFactory;\n+import org.apache.commons.pool2.PooledObject;\n \n import org.springframework.beans.factory.ListableBeanFactory;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.autoconfigure.jms.activemq.PooledConnectionFactoryFactory;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n \n@@ -30,16 +35,35 @@ import org.springframework.context.annotation.Configuration;\n  *\n  * @author Eddú Meléndez\n  * @author Phillip Webb\n+ * @author Stephane Nicoll\n  */\n @Configuration\n @ConditionalOnMissingBean(ConnectionFactory.class)\n class ArtemisConnectionFactoryConfiguration {\n \n \t@Bean\n+\t@ConditionalOnProperty(prefix = "spring.artemis.pool", name = "enabled", havingValue = "false", matchIfMissing = true)\n \tpublic ActiveMQConnectionFactory jmsConnectionFactory(ListableBeanFactory beanFactory,\n \t\t\tArtemisProperties properties) {\n \t\treturn new ArtemisConnectionFactoryFactory(beanFactory, properties)\n \t\t\t\t.createConnectionFactory(ActiveMQConnectionFactory.class);\n \t}\n \n+\t@Configuration\n+\t@ConditionalOnClass({ PooledConnectionFactory.class, PooledObject.class })\n+\tstatic class PooledConnectionFactoryConfiguration {\n+\n+\t\t@Bean(destroyMethod = "stop")\n+\t\t@ConditionalOnProperty(prefix = "spring.artemis.pool", name = "enabled", havingValue = "true", matchIfMissing = false)\n+\t\tpublic PooledConnectionFactory pooledJmsConnectionFactory(\n+\t\t\t\tListableBeanFactory beanFactory, ArtemisProperties properties) {\n+\t\t\tActiveMQConnectionFactory connectionFactory = new ArtemisConnectionFactoryFactory(\n+\t\t\t\t\tbeanFactory, properties)\n+\t\t\t\t\t\t\t.createConnectionFactory(ActiveMQConnectionFactory.class);\n+\t\t\treturn new PooledConnectionFactoryFactory(properties.getPool())\n+\t\t\t\t\t.createPooledConnectionFactory(connectionFactory);\n+\t\t}\n+\n+\t}\n+\n }\n', 'source_code': '/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.jms.artemis;\n\nimport javax.jms.ConnectionFactory;\n\nimport org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory;\nimport org.apache.activemq.jms.pool.PooledConnectionFactory;\nimport org.apache.commons.pool2.PooledObject;\n\nimport org.springframework.beans.factory.ListableBeanFactory;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.autoconfigure.jms.activemq.PooledConnectionFactoryFactory;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * Configuration for Artemis {@link ConnectionFactory}.\n *\n * @author Eddú Meléndez\n * @author Phillip Webb\n * @author Stephane Nicoll\n */\n@Configuration\n@ConditionalOnMissingBean(ConnectionFactory.class)\nclass ArtemisConnectionFactoryConfiguration {\n\n\t@Bean\n\t@ConditionalOnProperty(prefix = "spring.artemis.pool", name = "enabled", havingValue = "false", matchIfMissing = true)\n\tpublic ActiveMQConnectionFactory jmsConnectionFactory(ListableBeanFactory beanFactory,\n\t\t\tArtemisProperties properties) {\n\t\treturn new ArtemisConnectionFactoryFactory(beanFactory, properties)\n\t\t\t\t.createConnectionFactory(ActiveMQConnectionFactory.class);\n\t}\n\n\t@Configuration\n\t@ConditionalOnClass({ PooledConnectionFactory.class, PooledObject.class })\n\tstatic class PooledConnectionFactoryConfiguration {\n\n\t\t@Bean(destroyMethod = "stop")\n\t\t@ConditionalOnProperty(prefix = "spring.artemis.pool", name = "enabled", havingValue = "true", matchIfMissing = false)\n\t\tpublic PooledConnectionFactory pooledJmsConnectionFactory(\n\t\t\t\tListableBeanFactory beanFactory, ArtemisProperties properties) {\n\t\t\tActiveMQConnectionFactory connectionFactory = new ArtemisConnectionFactoryFactory(\n\t\t\t\t\tbeanFactory, properties)\n\t\t\t\t\t\t\t.createConnectionFactory(ActiveMQConnectionFactory.class);\n\t\t\treturn new PooledConnectionFactoryFactory(properties.getPool())\n\t\t\t\t\t.createPooledConnectionFactory(connectionFactory);\n\t\t}\n\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.jms.artemis;\n\nimport javax.jms.ConnectionFactory;\n\nimport org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory;\n\nimport org.springframework.beans.factory.ListableBeanFactory;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * Configuration for Artemis {@link ConnectionFactory}.\n *\n * @author Eddú Meléndez\n * @author Phillip Webb\n */\n@Configuration\n@ConditionalOnMissingBean(ConnectionFactory.class)\nclass ArtemisConnectionFactoryConfiguration {\n\n\t@Bean\n\tpublic ActiveMQConnectionFactory jmsConnectionFactory(ListableBeanFactory beanFactory,\n\t\t\tArtemisProperties properties) {\n\t\treturn new ArtemisConnectionFactoryFactory(beanFactory, properties)\n\t\t\t\t.createConnectionFactory(ActiveMQConnectionFactory.class);\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
