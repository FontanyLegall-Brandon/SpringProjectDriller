@@ -1,91 +0,0 @@
-
-
-package org.springframework.boot.autoconfigure.web;
-
-import org.springframework.beans.BeansException;
-import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;
-import org.springframework.boot.autoconfigure.condition.SearchStrategy;
-import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;
-import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizer;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
-import org.springframework.context.ApplicationContext;
-import org.springframework.context.ApplicationContextAware;
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.core.Ordered;
-import org.springframework.util.Assert;
-import org.springframework.util.StringUtils;
-
-
-@Configuration
-@EnableConfigurationProperties
-@ConditionalOnWebApplication
-public class ServerPropertiesAutoConfiguration {
-
-	@Bean
-	@ConditionalOnMissingBean(search = SearchStrategy.CURRENT)
-	public ServerProperties serverProperties() {
-		return new ServerProperties();
-	}
-
-	@Bean
-	public DuplicateServerPropertiesDetector duplicateServerPropertiesDetector() {
-		return new DuplicateServerPropertiesDetector();
-	}
-
-	
-	private static class DuplicateServerPropertiesDetector implements
-			EmbeddedServletContainerCustomizer, Ordered, ApplicationContextAware {
-
-		private ApplicationContext applicationContext;
-
-		@Override
-		public int getOrder() {
-			return 0;
-		}
-
-		@Override
-		public void setApplicationContext(ApplicationContext applicationContext)
-				throws BeansException {
-			this.applicationContext = applicationContext;
-		}
-
-		@Override
-		public void customize(ConfigurableEmbeddedServletContainer container) {
-			
-			
-			String[] serverPropertiesBeans = this.applicationContext
-					.getBeanNamesForType(ServerProperties.class);
-			Assert.state(serverPropertiesBeans.length == 1,
-					 + StringUtils
-							.arrayToCommaDelimitedString(serverPropertiesBeans));
-		}
-
-	}
-
-}

