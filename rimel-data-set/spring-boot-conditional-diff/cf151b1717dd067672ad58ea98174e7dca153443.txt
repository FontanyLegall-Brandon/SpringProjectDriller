@@ -0,0 +1,62 @@
+
+
+package org.springframework.boot.actuate.autoconfigure.session;
+
+import org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;
+import org.springframework.boot.actuate.session.SessionsEndpoint;
+import org.springframework.boot.actuate.session.SessionsWebEndpointExtension;
+import org.springframework.boot.autoconfigure.AutoConfigureAfter;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.session.SessionAutoConfiguration;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.session.FindByIndexNameSessionRepository;
+import org.springframework.session.Session;
+
+
+@Configuration
+@ConditionalOnClass(FindByIndexNameSessionRepository.class)
+@AutoConfigureAfter(SessionAutoConfiguration.class)
+public class SessionsEndpointAutoConfiguration {
+
+	@Bean
+	@ConditionalOnBean(FindByIndexNameSessionRepository.class)
+	@ConditionalOnMissingBean
+	@ConditionalOnEnabledEndpoint
+	public SessionsEndpoint sessionEndpoint(
+			FindByIndexNameSessionRepository<? extends Session> sessionRepository) {
+		return new SessionsEndpoint(sessionRepository);
+	}
+
+	@Bean
+	@ConditionalOnMissingBean
+	@ConditionalOnEnabledEndpoint
+	@ConditionalOnBean(SessionsEndpoint.class)
+	public SessionsWebEndpointExtension sessionsWebEndpointExtension(
+			SessionsEndpoint sessionsEndpoint) {
+		return new SessionsWebEndpointExtension(sessionsEndpoint);
+	}
+
+}

