@@ -0,0 +1,64 @@
+
+
+package org.springframework.boot.autoconfigure.jdbc;
+
+import javax.annotation.PostConstruct;
+
+import com.zaxxer.hikari.HikariDataSource;
+
+import org.springframework.beans.factory.ObjectProvider;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.jmx.export.MBeanExporter;
+
+
+@Configuration
+@ConditionalOnProperty(prefix = , name = , havingValue = , matchIfMissing = true)
+class DataSourceJmxConfiguration {
+
+	@Configuration
+	@ConditionalOnClass(HikariDataSource.class)
+	@ConditionalOnSingleCandidate(HikariDataSource.class)
+	static class Hikari {
+
+		private final HikariDataSource dataSource;
+
+		private final ObjectProvider<MBeanExporter> mBeanExporter;
+
+		Hikari(HikariDataSource dataSource,
+				ObjectProvider<MBeanExporter> mBeanExporter) {
+			this.dataSource = dataSource;
+			this.mBeanExporter = mBeanExporter;
+		}
+
+		@PostConstruct
+		public void validateMBeans() {
+			MBeanExporter exporter = this.mBeanExporter.getIfUnique();
+			if (exporter != null && this.dataSource.isRegisterMbeans()) {
+				exporter.addExcludedBean();
+			}
+		}
+
+	}
+
+}

