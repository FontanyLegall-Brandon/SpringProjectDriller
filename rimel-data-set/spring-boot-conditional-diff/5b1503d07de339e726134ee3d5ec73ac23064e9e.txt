@@ -16,8 +16,6 @@
 
 package org.springframework.boot.autoconfigure.web;
 
-import java.util.Arrays;
-
 import javax.servlet.Servlet;
 
 import org.apache.catalina.startup.Tomcat;
@@ -34,24 +32,18 @@ import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.autoconfigure.condition.SearchStrategy;
-import org.springframework.boot.autoconfigure.condition.SpringBootCondition;
 import org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration.EmbeddedServletContainerCustomizerBeanPostProcessorRegistrar;
 import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizerBeanPostProcessor;
 import org.springframework.boot.context.embedded.EmbeddedServletContainerFactory;
-import org.springframework.boot.context.embedded.ServletContextInitializer;
 import org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainerFactory;
 import org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.ConditionContext;
-import org.springframework.context.annotation.Conditional;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.context.annotation.Import;
 import org.springframework.context.annotation.ImportBeanDefinitionRegistrar;
 import org.springframework.core.Ordered;
 import org.springframework.core.annotation.Order;
-import org.springframework.core.type.AnnotatedTypeMetadata;
 import org.springframework.core.type.AnnotationMetadata;
-import org.springframework.web.servlet.DispatcherServlet;
 
 
-	public static final String DEFAULT_DISPATCHER_SERVLET_BEAN_NAME = ;
-
-	
-	@ConditionalOnClass(DispatcherServlet.class)
-	public static class DispatcherServletConfiguration {
-
-		@Bean(name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME)
-		@Conditional(DefaultServletCondition.class)
-		public DispatcherServlet dispatcherServlet() {
-			return new DispatcherServlet();
-		}
-
-	}
-
 	
@@ -146,25 +118,4 @@ public class EmbeddedServletContainerAutoConfiguration {
 		}
 	}
 
-	private static class DefaultServletCondition extends SpringBootCondition {
-
-		@Override
-		public Outcome getMatchOutcome(ConditionContext context,
-				AnnotatedTypeMetadata metadata) {
-
-			ConfigurableListableBeanFactory beanFactory = context.getBeanFactory();
-			String[] beans = beanFactory.getBeanNamesForType(DispatcherServlet.class,
-					false, false);
-			if (beans.length == 0) {
-				return Outcome.match();
-			}
-			if (Arrays.asList(beans).contains(DEFAULT_DISPATCHER_SERVLET_BEAN_NAME)) {
-				return Outcome.noMatch(
-						+ DEFAULT_DISPATCHER_SERVLET_BEAN_NAME);
-			}
-			return Outcome.match(
-					+ DEFAULT_DISPATCHER_SERVLET_BEAN_NAME);
-		}
-	}
-
 }

