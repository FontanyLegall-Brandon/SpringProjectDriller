@@ -1,53 +0,0 @@
-
-
-package org.springframework.boot.actuate.autoconfigure.metrics.integration;
-
-import io.micrometer.core.instrument.MeterRegistry;
-
-import org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration;
-import org.springframework.boot.autoconfigure.AutoConfigureAfter;
-import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
-import org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration;
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.integration.config.EnableIntegration;
-import org.springframework.integration.support.management.micrometer.MicrometerMetricsFactory;
-
-
-@Configuration
-@ConditionalOnClass({ EnableIntegration.class, MeterRegistry.class })
-@AutoConfigureAfter({ IntegrationAutoConfiguration.class,
-		SimpleMetricsExportAutoConfiguration.class })
-@ConditionalOnBean(MeterRegistry.class)
-public class IntegrationMetricsAutoConfiguration {
-
-	@Bean
-	public MicrometerMetricsFactory integrationMicrometerMetricsFactory(
-			MeterRegistry meterRegistry) {
-		return new MicrometerMetricsFactory(meterRegistry);
-	}
-
-}

