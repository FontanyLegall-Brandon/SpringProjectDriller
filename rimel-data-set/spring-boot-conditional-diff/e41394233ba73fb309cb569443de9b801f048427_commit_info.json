{'_old_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/reactive/WebFluxSecurityConfiguration.java'), '_new_path': None, 'change_type': <ModificationType.DELETE: 4>, 'diff': '@@ -1,46 +0,0 @@\n-/*\n- * Copyright 2012-2018 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the "License");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an "AS IS" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.springframework.boot.autoconfigure.security.reactive;\n-\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\n-import org.springframework.context.annotation.Configuration;\n-import org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;\n-import org.springframework.security.web.server.WebFilterChainProxy;\n-\n-/**\n- * Switches on {@link EnableWebFluxSecurity} for a reactive web application if this\n- * annotation has not been added by the user. It delegates to Spring Security\'s\n- * content-negotiation mechanism for authentication. This configuration also backs off if\n- * a bean of type {@link WebFilterChainProxy} has been configured in any other way.\n- *\n- * @author Madhura Bhave\n- */\n-@Configuration\n-@ConditionalOnClass({ EnableWebFluxSecurity.class, WebFilterChainProxy.class })\n-@ConditionalOnMissingBean(WebFilterChainProxy.class)\n-@ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.REACTIVE)\n-class WebFluxSecurityConfiguration {\n-\n-\t@Configuration\n-\t@EnableWebFluxSecurity\n-\tstatic class EnableWebFluxSecurityConfiguration {\n-\n-\t}\n-\n-}\n', 'source_code': None, 'source_code_before': '/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.security.reactive;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;\nimport org.springframework.security.web.server.WebFilterChainProxy;\n\n/**\n * Switches on {@link EnableWebFluxSecurity} for a reactive web application if this\n * annotation has not been added by the user. It delegates to Spring Security\'s\n * content-negotiation mechanism for authentication. This configuration also backs off if\n * a bean of type {@link WebFilterChainProxy} has been configured in any other way.\n *\n * @author Madhura Bhave\n */\n@Configuration\n@ConditionalOnClass({ EnableWebFluxSecurity.class, WebFilterChainProxy.class })\n@ConditionalOnMissingBean(WebFilterChainProxy.class)\n@ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.REACTIVE)\nclass WebFluxSecurityConfiguration {\n\n\t@Configuration\n\t@EnableWebFluxSecurity\n\tstatic class EnableWebFluxSecurityConfiguration {\n\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
