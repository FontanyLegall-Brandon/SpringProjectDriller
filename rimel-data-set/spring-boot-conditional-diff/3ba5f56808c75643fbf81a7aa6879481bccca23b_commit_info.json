{'_old_path': None, '_new_path': PosixPath('spring-bootstrap-samples/spring-bootstrap-actuator-ui-sample/src/main/java/org/springframework/bootstrap/sample/ui/ActuatorUiBootstrapApplication.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,51 @@\n+package org.springframework.bootstrap.sample.ui;\n+\n+import java.util.Date;\n+import java.util.Map;\n+\n+import org.springframework.bootstrap.SpringApplication;\n+import org.springframework.bootstrap.actuate.autoconfigure.ConditionalOnManagementContext;\n+import org.springframework.bootstrap.actuate.autoconfigure.ManagementAutoConfiguration;\n+import org.springframework.bootstrap.actuate.autoconfigure.SecurityAutoConfiguration;\n+import org.springframework.bootstrap.context.annotation.ConditionalOnExpression;\n+import org.springframework.bootstrap.context.annotation.EnableAutoConfiguration;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+\n+@EnableAutoConfiguration(exclude = { SecurityAutoConfiguration.class,\n+\t\tManagementAutoConfiguration.class })\n+@ComponentScan\n+@Controller\n+public class ActuatorUiBootstrapApplication {\n+\n+\t@RequestMapping("/")\n+\tpublic String home(Map<String, Object> model) {\n+\t\tmodel.put("message", "Hello World");\n+\t\tmodel.put("title", "Hello Home");\n+\t\tmodel.put("date", new Date());\n+\t\treturn "home";\n+\t}\n+\n+\tpublic static void main(String[] args) throws Exception {\n+\t\tSpringApplication.run(ActuatorUiBootstrapApplication.class, args);\n+\t}\n+\n+\t@Configuration\n+\t@ConditionalOnExpression("${server.port:8080} != ${management.port:${server.port:8080}}")\n+\t@Import(ManagementAutoConfiguration.class)\n+\tprotected static class ManagementConfiguration {\n+\n+\t}\n+\n+\t@Configuration\n+\t@ConditionalOnExpression("${server.port:8080} != ${management.port:${server.port:8080}}")\n+\t@ConditionalOnManagementContext\n+\t@Import(SecurityAutoConfiguration.class)\n+\tprotected static class ManagementSecurityConfiguration {\n+\n+\t}\n+\n+}\n', 'source_code': 'package org.springframework.bootstrap.sample.ui;\n\nimport java.util.Date;\nimport java.util.Map;\n\nimport org.springframework.bootstrap.SpringApplication;\nimport org.springframework.bootstrap.actuate.autoconfigure.ConditionalOnManagementContext;\nimport org.springframework.bootstrap.actuate.autoconfigure.ManagementAutoConfiguration;\nimport org.springframework.bootstrap.actuate.autoconfigure.SecurityAutoConfiguration;\nimport org.springframework.bootstrap.context.annotation.ConditionalOnExpression;\nimport org.springframework.bootstrap.context.annotation.EnableAutoConfiguration;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@EnableAutoConfiguration(exclude = { SecurityAutoConfiguration.class,\n\t\tManagementAutoConfiguration.class })\n@ComponentScan\n@Controller\npublic class ActuatorUiBootstrapApplication {\n\n\t@RequestMapping("/")\n\tpublic String home(Map<String, Object> model) {\n\t\tmodel.put("message", "Hello World");\n\t\tmodel.put("title", "Hello Home");\n\t\tmodel.put("date", new Date());\n\t\treturn "home";\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tSpringApplication.run(ActuatorUiBootstrapApplication.class, args);\n\t}\n\n\t@Configuration\n\t@ConditionalOnExpression("${server.port:8080} != ${management.port:${server.port:8080}}")\n\t@Import(ManagementAutoConfiguration.class)\n\tprotected static class ManagementConfiguration {\n\n\t}\n\n\t@Configuration\n\t@ConditionalOnExpression("${server.port:8080} != ${management.port:${server.port:8080}}")\n\t@ConditionalOnManagementContext\n\t@Import(SecurityAutoConfiguration.class)\n\tprotected static class ManagementSecurityConfiguration {\n\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
