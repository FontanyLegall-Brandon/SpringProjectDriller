@@ -0,0 +1,69 @@
+
+
+package org.springframework.boot.autoconfigure.data.neo4j;
+
+import com.github.benmanes.caffeine.cache.Caffeine;
+
+import org.springframework.beans.factory.config.ConfigurableBeanFactory;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnNotWebApplication;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;
+import org.springframework.cache.caffeine.CaffeineCacheManager;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Scope;
+import org.springframework.context.annotation.ScopedProxyMode;
+import org.springframework.data.neo4j.bookmark.BeanFactoryBookmarkOperationAdvisor;
+import org.springframework.data.neo4j.bookmark.BookmarkInterceptor;
+import org.springframework.data.neo4j.bookmark.BookmarkManager;
+import org.springframework.data.neo4j.bookmark.CaffeineBookmarkManager;
+import org.springframework.web.context.WebApplicationContext;
+
+
+@Configuration
+@ConditionalOnClass({ Caffeine.class, CaffeineCacheManager.class })
+@ConditionalOnMissingBean(BookmarkManager.class)
+@ConditionalOnBean({ BeanFactoryBookmarkOperationAdvisor.class,
+		BookmarkInterceptor.class })
+class Neo4jBookmarkManagementConfiguration {
+
+	static final String BOOKMARK_MANAGER_BEAN_NAME = ;
+
+	@Bean(BOOKMARK_MANAGER_BEAN_NAME)
+	@Scope(value = WebApplicationContext.SCOPE_REQUEST, proxyMode = ScopedProxyMode.INTERFACES)
+	@ConditionalOnWebApplication
+	public BookmarkManager requestScopedBookmarkManager() {
+		return new CaffeineBookmarkManager();
+	}
+
+	@Bean(BOOKMARK_MANAGER_BEAN_NAME)
+	@Scope(ConfigurableBeanFactory.SCOPE_SINGLETON)
+	@ConditionalOnNotWebApplication
+	public BookmarkManager singletonScopedBookmarkManager() {
+		return new CaffeineBookmarkManager();
+	}
+
+}

