@@ -42,8 +42,8 @@ import org.hornetq.jms.server.embedded.EmbeddedJMS;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.autoconfigure.AutoConfigureBefore;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
@@ -53,12 +53,13 @@ import org.springframework.util.ClassUtils;
 
 
 @Configuration
 @AutoConfigureBefore(JmsAutoConfiguration.class)
@@ -73,9 +74,9 @@ public class HornetQAutoConfiguration {
 
 	
 	@Bean
 	@ConditionalOnMissingBean
@@ -131,7 +132,7 @@ public class HornetQAutoConfiguration {
 	 */
 	@Configuration
 	@ConditionalOnClass(name = EMBEDDED_JMS_CLASS)
-	@ConditionalOnProperty(prefix = , value = )
+	@ConditionalOnExpression()
 	static class EmbeddedServerConfiguration {
 
 		@Autowired
@@ -159,14 +160,14 @@ public class HornetQAutoConfiguration {
 				org.hornetq.core.config.Configuration configuration,
 				JMSConfiguration jmsConfiguration) {
 			EmbeddedJMS server = new EmbeddedJMS();
-			applyCustomizers(configuration);
+			customize(configuration);
 			server.setConfiguration(configuration);
 			server.setJmsConfiguration(jmsConfiguration);
 			server.setRegistry(new HornetQNoOpBindingRegistry());
 			return server;
 		}
 
-		private void applyCustomizers(org.hornetq.core.config.Configuration configuration) {
+		private void customize(org.hornetq.core.config.Configuration configuration) {
 			if (this.configurationCustomizers != null) {
 				AnnotationAwareOrderComparator.sort(this.configurationCustomizers);
 				for (HornetQConfigurationCustomizer customizer : this.configurationCustomizers) {
@@ -182,7 +183,7 @@ public class HornetQAutoConfiguration {
 			addAll(configuration.getQueueConfigurations(), this.queuesConfiguration);
 			addAll(configuration.getTopicConfigurations(), this.topicsConfiguration);
 			addQueues(configuration, this.properties.getEmbedded().getQueues());
-			addTopis(configuration, this.properties.getEmbedded().getTopics());
+			addTopics(configuration, this.properties.getEmbedded().getTopics());
 			return configuration;
 		}
 
@@ -201,7 +202,7 @@ public class HornetQAutoConfiguration {
 			}
 		}
 
-		private void addTopis(JMSConfiguration configuration, String[] topics) {
+		private void addTopics(JMSConfiguration configuration, String[] topics) {
 			for (String topic : topics) {
 				configuration.getTopicConfigurations().add(
 						new TopicConfigurationImpl(topic,  + topic));

