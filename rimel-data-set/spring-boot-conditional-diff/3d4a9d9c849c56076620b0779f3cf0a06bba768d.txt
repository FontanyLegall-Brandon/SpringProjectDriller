@@ -1,5 +1,5 @@
 /*
- * Copyright 2012-2014 the original author or authors.
+ * Copyright 2012-2016 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the );
  * you may not use this file except in compliance with the License.
@@ -21,7 +21,6 @@ import javax.transaction.TransactionManager;
 
 import org.apache.activemq.ActiveMQConnectionFactory;
 import org.apache.activemq.ActiveMQXAConnectionFactory;
-import org.apache.activemq.pool.PooledConnectionFactory;
 
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
@@ -46,7 +45,7 @@ import org.springframework.context.annotation.Primary;
 class ActiveMQXAConnectionFactoryConfiguration {
 
 	@Primary
-	@Bean(name = { ,  })
+	@Bean(name = {, })
 	public ConnectionFactory jmsConnectionFactory(ActiveMQProperties properties,
 			XAConnectionFactoryWrapper wrapper) throws Exception {
 		ActiveMQXAConnectionFactory connectionFactory = new ActiveMQConnectionFactoryFactory(
@@ -62,26 +61,4 @@ class ActiveMQXAConnectionFactoryConfiguration {
 				.createConnectionFactory(ActiveMQConnectionFactory.class);
 	}
 
-	@ConditionalOnClass(PooledConnectionFactory.class)
-	@ConditionalOnProperty(prefix = , name = , havingValue = , matchIfMissing = false)
-	static class PooledConnectionFactoryConfiguration {
-
-		@Bean(destroyMethod = )
-		public PooledConnectionFactory pooledNonXaJmsConnectionFactory(
-				ActiveMQProperties properties) {
-			PooledConnectionFactory pooledConnectionFactory = new PooledConnectionFactory(
-					new ActiveMQConnectionFactoryFactory(properties)
-							.createConnectionFactory(ActiveMQConnectionFactory.class));
-
-			ActiveMQProperties.Pool pool = properties.getPool();
-			pooledConnectionFactory.setExpiryTimeout(pool.getExpiryTimeMillis());
-			pooledConnectionFactory.setMaxConnections(pool.getMaxConnections());
-			pooledConnectionFactory.setIdleTimeout(pool.getIdleTimeMillis());
-			pooledConnectionFactory.setMaximumActiveSessionPerConnection(pool.getMaxSessionsPerConnection());
-			pooledConnectionFactory.setTimeBetweenExpirationCheckMillis(pool.getTimeBetweenEvictionRunsMillis());
-
-			return pooledConnectionFactory;
-		}
-	}
-
 }

