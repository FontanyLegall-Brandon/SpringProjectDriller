{'_old_path': None, '_new_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/mongo/MongoReactiveHealthIndicatorAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2012-2018 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.actuate.autoconfigure.mongo;\n+\n+import java.util.Map;\n+\n+import org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthIndicatorConfiguration;\n+import org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;\n+import org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration;\n+import org.springframework.boot.actuate.health.ReactiveHealthIndicator;\n+import org.springframework.boot.actuate.mongo.MongoReactiveHealthIndicator;\n+import org.springframework.boot.autoconfigure.AutoConfigureAfter;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.data.mongodb.core.ReactiveMongoTemplate;\n+\n+\n+\n+/**\n+ * {@link EnableAutoConfiguration Auto-configuration} for {@link MongoReactiveHealthIndicator}.\n+ *\n+ * @author Yulin Qin\n+ * @since 2.0.0\n+ */\n+@Configuration\n+@ConditionalOnClass(ReactiveMongoTemplate.class)\n+@ConditionalOnBean(ReactiveMongoTemplate.class)\n+@ConditionalOnEnabledHealthIndicator("mongo")\n+@AutoConfigureBefore(HealthIndicatorAutoConfiguration.class)\n+@AutoConfigureAfter(MongoReactiveDataAutoConfiguration.class)\n+public class MongoReactiveHealthIndicatorAutoConfiguration extends\n+\t\tCompositeReactiveHealthIndicatorConfiguration<MongoReactiveHealthIndicator, ReactiveMongoTemplate> {\n+\n+\tprivate final Map<String, ReactiveMongoTemplate> reactiveMongoTemplate;\n+\n+\tpublic MongoReactiveHealthIndicatorAutoConfiguration(\n+\t\t\tMap<String, ReactiveMongoTemplate> reactiveMongoTemplate) {\n+\t\tthis.reactiveMongoTemplate = reactiveMongoTemplate;\n+\t}\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean(name = "mongoReactiveHealthIndicator")\n+\tpublic ReactiveHealthIndicator mongoReactiveHealthIndicator() {\n+\t\treturn createHealthIndicator(this.reactiveMongoTemplate);\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.mongo;\n\nimport java.util.Map;\n\nimport org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthIndicatorConfiguration;\nimport org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;\nimport org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration;\nimport org.springframework.boot.actuate.health.ReactiveHealthIndicator;\nimport org.springframework.boot.actuate.mongo.MongoReactiveHealthIndicator;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.AutoConfigureBefore;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.mongodb.core.ReactiveMongoTemplate;\n\n\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for {@link MongoReactiveHealthIndicator}.\n *\n * @author Yulin Qin\n * @since 2.0.0\n */\n@Configuration\n@ConditionalOnClass(ReactiveMongoTemplate.class)\n@ConditionalOnBean(ReactiveMongoTemplate.class)\n@ConditionalOnEnabledHealthIndicator("mongo")\n@AutoConfigureBefore(HealthIndicatorAutoConfiguration.class)\n@AutoConfigureAfter(MongoReactiveDataAutoConfiguration.class)\npublic class MongoReactiveHealthIndicatorAutoConfiguration extends\n\t\tCompositeReactiveHealthIndicatorConfiguration<MongoReactiveHealthIndicator, ReactiveMongoTemplate> {\n\n\tprivate final Map<String, ReactiveMongoTemplate> reactiveMongoTemplate;\n\n\tpublic MongoReactiveHealthIndicatorAutoConfiguration(\n\t\t\tMap<String, ReactiveMongoTemplate> reactiveMongoTemplate) {\n\t\tthis.reactiveMongoTemplate = reactiveMongoTemplate;\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean(name = "mongoReactiveHealthIndicator")\n\tpublic ReactiveHealthIndicator mongoReactiveHealthIndicator() {\n\t\treturn createHealthIndicator(this.reactiveMongoTemplate);\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
