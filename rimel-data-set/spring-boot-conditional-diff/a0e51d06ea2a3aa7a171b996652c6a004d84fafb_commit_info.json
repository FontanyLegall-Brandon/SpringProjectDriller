{'_old_path': None, '_new_path': PosixPath('spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/TraceFilterConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2012-2013 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.bootstrap.actuate.autoconfigure;\n+\n+import javax.servlet.Servlet;\n+\n+import org.springframework.beans.factory.BeanFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.bootstrap.actuate.trace.InMemoryTraceRepository;\n+import org.springframework.bootstrap.actuate.trace.TraceRepository;\n+import org.springframework.bootstrap.actuate.trace.WebRequestLoggingFilter;\n+import org.springframework.bootstrap.context.annotation.ConditionalOnClass;\n+import org.springframework.bootstrap.context.annotation.ConditionalOnMissingBean;\n+import org.springframework.bootstrap.context.annotation.EnableAutoConfiguration;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.servlet.DispatcherServlet;\n+\n+/**\n+ * {@link EnableAutoConfiguration Auto-configuration} for /trace endpoint.\n+ * \n+ * @author Dave Syer\n+ */\n+@Configuration\n+public class TraceFilterConfiguration {\n+\n+\t@Autowired(required = false)\n+\tprivate TraceRepository traceRepository = new InMemoryTraceRepository();\n+\n+\t@Value("${management.dump_requests:false}")\n+\tprivate boolean dumpRequests;\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean(TraceRepository.class)\n+\tprotected TraceRepository traceRepository() {\n+\t\treturn this.traceRepository;\n+\t}\n+\n+\t@Bean\n+\t@ConditionalOnClass({ Servlet.class, DispatcherServlet.class })\n+\tpublic WebRequestLoggingFilter securityFilterPostProcessor(BeanFactory beanFactory) {\n+\t\tWebRequestLoggingFilter filter = new WebRequestLoggingFilter(this.traceRepository);\n+\t\tfilter.setDumpRequests(this.dumpRequests);\n+\t\treturn filter;\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.bootstrap.actuate.autoconfigure;\n\nimport javax.servlet.Servlet;\n\nimport org.springframework.beans.factory.BeanFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.bootstrap.actuate.trace.InMemoryTraceRepository;\nimport org.springframework.bootstrap.actuate.trace.TraceRepository;\nimport org.springframework.bootstrap.actuate.trace.WebRequestLoggingFilter;\nimport org.springframework.bootstrap.context.annotation.ConditionalOnClass;\nimport org.springframework.bootstrap.context.annotation.ConditionalOnMissingBean;\nimport org.springframework.bootstrap.context.annotation.EnableAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.DispatcherServlet;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for /trace endpoint.\n * \n * @author Dave Syer\n */\n@Configuration\npublic class TraceFilterConfiguration {\n\n\t@Autowired(required = false)\n\tprivate TraceRepository traceRepository = new InMemoryTraceRepository();\n\n\t@Value("${management.dump_requests:false}")\n\tprivate boolean dumpRequests;\n\n\t@Bean\n\t@ConditionalOnMissingBean(TraceRepository.class)\n\tprotected TraceRepository traceRepository() {\n\t\treturn this.traceRepository;\n\t}\n\n\t@Bean\n\t@ConditionalOnClass({ Servlet.class, DispatcherServlet.class })\n\tpublic WebRequestLoggingFilter securityFilterPostProcessor(BeanFactory beanFactory) {\n\t\tWebRequestLoggingFilter filter = new WebRequestLoggingFilter(this.traceRepository);\n\t\tfilter.setDumpRequests(this.dumpRequests);\n\t\treturn filter;\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
