@@ -18,7 +18,7 @@ package org.springframework.boot.actuate.autoconfigure.couchbase;
 
 import java.util.Map;
 
-import com.couchbase.client.java.Bucket;
+import com.couchbase.client.java.Cluster;
 
 import org.springframework.boot.actuate.autoconfigure.health.CompositeHealthIndicatorConfiguration;
 import org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;
@@ -31,11 +31,9 @@ import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
-import org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
-import org.springframework.data.couchbase.core.CouchbaseOperations;
 
 
 @Configuration
-@ConditionalOnClass({ CouchbaseOperations.class, Bucket.class })
-@ConditionalOnBean(CouchbaseOperations.class)
+@ConditionalOnClass(Cluster.class)
+@ConditionalOnBean(Cluster.class)
 @ConditionalOnEnabledHealthIndicator()
 @AutoConfigureBefore(HealthIndicatorAutoConfiguration.class)
-@AutoConfigureAfter(CouchbaseDataAutoConfiguration.class)
-@EnableConfigurationProperties(CouchbaseHealthIndicatorProperties.class)
-public class CouchbaseHealthIndicatorAutoConfiguration extends
-		CompositeHealthIndicatorConfiguration<CouchbaseHealthIndicator, CouchbaseOperations> {
+@AutoConfigureAfter(CouchbaseAutoConfiguration.class)
+public class CouchbaseHealthIndicatorAutoConfiguration
+		extends CompositeHealthIndicatorConfiguration<CouchbaseHealthIndicator, Cluster> {
 
-	private final Map<String, CouchbaseOperations> couchbaseOperations;
+	private final Map<String, Cluster> clusters;
 
-	private final CouchbaseHealthIndicatorProperties properties;
-
-	public CouchbaseHealthIndicatorAutoConfiguration(
-			Map<String, CouchbaseOperations> couchbaseOperations,
-			CouchbaseHealthIndicatorProperties properties) {
-		this.couchbaseOperations = couchbaseOperations;
-		this.properties = properties;
+	public CouchbaseHealthIndicatorAutoConfiguration(Map<String, Cluster> clusters) {
+		this.clusters = clusters;
 	}
 
 	@Bean
 	@ConditionalOnMissingBean(name = )
 	public HealthIndicator couchbaseHealthIndicator() {
-		return createHealthIndicator(this.couchbaseOperations);
+		return createHealthIndicator(this.clusters);
 	}
 
 	@Override
-	protected CouchbaseHealthIndicator createHealthIndicator(
-			CouchbaseOperations couchbaseOperations) {
-		return new CouchbaseHealthIndicator(couchbaseOperations,
-				this.properties.getTimeout());
+	protected CouchbaseHealthIndicator createHealthIndicator(Cluster cluster) {
+		return new CouchbaseHealthIndicator(cluster);
 	}
 
 }

