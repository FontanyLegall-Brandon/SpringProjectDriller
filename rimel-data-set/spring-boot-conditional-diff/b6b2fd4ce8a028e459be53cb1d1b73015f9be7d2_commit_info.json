{'_old_path': PosixPath('spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -19,6 +19,7 @@ package org.springframework.boot.actuate.autoconfigure.audit;\n import org.springframework.boot.actuate.audit.AuditEventRepository;\n import org.springframework.boot.actuate.audit.AuditEventsEndpoint;\n import org.springframework.boot.actuate.audit.AuditEventsJmxEndpointExtension;\n+import org.springframework.boot.actuate.audit.AuditEventsWebEndpointExtension;\n import org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;\n import org.springframework.boot.actuate.logging.LoggersEndpoint;\n import org.springframework.boot.autoconfigure.AutoConfigureAfter;\n@@ -33,6 +34,7 @@ import org.springframework.context.annotation.Configuration;\n  *\n  * @author Phillip Webb\n  * @author Andy Wilkinson\n+ * @author Vedran Pavic\n  * @since 2.0.0\n  */\n @Configuration\n@@ -57,4 +59,13 @@ public class AuditEventsEndpointAutoConfiguration {\n \t\treturn new AuditEventsJmxEndpointExtension(auditEventsEndpoint);\n \t}\n \n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\t@ConditionalOnEnabledEndpoint\n+\t@ConditionalOnBean(AuditEventsEndpoint.class)\n+\tpublic AuditEventsWebEndpointExtension auditEventsWebEndpointExtension(\n+\t\t\tAuditEventsEndpoint auditEventsEndpoint) {\n+\t\treturn new AuditEventsWebEndpointExtension(auditEventsEndpoint);\n+\t}\n+\n }\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.audit;\n\nimport org.springframework.boot.actuate.audit.AuditEventRepository;\nimport org.springframework.boot.actuate.audit.AuditEventsEndpoint;\nimport org.springframework.boot.actuate.audit.AuditEventsJmxEndpointExtension;\nimport org.springframework.boot.actuate.audit.AuditEventsWebEndpointExtension;\nimport org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;\nimport org.springframework.boot.actuate.logging.LoggersEndpoint;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for the {@link LoggersEndpoint}.\n *\n * @author Phillip Webb\n * @author Andy Wilkinson\n * @author Vedran Pavic\n * @since 2.0.0\n */\n@Configuration\n@AutoConfigureAfter(AuditAutoConfiguration.class)\npublic class AuditEventsEndpointAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\t@ConditionalOnBean(AuditEventRepository.class)\n\t@ConditionalOnEnabledEndpoint\n\tpublic AuditEventsEndpoint auditEventsEndpoint(\n\t\t\tAuditEventRepository auditEventRepository) {\n\t\treturn new AuditEventsEndpoint(auditEventRepository);\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\t@ConditionalOnEnabledEndpoint\n\t@ConditionalOnBean(AuditEventsEndpoint.class)\n\tpublic AuditEventsJmxEndpointExtension auditEventsJmxEndpointExtension(\n\t\t\tAuditEventsEndpoint auditEventsEndpoint) {\n\t\treturn new AuditEventsJmxEndpointExtension(auditEventsEndpoint);\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\t@ConditionalOnEnabledEndpoint\n\t@ConditionalOnBean(AuditEventsEndpoint.class)\n\tpublic AuditEventsWebEndpointExtension auditEventsWebEndpointExtension(\n\t\t\tAuditEventsEndpoint auditEventsEndpoint) {\n\t\treturn new AuditEventsWebEndpointExtension(auditEventsEndpoint);\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.audit;\n\nimport org.springframework.boot.actuate.audit.AuditEventRepository;\nimport org.springframework.boot.actuate.audit.AuditEventsEndpoint;\nimport org.springframework.boot.actuate.audit.AuditEventsJmxEndpointExtension;\nimport org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;\nimport org.springframework.boot.actuate.logging.LoggersEndpoint;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for the {@link LoggersEndpoint}.\n *\n * @author Phillip Webb\n * @author Andy Wilkinson\n * @since 2.0.0\n */\n@Configuration\n@AutoConfigureAfter(AuditAutoConfiguration.class)\npublic class AuditEventsEndpointAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\t@ConditionalOnBean(AuditEventRepository.class)\n\t@ConditionalOnEnabledEndpoint\n\tpublic AuditEventsEndpoint auditEventsEndpoint(\n\t\t\tAuditEventRepository auditEventRepository) {\n\t\treturn new AuditEventsEndpoint(auditEventRepository);\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\t@ConditionalOnEnabledEndpoint\n\t@ConditionalOnBean(AuditEventsEndpoint.class)\n\tpublic AuditEventsJmxEndpointExtension auditEventsJmxEndpointExtension(\n\t\t\tAuditEventsEndpoint auditEventsEndpoint) {\n\t\treturn new AuditEventsJmxEndpointExtension(auditEventsEndpoint);\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
