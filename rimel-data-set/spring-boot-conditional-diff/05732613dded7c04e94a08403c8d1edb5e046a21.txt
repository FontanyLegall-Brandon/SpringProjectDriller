@@ -56,40 +56,40 @@ public class ConditionalOnJavaTests {
 
 	@Test
 	public void doesNotMatchIfLowerIsRequired() {
-		registerAndRefresh(Java5Required.class);
+		registerAndRefresh(Java7Required.class);
 		assertPresent(false);
 	}
 
 	@Test
 	public void matchesIfVersionIsInRange() {
-		registerAndRefresh(Java6Required.class);
+		registerAndRefresh(Java8Required.class);
 		assertPresent(true);
 	}
 
 	@Test
 	public void boundsTests() throws Exception {
-		testBounds(Range.EQUAL_OR_NEWER, JavaVersion.SEVEN, JavaVersion.SIX, true);
-		testBounds(Range.EQUAL_OR_NEWER, JavaVersion.SEVEN, JavaVersion.SEVEN, true);
-		testBounds(Range.EQUAL_OR_NEWER, JavaVersion.SEVEN, JavaVersion.EIGHT, false);
-		testBounds(Range.OLDER_THAN, JavaVersion.SEVEN, JavaVersion.SIX, false);
-		testBounds(Range.OLDER_THAN, JavaVersion.SEVEN, JavaVersion.SEVEN, false);
-		testBounds(Range.OLDER_THAN, JavaVersion.SEVEN, JavaVersion.EIGHT, true);
+		testBounds(Range.EQUAL_OR_NEWER, JavaVersion.NINE, JavaVersion.EIGHT, true);
+		testBounds(Range.EQUAL_OR_NEWER, JavaVersion.EIGHT, JavaVersion.EIGHT, true);
+		testBounds(Range.EQUAL_OR_NEWER, JavaVersion.EIGHT, JavaVersion.NINE, false);
+		testBounds(Range.OLDER_THAN, JavaVersion.NINE, JavaVersion.EIGHT, false);
+		testBounds(Range.OLDER_THAN, JavaVersion.EIGHT, JavaVersion.EIGHT, false);
+		testBounds(Range.OLDER_THAN, JavaVersion.EIGHT, JavaVersion.NINE, true);
 	}
 
 	@Test
 	public void equalOrNewerMessage() throws Exception {
 		ConditionOutcome outcome = this.condition.getMatchOutcome(Range.EQUAL_OR_NEWER,
-				JavaVersion.SEVEN, JavaVersion.SIX);
+				JavaVersion.NINE, JavaVersion.EIGHT);
 		assertThat(outcome.getMessage())
-				.isEqualTo();
+				.isEqualTo();
 	}
 
 	@Test
 	public void olderThanMessage() throws Exception {
 		ConditionOutcome outcome = this.condition.getMatchOutcome(Range.OLDER_THAN,
-				JavaVersion.SEVEN, JavaVersion.SIX);
+				JavaVersion.NINE, JavaVersion.EIGHT);
 		assertThat(outcome.getMessage())
-				.isEqualTo();
+				.isEqualTo();
 	}
 
 	@Test
@@ -98,19 +98,9 @@ public class ConditionalOnJavaTests {
 	}
 
 	@Test
-	public void java7IsDetected() throws Exception {
-		assertThat(getJavaVersion(Function.class)).isEqualTo();
-	}
-
-	@Test
-	public void java6IsDetected() throws Exception {
-		assertThat(getJavaVersion(Function.class, Files.class)).isEqualTo();
-	}
-
-	@Test
-	public void java6IsTheFallback() throws Exception {
+	public void java8IsTheFallback() throws Exception {
 		assertThat(getJavaVersion(Function.class, Files.class, ServiceLoader.class))
-				.isEqualTo();
+				.isEqualTo();
 	}
 
 	private String getJavaVersion(Class<?>... hiddenClasses) throws Exception {
@@ -181,8 +171,8 @@ public class ConditionalOnJavaTests {
 	}
 
 	@Configuration
-	@ConditionalOnJava(range = Range.OLDER_THAN, value = JavaVersion.SIX)
-	static class Java5Required {
+	@ConditionalOnJava(range = Range.OLDER_THAN, value = JavaVersion.EIGHT)
+	static class Java7Required {
 		@Bean
 		String foo() {
 			return ;
@@ -190,8 +180,8 @@ public class ConditionalOnJavaTests {
 	}
 
 	@Configuration
-	@ConditionalOnJava(JavaVersion.SIX)
-	static class Java6Required {
+	@ConditionalOnJava(JavaVersion.EIGHT)
+	static class Java8Required {
 		@Bean
 		String foo() {
 			return ;

