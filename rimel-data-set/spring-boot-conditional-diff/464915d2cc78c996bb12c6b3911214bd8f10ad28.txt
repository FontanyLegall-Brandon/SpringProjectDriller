@@ -1,64 +0,0 @@
-
-
-package org.springframework.boot.autoconfigure.jms.hornetq;
-
-import javax.jms.ConnectionFactory;
-import javax.transaction.TransactionManager;
-
-import org.hornetq.jms.client.HornetQConnectionFactory;
-
-import org.springframework.beans.factory.ListableBeanFactory;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
-import org.springframework.boot.jta.XAConnectionFactoryWrapper;
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.context.annotation.Primary;
-
-
-@Configuration
-@ConditionalOnMissingBean(ConnectionFactory.class)
-@ConditionalOnClass(TransactionManager.class)
-@ConditionalOnBean(XAConnectionFactoryWrapper.class)
-@Deprecated
-class HornetQXAConnectionFactoryConfiguration {
-
-	@Primary
-	@Bean(name = { ,  })
-	public ConnectionFactory jmsConnectionFactory(ListableBeanFactory beanFactory,
-			HornetQProperties properties, XAConnectionFactoryWrapper wrapper)
-					throws Exception {
-		return wrapper.wrapConnectionFactory(
-				new HornetQConnectionFactoryFactory(beanFactory, properties)
-						.createConnectionFactory(
-								SpringBootHornetQXAConnectionFactory.class));
-	}
-
-	@Bean
-	public HornetQConnectionFactory nonXaJmsConnectionFactory(
-			ListableBeanFactory beanFactory, HornetQProperties properties) {
-		return new HornetQConnectionFactoryFactory(beanFactory, properties)
-				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);
-	}
-}

