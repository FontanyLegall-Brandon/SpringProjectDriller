{'_old_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -16,7 +16,7 @@\n \n package org.springframework.boot.actuate.autoconfigure.web.reactive;\n \n-import javax.servlet.Servlet;\n+import reactor.core.publisher.Flux;\n \n import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n@@ -33,7 +33,7 @@ import org.springframework.context.annotation.Configuration;\n  * @since 2.0.0\n  */\n @Configuration\n-@ConditionalOnClass(Servlet.class)\n+@ConditionalOnClass(Flux.class)\n @ConditionalOnWebApplication(type = Type.REACTIVE)\n public class ReactiveManagementContextAutoConfiguration {\n \n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.web.reactive;\n\nimport reactor.core.publisher.Flux;\n\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication.Type;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Servlet-specific management\n * context concerns.\n *\n * @author Phillip Webb\n * @since 2.0.0\n */\n@Configuration\n@ConditionalOnClass(Flux.class)\n@ConditionalOnWebApplication(type = Type.REACTIVE)\npublic class ReactiveManagementContextAutoConfiguration {\n\n\t@Bean\n\tpublic ReactiveManagementContextFactory reactiveWebChildContextFactory() {\n\t\treturn new ReactiveManagementContextFactory();\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.web.reactive;\n\nimport javax.servlet.Servlet;\n\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication.Type;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Servlet-specific management\n * context concerns.\n *\n * @author Phillip Webb\n * @since 2.0.0\n */\n@Configuration\n@ConditionalOnClass(Servlet.class)\n@ConditionalOnWebApplication(type = Type.REACTIVE)\npublic class ReactiveManagementContextAutoConfiguration {\n\n\t@Bean\n\tpublic ReactiveManagementContextFactory reactiveWebChildContextFactory() {\n\t\treturn new ReactiveManagementContextFactory();\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
