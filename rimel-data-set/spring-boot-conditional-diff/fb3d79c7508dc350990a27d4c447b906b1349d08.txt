@@ -33,38 +33,28 @@ import com.fasterxml.jackson.annotation.JsonUnwrapped;
 import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
 
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration.EndpointHypermediaEnabledCondition;
 import org.springframework.boot.actuate.condition.ConditionalOnEnabledEndpoint;
 import org.springframework.boot.actuate.endpoint.mvc.ActuatorMediaTypes;
-import org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint;
 import org.springframework.boot.actuate.endpoint.mvc.HalBrowserMvcEndpoint;
 import org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint;
 import org.springframework.boot.actuate.endpoint.mvc.HypermediaDisabled;
 import org.springframework.boot.actuate.endpoint.mvc.ManagementServletContext;
 import org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint;
 import org.springframework.boot.actuate.endpoint.mvc.MvcEndpoints;
-import org.springframework.boot.autoconfigure.condition.AnyNestedCondition;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnResource;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;
 import org.springframework.boot.autoconfigure.http.HttpMessageConverters;
 import org.springframework.boot.autoconfigure.web.ResourceProperties;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Conditional;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.core.MethodParameter;
 import org.springframework.core.annotation.AnnotationUtils;
 import org.springframework.core.io.ResourceLoader;
 import org.springframework.hateoas.Link;
 import org.springframework.hateoas.Resource;
 import org.springframework.hateoas.ResourceSupport;
-import org.springframework.hateoas.UriTemplate;
-import org.springframework.hateoas.hal.CurieProvider;
-import org.springframework.hateoas.hal.DefaultCurieProvider;
 import org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverter;
 import org.springframework.http.MediaType;
 import org.springframework.http.converter.AbstractHttpMessageConverter;
@@ -93,7 +83,7 @@ import static org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo;
 @ConditionalOnClass(Link.class)
 @ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.SERVLET)
 @ConditionalOnBean(HttpMessageConverters.class)
-@Conditional(EndpointHypermediaEnabledCondition.class)
+@ConditionalOnEnabledEndpoint()
 @EnableConfigurationProperties({ ResourceProperties.class,
 		ManagementServerProperties.class })
 public class EndpointWebMvcHypermediaManagementContextConfiguration {
@@ -104,7 +94,6 @@ public class EndpointWebMvcHypermediaManagementContextConfiguration {
 		return properties::getContextPath;
 	}
 
-	@ConditionalOnEnabledEndpoint()
 	@Bean
 	public HalJsonMvcEndpoint halJsonMvcEndpoint(
 			ManagementServletContext managementServletContext,
@@ -115,30 +104,6 @@ public class EndpointWebMvcHypermediaManagementContextConfiguration {
 		return new HalJsonMvcEndpoint(managementServletContext);
 	}
 
-	@Bean
-	@ConditionalOnBean(DocsMvcEndpoint.class)
-	@ConditionalOnMissingBean(CurieProvider.class)
-	@ConditionalOnProperty(prefix = , name = , matchIfMissing = false)
-	public DefaultCurieProvider curieProvider(ManagementServerProperties management,
-			DocsMvcEndpoint endpoint) {
-		String path = management.getContextPath() + endpoint.getPath()
-				+ ;
-		return new DefaultCurieProvider(, new UriTemplate(path));
-	}
-
-	@Configuration
-	static class DocsMvcEndpointConfiguration {
-
-		@Bean
-		@ConditionalOnEnabledEndpoint()
-		@ConditionalOnResource(resources = )
-		public DocsMvcEndpoint docsMvcEndpoint(
-				ManagementServletContext managementServletContext) {
-			return new DocsMvcEndpoint(managementServletContext);
-		}
-
-	}
-
 	
@@ -363,22 +328,4 @@ public class EndpointWebMvcHypermediaManagementContextConfiguration {
 
 	}
 
-	static class EndpointHypermediaEnabledCondition extends AnyNestedCondition {
-
-		EndpointHypermediaEnabledCondition() {
-			super(ConfigurationPhase.REGISTER_BEAN);
-		}
-
-		@ConditionalOnEnabledEndpoint()
-		static class ActuatorEndpointEnabled {
-
-		}
-
-		@ConditionalOnEnabledEndpoint()
-		static class DocsEndpointEnabled {
-
-		}
-
-	}
-
 }

