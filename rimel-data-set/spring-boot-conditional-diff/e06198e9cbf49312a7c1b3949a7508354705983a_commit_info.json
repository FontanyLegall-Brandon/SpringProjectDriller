{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastJpaDependencyAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastJpaDependencyAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -33,15 +33,16 @@ import org.springframework.orm.jpa.AbstractEntityManagerFactoryBean;\n import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;\n \n /**\n- * Additional configuration to ensure that {@link EntityManagerFactory} beans\n- * depend-on the {@code hazelcastInstance} bean.\n+ * Additional configuration to ensure that {@link EntityManagerFactory} beans depend-on\n+ * the {@code hazelcastInstance} bean.\n  *\n  * @author Stephane Nicoll\n- * @since 1.3.0\n  */\n @Configuration\n-@ConditionalOnClass({ HazelcastInstance.class, LocalContainerEntityManagerFactoryBean.class })\n-@AutoConfigureAfter({ HazelcastAutoConfiguration.class, HibernateJpaAutoConfiguration.class })\n+@ConditionalOnClass({ HazelcastInstance.class,\n+\t\tLocalContainerEntityManagerFactoryBean.class })\n+@AutoConfigureAfter({ HazelcastAutoConfiguration.class,\n+\t\tHibernateJpaAutoConfiguration.class })\n class HazelcastJpaDependencyAutoConfiguration {\n \n \t@Bean\n@@ -56,6 +57,7 @@ class HazelcastJpaDependencyAutoConfiguration {\n \t\tHazelcastInstanceJpaDependencyPostProcessor() {\n \t\t\tsuper("hazelcastInstance");\n \t\t}\n+\n \t}\n \n \tstatic class OnHazelcastAndJpaCondition extends AllNestedConditions {\n', 'source_code': '/*\n * Copyright 2012-2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.hazelcast;\n\nimport javax.persistence.EntityManagerFactory;\n\nimport com.hazelcast.core.HazelcastInstance;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.condition.AllNestedConditions;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.data.jpa.EntityManagerFactoryDependsOnPostProcessor;\nimport org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Conditional;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.orm.jpa.AbstractEntityManagerFactoryBean;\nimport org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;\n\n/**\n * Additional configuration to ensure that {@link EntityManagerFactory} beans depend-on\n * the {@code hazelcastInstance} bean.\n *\n * @author Stephane Nicoll\n */\n@Configuration\n@ConditionalOnClass({ HazelcastInstance.class,\n\t\tLocalContainerEntityManagerFactoryBean.class })\n@AutoConfigureAfter({ HazelcastAutoConfiguration.class,\n\t\tHibernateJpaAutoConfiguration.class })\nclass HazelcastJpaDependencyAutoConfiguration {\n\n\t@Bean\n\t@Conditional(OnHazelcastAndJpaCondition.class)\n\tpublic static HazelcastInstanceJpaDependencyPostProcessor hazelcastInstanceJpaDependencyPostProcessor() {\n\t\treturn new HazelcastInstanceJpaDependencyPostProcessor();\n\t}\n\n\tprivate static class HazelcastInstanceJpaDependencyPostProcessor\n\t\t\textends EntityManagerFactoryDependsOnPostProcessor {\n\n\t\tHazelcastInstanceJpaDependencyPostProcessor() {\n\t\t\tsuper("hazelcastInstance");\n\t\t}\n\n\t}\n\n\tstatic class OnHazelcastAndJpaCondition extends AllNestedConditions {\n\n\t\tOnHazelcastAndJpaCondition() {\n\t\t\tsuper(ConfigurationPhase.REGISTER_BEAN);\n\t\t}\n\n\t\t@ConditionalOnBean(name = "hazelcastInstance")\n\t\tstatic class HasHazelcastInstance {\n\n\t\t}\n\n\t\t@ConditionalOnBean(AbstractEntityManagerFactoryBean.class)\n\t\tstatic class HasJpa {\n\n\t\t}\n\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.hazelcast;\n\nimport javax.persistence.EntityManagerFactory;\n\nimport com.hazelcast.core.HazelcastInstance;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.condition.AllNestedConditions;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.data.jpa.EntityManagerFactoryDependsOnPostProcessor;\nimport org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Conditional;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.orm.jpa.AbstractEntityManagerFactoryBean;\nimport org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;\n\n/**\n * Additional configuration to ensure that {@link EntityManagerFactory} beans\n * depend-on the {@code hazelcastInstance} bean.\n *\n * @author Stephane Nicoll\n * @since 1.3.0\n */\n@Configuration\n@ConditionalOnClass({ HazelcastInstance.class, LocalContainerEntityManagerFactoryBean.class })\n@AutoConfigureAfter({ HazelcastAutoConfiguration.class, HibernateJpaAutoConfiguration.class })\nclass HazelcastJpaDependencyAutoConfiguration {\n\n\t@Bean\n\t@Conditional(OnHazelcastAndJpaCondition.class)\n\tpublic static HazelcastInstanceJpaDependencyPostProcessor hazelcastInstanceJpaDependencyPostProcessor() {\n\t\treturn new HazelcastInstanceJpaDependencyPostProcessor();\n\t}\n\n\tprivate static class HazelcastInstanceJpaDependencyPostProcessor\n\t\t\textends EntityManagerFactoryDependsOnPostProcessor {\n\n\t\tHazelcastInstanceJpaDependencyPostProcessor() {\n\t\t\tsuper("hazelcastInstance");\n\t\t}\n\t}\n\n\tstatic class OnHazelcastAndJpaCondition extends AllNestedConditions {\n\n\t\tOnHazelcastAndJpaCondition() {\n\t\t\tsuper(ConfigurationPhase.REGISTER_BEAN);\n\t\t}\n\n\t\t@ConditionalOnBean(name = "hazelcastInstance")\n\t\tstatic class HasHazelcastInstance {\n\n\t\t}\n\n\t\t@ConditionalOnBean(AbstractEntityManagerFactoryBean.class)\n\t\tstatic class HasJpa {\n\n\t\t}\n\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
