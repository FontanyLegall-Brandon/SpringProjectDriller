@@ -24,11 +24,16 @@ import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication.Type;
+import org.springframework.boot.autoconfigure.web.ServerProperties;
 import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration;
 import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean;
+import org.springframework.boot.web.server.ErrorPage;
+import org.springframework.boot.web.server.WebServerFactoryCustomizer;
 import org.springframework.boot.web.servlet.error.ErrorAttributes;
 import org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter;
+import org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory;
 import org.springframework.context.annotation.Bean;
+import org.springframework.core.Ordered;
 import org.springframework.web.context.request.RequestContextListener;
 import org.springframework.web.filter.RequestContextFilter;
 import org.springframework.web.servlet.DispatcherServlet;
@@ -59,6 +64,12 @@ class WebMvcEndpointChildContextConfiguration {
 		return new ManagementErrorEndpoint(errorAttributes);
 	}
 
+	@Bean
+	@ConditionalOnBean(ErrorAttributes.class)
+	public ManagementErrorPageCustomizer managementErrorPageCustomizer(ServerProperties serverProperties) {
+		return new ManagementErrorPageCustomizer(serverProperties);
+	}
+
 	@Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_BEAN_NAME)
 	public DispatcherServlet dispatcherServlet() {
 		DispatcherServlet dispatcherServlet = new DispatcherServlet();
@@ -96,4 +107,29 @@ class WebMvcEndpointChildContextConfiguration {
 		return new OrderedRequestContextFilter();
 	}
 
+	
+	private static class ManagementErrorPageCustomizer
+			implements WebServerFactoryCustomizer<ConfigurableServletWebServerFactory>, Ordered {
+
+		private final ServerProperties properties;
+
+		ManagementErrorPageCustomizer(ServerProperties properties) {
+			this.properties = properties;
+		}
+
+		@Override
+		public void customize(ConfigurableServletWebServerFactory factory) {
+			factory.addErrorPages(new ErrorPage(this.properties.getError().getPath()));
+		}
+
+		@Override
+		public int getOrder() {
+			return 0;
+		}
+
+	}
+
 }

