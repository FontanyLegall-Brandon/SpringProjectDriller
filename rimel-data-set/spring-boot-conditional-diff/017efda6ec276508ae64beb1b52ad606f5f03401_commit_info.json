{'_old_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/jolokia/JolokiaManagementContextConfiguration.java'), '_new_path': None, 'change_type': <ModificationType.DELETE: 4>, 'diff': '@@ -1,81 +0,0 @@\n-/*\n- * Copyright 2012-2017 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the "License");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an "AS IS" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.springframework.boot.actuate.autoconfigure.jolokia;\n-\n-import org.jolokia.http.AgentServlet;\n-\n-import org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration;\n-import org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication.Type;\n-import org.springframework.boot.context.properties.EnableConfigurationProperties;\n-import org.springframework.boot.web.servlet.ServletRegistrationBean;\n-import org.springframework.context.annotation.Bean;\n-import org.springframework.web.servlet.mvc.ServletWrappingController;\n-\n-/**\n- * {@link ManagementContextConfiguration} for embedding Jolokia, a JMX-HTTP bridge giving\n- * an alternative to JSR-160 connectors.\n- * <p>\n- * This configuration will get automatically enabled as soon as the Jolokia\n- * {@link AgentServlet} is on the classpath. To disable it set\n- * {@code management.jolokia.enabled=false}.\n- * <p>\n- * Additional configuration parameters for Jolokia can be provided by specifying\n- * {@code management.jolokia.config.*} properties. See the\n- * <a href="http://jolokia.org">http://jolokia.org</a> web site for more information on\n- * supported configuration parameters.\n- *\n- * @author Christian Dupuis\n- * @author Dave Syer\n- * @author Andy Wilkinson\n- * @author Madhura Bhave\n- * @author Stephane Nicoll\n- * @since 2.0.0\n- */\n-@ManagementContextConfiguration\n-@ConditionalOnWebApplication(type = Type.SERVLET)\n-@ConditionalOnClass({ AgentServlet.class, ServletWrappingController.class })\n-@ConditionalOnProperty(value = "management.jolokia.enabled", havingValue = "true")\n-@EnableConfigurationProperties(JolokiaProperties.class)\n-public class JolokiaManagementContextConfiguration {\n-\n-\tprivate final ManagementServletContext managementServletContext;\n-\n-\tprivate final JolokiaProperties properties;\n-\n-\tpublic JolokiaManagementContextConfiguration(\n-\t\t\tManagementServletContext managementServletContext,\n-\t\t\tJolokiaProperties properties) {\n-\t\tthis.managementServletContext = managementServletContext;\n-\t\tthis.properties = properties;\n-\t}\n-\n-\t@Bean\n-\tpublic ServletRegistrationBean<AgentServlet> jolokiaServlet() {\n-\t\tString path = this.managementServletContext.getServletPath()\n-\t\t\t\t+ this.properties.getPath();\n-\t\tString urlMapping = (path.endsWith("/") ? path + "*" : path + "/*");\n-\t\tServletRegistrationBean<AgentServlet> registration = new ServletRegistrationBean<>(\n-\t\t\t\tnew AgentServlet(), urlMapping);\n-\t\tregistration.setInitParameters(this.properties.getConfig());\n-\t\treturn registration;\n-\t}\n-\n-}\n', 'source_code': None, 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.jolokia;\n\nimport org.jolokia.http.AgentServlet;\n\nimport org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration;\nimport org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication.Type;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.boot.web.servlet.ServletRegistrationBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.web.servlet.mvc.ServletWrappingController;\n\n/**\n * {@link ManagementContextConfiguration} for embedding Jolokia, a JMX-HTTP bridge giving\n * an alternative to JSR-160 connectors.\n * <p>\n * This configuration will get automatically enabled as soon as the Jolokia\n * {@link AgentServlet} is on the classpath. To disable it set\n * {@code management.jolokia.enabled=false}.\n * <p>\n * Additional configuration parameters for Jolokia can be provided by specifying\n * {@code management.jolokia.config.*} properties. See the\n * <a href="http://jolokia.org">http://jolokia.org</a> web site for more information on\n * supported configuration parameters.\n *\n * @author Christian Dupuis\n * @author Dave Syer\n * @author Andy Wilkinson\n * @author Madhura Bhave\n * @author Stephane Nicoll\n * @since 2.0.0\n */\n@ManagementContextConfiguration\n@ConditionalOnWebApplication(type = Type.SERVLET)\n@ConditionalOnClass({ AgentServlet.class, ServletWrappingController.class })\n@ConditionalOnProperty(value = "management.jolokia.enabled", havingValue = "true")\n@EnableConfigurationProperties(JolokiaProperties.class)\npublic class JolokiaManagementContextConfiguration {\n\n\tprivate final ManagementServletContext managementServletContext;\n\n\tprivate final JolokiaProperties properties;\n\n\tpublic JolokiaManagementContextConfiguration(\n\t\t\tManagementServletContext managementServletContext,\n\t\t\tJolokiaProperties properties) {\n\t\tthis.managementServletContext = managementServletContext;\n\t\tthis.properties = properties;\n\t}\n\n\t@Bean\n\tpublic ServletRegistrationBean<AgentServlet> jolokiaServlet() {\n\t\tString path = this.managementServletContext.getServletPath()\n\t\t\t\t+ this.properties.getPath();\n\t\tString urlMapping = (path.endsWith("/") ? path + "*" : path + "/*");\n\t\tServletRegistrationBean<AgentServlet> registration = new ServletRegistrationBean<>(\n\t\t\t\tnew AgentServlet(), urlMapping);\n\t\tregistration.setInitParameters(this.properties.getConfig());\n\t\treturn registration;\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
