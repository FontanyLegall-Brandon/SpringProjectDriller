@@ -0,0 +1,74 @@
+
+
+package org.springframework.boot.actuate.autoconfigure.elasticsearch;
+
+import java.util.Map;
+
+import org.elasticsearch.client.RestClient;
+
+import org.springframework.boot.actuate.autoconfigure.health.CompositeHealthIndicatorConfiguration;
+import org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;
+import org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration;
+import org.springframework.boot.actuate.elasticsearch.ElasticsearchRestHealthIndicator;
+import org.springframework.boot.actuate.health.HealthIndicator;
+import org.springframework.boot.autoconfigure.AutoConfigureAfter;
+import org.springframework.boot.autoconfigure.AutoConfigureBefore;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientAutoConfiguration;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+
+
+@Configuration
+@ConditionalOnClass(RestClient.class)
+@ConditionalOnBean(RestClient.class)
+@ConditionalOnEnabledHealthIndicator()
+@AutoConfigureBefore(HealthIndicatorAutoConfiguration.class)
+@AutoConfigureAfter({ RestClientAutoConfiguration.class,
+		ElasticSearchClientHealthIndicatorAutoConfiguration.class })
+public class ElasticSearchRestHealthIndicatorAutoConfiguration extends
+		CompositeHealthIndicatorConfiguration<ElasticsearchRestHealthIndicator, RestClient> {
+
+	private final Map<String, RestClient> clients;
+
+	public ElasticSearchRestHealthIndicatorAutoConfiguration(
+			Map<String, RestClient> clients) {
+		this.clients = clients;
+	}
+
+	@Bean
+	@ConditionalOnMissingBean(name = )
+	public HealthIndicator elasticsearchRestHealthIndicator() {
+		return createHealthIndicator(this.clients);
+	}
+
+	@Override
+	protected ElasticsearchRestHealthIndicator createHealthIndicator(RestClient client) {
+		return new ElasticsearchRestHealthIndicator(client);
+	}
+
+}

