@@ -36,6 +36,7 @@ import org.springframework.context.annotation.Primary;
  * Configuration for ActiveMQ XA {@link ConnectionFactory}.
  *
  * @author Phillip Webb
+ * @author Aur√©lien Leboulanger
  * @since 1.2.0
  */
 @Configuration
@@ -54,7 +55,7 @@ class ActiveMQXAConnectionFactoryConfiguration {
 	}
 
 	@Bean
-	@ConditionalOnProperty(prefix = , name = , havingValue = , matchIfMissing = true)
+	@ConditionalOnProperty(prefix = , name = , havingValue = , matchIfMissing = true)
 	public ActiveMQConnectionFactory nonXaJmsConnectionFactory(
 			ActiveMQProperties properties) {
 		return new ActiveMQConnectionFactoryFactory(properties)
@@ -62,17 +63,25 @@ class ActiveMQXAConnectionFactoryConfiguration {
 	}
 
 	@ConditionalOnClass(PooledConnectionFactory.class)
-	@ConditionalOnProperty(prefix = , name = , havingValue = , matchIfMissing = false)
+	@ConditionalOnProperty(prefix = , name = , havingValue = , matchIfMissing = false)
 	static class PooledConnectionFactoryConfiguration {
 
 		@Bean(destroyMethod = )
 		public PooledConnectionFactory pooledNonXaJmsConnectionFactory(
 				ActiveMQProperties properties) {
-			return new PooledConnectionFactory(
+			PooledConnectionFactory pooledConnectionFactory = new PooledConnectionFactory(
 					new ActiveMQConnectionFactoryFactory(properties)
 							.createConnectionFactory(ActiveMQConnectionFactory.class));
-		}
 
+			ActiveMQProperties.Pool pool = properties.getPool();
+			pooledConnectionFactory.setExpiryTimeout(pool.getExpiryTimeMillis());
+			pooledConnectionFactory.setMaxConnections(pool.getMaxConnections());
+			pooledConnectionFactory.setIdleTimeout(pool.getIdleTimeMillis());
+			pooledConnectionFactory.setMaximumActiveSessionPerConnection(pool.getMaxSessionsPerConnection());
+			pooledConnectionFactory.setTimeBetweenExpirationCheckMillis(pool.getTimeBetweenEvictionRunsMillis());
+
+			return pooledConnectionFactory;
+		}
 	}
 
 }

