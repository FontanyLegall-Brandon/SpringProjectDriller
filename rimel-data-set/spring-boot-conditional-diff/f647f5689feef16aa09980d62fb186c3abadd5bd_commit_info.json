{'_old_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/couchbase/CouchbaseReactiveRepositoriesAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/couchbase/CouchbaseReactiveRepositoriesAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -31,14 +31,14 @@ import org.springframework.data.couchbase.repository.config.ReactiveRepositoryOp\n import org.springframework.data.couchbase.repository.support.ReactiveCouchbaseRepositoryFactoryBean;\n \n /**\n- * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Couchbase\n- * Reactive Repositories.\n+ * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Couchbase Reactive\n+ * Repositories.\n  *\n  * @author Alex Derkach\n  * @since 2.0.0\n  */\n @Configuration\n-@ConditionalOnClass({Bucket.class, ReactiveCouchbaseRepository.class})\n+@ConditionalOnClass({ Bucket.class, ReactiveCouchbaseRepository.class })\n @ConditionalOnProperty(prefix = "spring.data.couchbase.reactive-repositories", name = "enabled", havingValue = "true", matchIfMissing = true)\n @ConditionalOnBean(ReactiveRepositoryOperationsMapping.class)\n @ConditionalOnMissingBean(ReactiveCouchbaseRepositoryFactoryBean.class)\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data.couchbase;\n\nimport com.couchbase.client.java.Bucket;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.couchbase.repository.ReactiveCouchbaseRepository;\nimport org.springframework.data.couchbase.repository.config.ReactiveRepositoryOperationsMapping;\nimport org.springframework.data.couchbase.repository.support.ReactiveCouchbaseRepositoryFactoryBean;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Couchbase Reactive\n * Repositories.\n *\n * @author Alex Derkach\n * @since 2.0.0\n */\n@Configuration\n@ConditionalOnClass({ Bucket.class, ReactiveCouchbaseRepository.class })\n@ConditionalOnProperty(prefix = "spring.data.couchbase.reactive-repositories", name = "enabled", havingValue = "true", matchIfMissing = true)\n@ConditionalOnBean(ReactiveRepositoryOperationsMapping.class)\n@ConditionalOnMissingBean(ReactiveCouchbaseRepositoryFactoryBean.class)\n@Import(CouchbaseReactiveRepositoriesAutoConfigureRegistrar.class)\n@AutoConfigureAfter(CouchbaseReactiveDataAutoConfiguration.class)\npublic class CouchbaseReactiveRepositoriesAutoConfiguration {\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data.couchbase;\n\nimport com.couchbase.client.java.Bucket;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.data.couchbase.repository.ReactiveCouchbaseRepository;\nimport org.springframework.data.couchbase.repository.config.ReactiveRepositoryOperationsMapping;\nimport org.springframework.data.couchbase.repository.support.ReactiveCouchbaseRepositoryFactoryBean;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Couchbase\n * Reactive Repositories.\n *\n * @author Alex Derkach\n * @since 2.0.0\n */\n@Configuration\n@ConditionalOnClass({Bucket.class, ReactiveCouchbaseRepository.class})\n@ConditionalOnProperty(prefix = "spring.data.couchbase.reactive-repositories", name = "enabled", havingValue = "true", matchIfMissing = true)\n@ConditionalOnBean(ReactiveRepositoryOperationsMapping.class)\n@ConditionalOnMissingBean(ReactiveCouchbaseRepositoryFactoryBean.class)\n@Import(CouchbaseReactiveRepositoriesAutoConfigureRegistrar.class)\n@AutoConfigureAfter(CouchbaseReactiveDataAutoConfiguration.class)\npublic class CouchbaseReactiveRepositoriesAutoConfiguration {\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
