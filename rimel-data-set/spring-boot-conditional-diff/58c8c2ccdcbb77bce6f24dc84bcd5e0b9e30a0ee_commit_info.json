{'_old_path': None, '_new_path': PosixPath('spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ElasticsearchHealthIndicatorConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.actuate.autoconfigure;\n+\n+import org.elasticsearch.client.Client;\n+import org.springframework.boot.actuate.health.ElasticsearchHealthIndicator;\n+import org.springframework.boot.actuate.health.ElasticsearchHealthIndicatorProperties;\n+import org.springframework.boot.actuate.health.HealthIndicator;\n+import org.springframework.boot.autoconfigure.AutoConfigureAfter;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * {@link org.springframework.boot.autoconfigure.EnableAutoConfiguration Auto-configuration} for\n+ * {@link org.springframework.boot.actuate.health.ElasticsearchHealthIndicator}.\n+ *\n+ * @author Binwei Yang\n+ * @since 1.2.2\n+ */\n+@Configuration\n+@AutoConfigureBefore({EndpointAutoConfiguration.class})\n+@AutoConfigureAfter({HealthIndicatorAutoConfiguration.class})\n+@ConditionalOnProperty(prefix = "management.health.elasticsearch", name = "enabled", matchIfMissing = true)\n+public class ElasticsearchHealthIndicatorConfiguration {\n+\n+    @Bean\n+    @ConditionalOnBean(Client.class)\n+    @ConditionalOnMissingBean(name = "elasticsearchHealthIndicator")\n+    public HealthIndicator elasticsearchHealthIndicator() {\n+        return new ElasticsearchHealthIndicator();\n+    }\n+\n+    @Bean\n+    public ElasticsearchHealthIndicatorProperties elasticsearchHealthIndicatorProperties() {\n+        return new ElasticsearchHealthIndicatorProperties();\n+    }\n+}\n', 'source_code': '/*\n * Copyright 2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure;\n\nimport org.elasticsearch.client.Client;\nimport org.springframework.boot.actuate.health.ElasticsearchHealthIndicator;\nimport org.springframework.boot.actuate.health.ElasticsearchHealthIndicatorProperties;\nimport org.springframework.boot.actuate.health.HealthIndicator;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.AutoConfigureBefore;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link org.springframework.boot.autoconfigure.EnableAutoConfiguration Auto-configuration} for\n * {@link org.springframework.boot.actuate.health.ElasticsearchHealthIndicator}.\n *\n * @author Binwei Yang\n * @since 1.2.2\n */\n@Configuration\n@AutoConfigureBefore({EndpointAutoConfiguration.class})\n@AutoConfigureAfter({HealthIndicatorAutoConfiguration.class})\n@ConditionalOnProperty(prefix = "management.health.elasticsearch", name = "enabled", matchIfMissing = true)\npublic class ElasticsearchHealthIndicatorConfiguration {\n\n    @Bean\n    @ConditionalOnBean(Client.class)\n    @ConditionalOnMissingBean(name = "elasticsearchHealthIndicator")\n    public HealthIndicator elasticsearchHealthIndicator() {\n        return new ElasticsearchHealthIndicator();\n    }\n\n    @Bean\n    public ElasticsearchHealthIndicatorProperties elasticsearchHealthIndicatorProperties() {\n        return new ElasticsearchHealthIndicatorProperties();\n    }\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
