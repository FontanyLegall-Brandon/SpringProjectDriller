{'_old_path': None, '_new_path': PosixPath('spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/orm/jpa/TestEntityManagerAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2012-2016 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.test.autoconfigure.orm.jpa;\n+\n+import javax.persistence.EntityManagerFactory;\n+\n+import org.springframework.boot.autoconfigure.AutoConfigureAfter;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Auto-configuration for {@link TestEntityManager}.\n+ *\n+ * @author Phillip Webb\n+ * @see AutoConfigureTestEntityManager\n+ */\n+@Configuration\n+@ConditionalOnClass({ EntityManagerFactory.class })\n+@AutoConfigureAfter(HibernateJpaAutoConfiguration.class)\n+class TestEntityManagerAutoConfiguration {\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\tpublic TestEntityManager testEntityManager(\n+\t\t\tEntityManagerFactory entityManagerFactory) {\n+\t\treturn new TestEntityManager(entityManagerFactory);\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2016 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.test.autoconfigure.orm.jpa;\n\nimport javax.persistence.EntityManagerFactory;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * Auto-configuration for {@link TestEntityManager}.\n *\n * @author Phillip Webb\n * @see AutoConfigureTestEntityManager\n */\n@Configuration\n@ConditionalOnClass({ EntityManagerFactory.class })\n@AutoConfigureAfter(HibernateJpaAutoConfiguration.class)\nclass TestEntityManagerAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\tpublic TestEntityManager testEntityManager(\n\t\t\tEntityManagerFactory entityManagerFactory) {\n\t\treturn new TestEntityManager(entityManagerFactory);\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
