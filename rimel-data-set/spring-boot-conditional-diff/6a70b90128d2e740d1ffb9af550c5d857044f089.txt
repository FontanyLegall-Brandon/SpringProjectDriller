@@ -0,0 +1,62 @@
+
+
+package org.springframework.boot.autoconfigure.influx;
+
+import com.google.common.base.Strings;
+import org.influxdb.InfluxDB;
+import org.influxdb.InfluxDBFactory;
+
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+
+@Configuration
+@ConditionalOnClass(InfluxDB.class)
+@EnableConfigurationProperties(InfluxDBProperties.class)
+public class InfluxDBAutoConfiguration {
+
+	private final InfluxDBProperties properties;
+
+	public InfluxDBAutoConfiguration(InfluxDBProperties properties) {
+		this.properties = properties;
+	}
+
+	@Bean
+	@ConditionalOnMissingBean
+	public InfluxDB influxDB() {
+		if (Strings.isNullOrEmpty(this.properties.getUser())) {
+			return InfluxDBFactory.connect(
+					this.properties.getUrl()
+			);
+		}
+		else {
+			return InfluxDBFactory.connect(
+					this.properties.getUrl(),
+					this.properties.getUser(),
+					this.properties.getPassword()
+			);
+		}
+	}
+}

