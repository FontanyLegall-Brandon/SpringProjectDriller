@@ -0,0 +1,82 @@
+
+
+package org.springframework.boot.autoconfigure.webservices;
+
+import org.junit.After;
+import org.junit.Test;
+
+import org.springframework.boot.test.util.TestPropertyValues;
+import org.springframework.context.annotation.AnnotationConfigApplicationContext;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Conditional;
+import org.springframework.context.annotation.Configuration;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+
+public class OnWsdlLocationsConditionTests {
+
+	private AnnotationConfigApplicationContext context;
+
+	@After
+	public void tearDown() {
+		if (this.context != null) {
+			this.context.close();
+		}
+	}
+
+	@Test
+	public void wsdlLocationsNotDefined() {
+		load(TestConfig.class);
+		assertThat(this.context.containsBean()).isFalse();
+	}
+
+	@Test
+	public void wsdlLocationsDefinedAsCommaSeparated() {
+		load(TestConfig.class, );
+		assertThat(this.context.containsBean()).isTrue();
+	}
+
+	@Test
+	public void wsdlLocationsDefinedAsList() {
+		load(TestConfig.class, );
+		assertThat(this.context.containsBean()).isTrue();
+	}
+
+	private void load(Class<?> config, String... environment) {
+		this.context = new AnnotationConfigApplicationContext();
+		TestPropertyValues.of(environment).applyTo(this.context);
+		this.context.register(config);
+		this.context.refresh();
+	}
+
+	@Configuration
+	@Conditional(OnWsdlLocationsCondition.class)
+	protected static class TestConfig {
+
+		@Bean
+		public String foo() {
+			return ;
+		}
+
+	}
+
+}

