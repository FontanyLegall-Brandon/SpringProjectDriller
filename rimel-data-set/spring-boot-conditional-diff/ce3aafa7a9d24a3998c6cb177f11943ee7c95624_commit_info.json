{'_old_path': None, '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2014 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure.integration;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.integration.config.EnableIntegration;\n+\n+/**\n+ * {@link org.springframework.boot.autoconfigure.EnableAutoConfiguration Auto-configuration}\n+ * for Spring Integration.\n+ *\n+ * @author Artem Bilan\n+ * @since 1.1\n+ */\n+@Configuration\n+@ConditionalOnClass(EnableIntegration.class)\n+public class IntegrationAutoConfiguration {\n+\n+\t@Configuration\n+\t@EnableIntegration\n+\tprotected static class IntegrationConfiguration {\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.integration;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.integration.config.EnableIntegration;\n\n/**\n * {@link org.springframework.boot.autoconfigure.EnableAutoConfiguration Auto-configuration}\n * for Spring Integration.\n *\n * @author Artem Bilan\n * @since 1.1\n */\n@Configuration\n@ConditionalOnClass(EnableIntegration.class)\npublic class IntegrationAutoConfiguration {\n\n\t@Configuration\n\t@EnableIntegration\n\tprotected static class IntegrationConfiguration {\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
