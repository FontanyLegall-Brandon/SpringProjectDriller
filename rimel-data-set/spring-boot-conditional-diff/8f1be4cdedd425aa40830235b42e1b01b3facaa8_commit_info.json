{'_old_path': PosixPath('spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/servlet/MockMvcWebDriverAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/servlet/MockMvcWebDriverAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -41,8 +41,7 @@ import org.springframework.test.web.servlet.htmlunit.webdriver.MockMvcHtmlUnitDr\n @Configuration\n @ConditionalOnClass(HtmlUnitDriver.class)\n @AutoConfigureAfter(MockMvcAutoConfiguration.class)\n-@ConditionalOnProperty(prefix = "spring.test.mockmvc.webdriver", name = "enabled",\n-\t\tmatchIfMissing = true)\n+@ConditionalOnProperty(prefix = "spring.test.mockmvc.webdriver", name = "enabled", matchIfMissing = true)\n public class MockMvcWebDriverAutoConfiguration {\n \n \tprivate final Environment environment;\n@@ -56,8 +55,7 @@ public class MockMvcWebDriverAutoConfiguration {\n \t@ConditionalOnBean(MockMvc.class)\n \tpublic MockMvcHtmlUnitDriverBuilder mockMvcHtmlUnitDriverBuilder(MockMvc mockMvc) {\n \t\treturn MockMvcHtmlUnitDriverBuilder.mockMvcSetup(mockMvc)\n-\t\t\t\t.withDelegate(new LocalHostWebConnectionHtmlUnitDriver(this.environment,\n-\t\t\t\t\t\tBrowserVersion.CHROME));\n+\t\t\t\t.withDelegate(new LocalHostWebConnectionHtmlUnitDriver(this.environment, BrowserVersion.CHROME));\n \t}\n \n \t@Bean\n', 'source_code': '/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.test.autoconfigure.web.servlet;\n\nimport com.gargoylesoftware.htmlunit.BrowserVersion;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.htmlunit.HtmlUnitDriver;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.test.web.htmlunit.webdriver.LocalHostWebConnectionHtmlUnitDriver;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.env.Environment;\nimport org.springframework.test.web.servlet.MockMvc;\nimport org.springframework.test.web.servlet.htmlunit.webdriver.MockMvcHtmlUnitDriverBuilder;\n\n/**\n * Auto-configuration for Selenium {@link WebDriver} MockMVC integration.\n *\n * @author Phillip Webb\n * @since 1.4.0\n */\n@Configuration\n@ConditionalOnClass(HtmlUnitDriver.class)\n@AutoConfigureAfter(MockMvcAutoConfiguration.class)\n@ConditionalOnProperty(prefix = "spring.test.mockmvc.webdriver", name = "enabled", matchIfMissing = true)\npublic class MockMvcWebDriverAutoConfiguration {\n\n\tprivate final Environment environment;\n\n\tMockMvcWebDriverAutoConfiguration(Environment environment) {\n\t\tthis.environment = environment;\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean({ WebDriver.class, MockMvcHtmlUnitDriverBuilder.class })\n\t@ConditionalOnBean(MockMvc.class)\n\tpublic MockMvcHtmlUnitDriverBuilder mockMvcHtmlUnitDriverBuilder(MockMvc mockMvc) {\n\t\treturn MockMvcHtmlUnitDriverBuilder.mockMvcSetup(mockMvc)\n\t\t\t\t.withDelegate(new LocalHostWebConnectionHtmlUnitDriver(this.environment, BrowserVersion.CHROME));\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean(WebDriver.class)\n\t@ConditionalOnBean(MockMvcHtmlUnitDriverBuilder.class)\n\tpublic HtmlUnitDriver htmlUnitDriver(MockMvcHtmlUnitDriverBuilder builder) {\n\t\treturn builder.build();\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.test.autoconfigure.web.servlet;\n\nimport com.gargoylesoftware.htmlunit.BrowserVersion;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.htmlunit.HtmlUnitDriver;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.test.web.htmlunit.webdriver.LocalHostWebConnectionHtmlUnitDriver;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.env.Environment;\nimport org.springframework.test.web.servlet.MockMvc;\nimport org.springframework.test.web.servlet.htmlunit.webdriver.MockMvcHtmlUnitDriverBuilder;\n\n/**\n * Auto-configuration for Selenium {@link WebDriver} MockMVC integration.\n *\n * @author Phillip Webb\n * @since 1.4.0\n */\n@Configuration\n@ConditionalOnClass(HtmlUnitDriver.class)\n@AutoConfigureAfter(MockMvcAutoConfiguration.class)\n@ConditionalOnProperty(prefix = "spring.test.mockmvc.webdriver", name = "enabled",\n\t\tmatchIfMissing = true)\npublic class MockMvcWebDriverAutoConfiguration {\n\n\tprivate final Environment environment;\n\n\tMockMvcWebDriverAutoConfiguration(Environment environment) {\n\t\tthis.environment = environment;\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean({ WebDriver.class, MockMvcHtmlUnitDriverBuilder.class })\n\t@ConditionalOnBean(MockMvc.class)\n\tpublic MockMvcHtmlUnitDriverBuilder mockMvcHtmlUnitDriverBuilder(MockMvc mockMvc) {\n\t\treturn MockMvcHtmlUnitDriverBuilder.mockMvcSetup(mockMvc)\n\t\t\t\t.withDelegate(new LocalHostWebConnectionHtmlUnitDriver(this.environment,\n\t\t\t\t\t\tBrowserVersion.CHROME));\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean(WebDriver.class)\n\t@ConditionalOnBean(MockMvcHtmlUnitDriverBuilder.class)\n\tpublic HtmlUnitDriver htmlUnitDriver(MockMvcHtmlUnitDriverBuilder builder) {\n\t\treturn builder.build();\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
