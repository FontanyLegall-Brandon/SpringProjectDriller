{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAutoConfiguration.java'), 'change_type': <ModificationType.RENAME: 3>, 'diff': '@@ -29,24 +29,24 @@ import org.springframework.context.annotation.Configuration;\n import org.springframework.jms.core.JmsTemplate;\n \n /**\n- * {@link EnableAutoConfiguration Auto-configuration} for {@link JmsTemplate}.\n+ * {@link EnableAutoConfiguration Auto-configuration} for Spring JMS.\n  * \n  * @author Greg Turnquist\n  */\n @Configuration\n @ConditionalOnClass(JmsTemplate.class)\n @ConditionalOnBean(ConnectionFactory.class)\n-@EnableConfigurationProperties(JmsTemplateProperties.class)\n-public class JmsTemplateAutoConfiguration {\n+@EnableConfigurationProperties(JmsProperties.class)\n+public class JmsAutoConfiguration {\n \n \t@Autowired\n-\tprivate JmsTemplateProperties properties;\n+\tprivate JmsProperties properties;\n \n \t@Autowired\n \tprivate ConnectionFactory connectionFactory;\n \n \t@Bean\n-\t@ConditionalOnMissingBean(JmsTemplate.class)\n+\t@ConditionalOnMissingBean\n \tpublic JmsTemplate jmsTemplate() {\n \t\tJmsTemplate jmsTemplate = new JmsTemplate(this.connectionFactory);\n \t\tjmsTemplate.setPubSubDomain(this.properties.isPubSubDomain());\n', 'source_code': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.jms;\n\nimport javax.jms.ConnectionFactory;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jms.core.JmsTemplate;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring JMS.\n * \n * @author Greg Turnquist\n */\n@Configuration\n@ConditionalOnClass(JmsTemplate.class)\n@ConditionalOnBean(ConnectionFactory.class)\n@EnableConfigurationProperties(JmsProperties.class)\npublic class JmsAutoConfiguration {\n\n\t@Autowired\n\tprivate JmsProperties properties;\n\n\t@Autowired\n\tprivate ConnectionFactory connectionFactory;\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\tpublic JmsTemplate jmsTemplate() {\n\t\tJmsTemplate jmsTemplate = new JmsTemplate(this.connectionFactory);\n\t\tjmsTemplate.setPubSubDomain(this.properties.isPubSubDomain());\n\t\treturn jmsTemplate;\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.jms;\n\nimport javax.jms.ConnectionFactory;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jms.core.JmsTemplate;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for {@link JmsTemplate}.\n * \n * @author Greg Turnquist\n */\n@Configuration\n@ConditionalOnClass(JmsTemplate.class)\n@ConditionalOnBean(ConnectionFactory.class)\n@EnableConfigurationProperties(JmsTemplateProperties.class)\npublic class JmsTemplateAutoConfiguration {\n\n\t@Autowired\n\tprivate JmsTemplateProperties properties;\n\n\t@Autowired\n\tprivate ConnectionFactory connectionFactory;\n\n\t@Bean\n\t@ConditionalOnMissingBean(JmsTemplate.class)\n\tpublic JmsTemplate jmsTemplate() {\n\t\tJmsTemplate jmsTemplate = new JmsTemplate(this.connectionFactory);\n\t\tjmsTemplate.setPubSubDomain(this.properties.isPubSubDomain());\n\t\treturn jmsTemplate;\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
