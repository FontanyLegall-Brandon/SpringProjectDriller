{'_old_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/integration/IntegrationGraphEndpointAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/integration/IntegrationGraphEndpointAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -18,26 +18,31 @@ package org.springframework.boot.actuate.autoconfigure.integration;\n \n import org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;\n import org.springframework.boot.actuate.integration.IntegrationGraphEndpoint;\n+import org.springframework.boot.autoconfigure.AutoConfigureAfter;\n import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.integration.support.channel.HeaderChannelRegistry;\n import org.springframework.integration.support.management.graph.IntegrationGraphServer;\n \n /**\n  * {@link EnableAutoConfiguration Auto-configuration} for the {@link IntegrationGraphEndpoint}.\n  *\n  * @author Tim Ysewyn\n+ * @author Stephane Nicoll\n  * @since 2.1.0\n  */\n @Configuration\n @ConditionalOnClass(IntegrationGraphServer.class)\n+@ConditionalOnBean(HeaderChannelRegistry.class)\n+@AutoConfigureAfter(IntegrationAutoConfiguration.class)\n public class IntegrationGraphEndpointAutoConfiguration {\n \n \t@Bean\n-\t@ConditionalOnBean(IntegrationGraphServer.class)\n \t@ConditionalOnMissingBean\n \t@ConditionalOnEnabledEndpoint\n \tpublic IntegrationGraphEndpoint integrationGraphEndpoint(\n@@ -45,5 +50,12 @@ public class IntegrationGraphEndpointAutoConfiguration {\n \t\treturn new IntegrationGraphEndpoint(integrationGraphServer);\n \t}\n \n+\t@Bean\n+\t@ConditionalOnMissingBean\n+\t@ConditionalOnEnabledEndpoint(endpoint = IntegrationGraphEndpoint.class)\n+\tpublic IntegrationGraphServer integrationGraphServer() {\n+\t\treturn new IntegrationGraphServer();\n+\t}\n+\n }\n \n', 'source_code': '/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.integration;\n\nimport org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;\nimport org.springframework.boot.actuate.integration.IntegrationGraphEndpoint;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.integration.support.channel.HeaderChannelRegistry;\nimport org.springframework.integration.support.management.graph.IntegrationGraphServer;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for the {@link IntegrationGraphEndpoint}.\n *\n * @author Tim Ysewyn\n * @author Stephane Nicoll\n * @since 2.1.0\n */\n@Configuration\n@ConditionalOnClass(IntegrationGraphServer.class)\n@ConditionalOnBean(HeaderChannelRegistry.class)\n@AutoConfigureAfter(IntegrationAutoConfiguration.class)\npublic class IntegrationGraphEndpointAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\t@ConditionalOnEnabledEndpoint\n\tpublic IntegrationGraphEndpoint integrationGraphEndpoint(\n\t\t\tIntegrationGraphServer integrationGraphServer) {\n\t\treturn new IntegrationGraphEndpoint(integrationGraphServer);\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\t@ConditionalOnEnabledEndpoint(endpoint = IntegrationGraphEndpoint.class)\n\tpublic IntegrationGraphServer integrationGraphServer() {\n\t\treturn new IntegrationGraphServer();\n\t}\n\n}\n\n', 'source_code_before': '/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.integration;\n\nimport org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;\nimport org.springframework.boot.actuate.integration.IntegrationGraphEndpoint;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.integration.support.management.graph.IntegrationGraphServer;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for the {@link IntegrationGraphEndpoint}.\n *\n * @author Tim Ysewyn\n * @since 2.1.0\n */\n@Configuration\n@ConditionalOnClass(IntegrationGraphServer.class)\npublic class IntegrationGraphEndpointAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnBean(IntegrationGraphServer.class)\n\t@ConditionalOnMissingBean\n\t@ConditionalOnEnabledEndpoint\n\tpublic IntegrationGraphEndpoint integrationGraphEndpoint(\n\t\t\tIntegrationGraphServer integrationGraphServer) {\n\t\treturn new IntegrationGraphEndpoint(integrationGraphServer);\n\t}\n\n}\n\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
