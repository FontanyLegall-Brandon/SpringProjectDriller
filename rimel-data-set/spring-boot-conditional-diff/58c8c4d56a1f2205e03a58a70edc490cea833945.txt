@@ -19,12 +19,15 @@ package org.springframework.boot.actuate.autoconfigure.metrics;
 import java.util.Collection;
 import java.util.Collections;
 
+import com.rabbitmq.client.Channel;
 import io.micrometer.core.annotation.Timed;
 import io.micrometer.core.instrument.MeterRegistry;
 import io.micrometer.core.instrument.Metrics;
 import io.micrometer.core.instrument.binder.MeterBinder;
 import io.micrometer.core.instrument.composite.CompositeMeterRegistry;
 
+import org.springframework.amqp.rabbit.connection.AbstractConnectionFactory;
+import org.springframework.amqp.rabbit.core.RabbitTemplate;
 import org.springframework.beans.factory.ObjectProvider;
 import org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;
 import org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsConfiguration;
@@ -43,13 +46,16 @@ import org.springframework.boot.actuate.autoconfigure.metrics.reactive.server.We
 import org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration;
 import org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsConfiguration;
 import org.springframework.boot.actuate.metrics.MetricsEndpoint;
+import org.springframework.boot.actuate.metrics.amqp.RabbitMetrics;
 import org.springframework.boot.actuate.metrics.integration.SpringIntegrationMetrics;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration;
+import org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.autoconfigure.condition.SearchStrategy;
 import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
 import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration;
@@ -66,6 +72,7 @@ import org.springframework.integration.support.management.IntegrationManagementC
  * @since 2.0.0
  * @author Jon Schneider
  * @author Stephane Nicoll
+ * @author Arnaud Cogolu√®gnes
  */
 @Configuration
 @ConditionalOnClass(Timed.class)
@@ -132,6 +139,19 @@ public class MetricsAutoConfiguration {
 
 	}
 
+	@Configuration
+	@ConditionalOnClass({ RabbitTemplate.class, Channel.class })
+	@ConditionalOnBean(AbstractConnectionFactory.class)
+	@ConditionalOnProperty(prefix = , name = , matchIfMissing = true)
+	static class MetricsRabbitConfiguration {
+
+		@Bean
+		public RabbitMetrics rabbitMetrics(AbstractConnectionFactory connectionFactory) {
+			return new RabbitMetrics(connectionFactory.getRabbitConnectionFactory());
+		}
+
+	}
+
 	@Configuration
 	static class MeterRegistryConfigurationSupport {
 

