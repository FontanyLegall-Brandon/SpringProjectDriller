{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': "@@ -27,25 +27,24 @@ import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClas\n import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.data.redis.connection.PoolConfig;\n import org.springframework.data.redis.connection.RedisConnectionFactory;\n-import org.springframework.data.redis.connection.lettuce.DefaultLettucePool;\n-import org.springframework.data.redis.connection.lettuce.LettuceConnection;\n-import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;\n-import org.springframework.data.redis.connection.lettuce.LettucePool;\n+import org.springframework.data.redis.connection.jedis.JedisConnection;\n+import org.springframework.data.redis.connection.jedis.JedisConnectionFactory;\n import org.springframework.data.redis.core.RedisOperations;\n import org.springframework.data.redis.core.RedisTemplate;\n import org.springframework.data.redis.core.StringRedisTemplate;\n \n-import com.lambdaworks.redis.RedisClient;\n+import redis.clients.jedis.Jedis;\n+import redis.clients.jedis.JedisPoolConfig;\n \n /**\n  * {@link EnableAutoConfiguration Auto-configuration} for Spring Data's Redis support.\n- * \n+ *\n  * @author Dave Syer\n+ * @author Andy Wilkinson\n  */\n @Configuration\n-@ConditionalOnClass({ LettuceConnection.class, RedisOperations.class, RedisClient.class })\n+@ConditionalOnClass({ JedisConnection.class, RedisOperations.class, Jedis.class })\n @EnableConfigurationProperties\n public class RedisAutoConfiguration {\n \n@@ -59,8 +58,9 @@ public class RedisAutoConfiguration {\n \t\t@Bean\n \t\t@ConditionalOnMissingBean\n \t\tRedisConnectionFactory redisConnectionFactory() throws UnknownHostException {\n-\t\t\tLettuceConnectionFactory factory = new LettuceConnectionFactory(\n-\t\t\t\t\tthis.properties.getHost(), this.properties.getPort());\n+\t\t\tJedisConnectionFactory factory = new JedisConnectionFactory();\n+\t\t\tfactory.setHostName(this.properties.getHost());\n+\t\t\tfactory.setPort(this.properties.getPort());\n \t\t\tif (this.properties.getPassword() != null) {\n \t\t\t\tfactory.setPassword(this.properties.getPassword());\n \t\t\t}\n@@ -80,35 +80,27 @@ public class RedisAutoConfiguration {\n \t\t@ConditionalOnMissingBean\n \t\tRedisConnectionFactory redisConnectionFactory() throws UnknownHostException {\n \t\t\tif (this.properties.getPool() != null) {\n-\t\t\t\tLettuceConnectionFactory factory = new LettuceConnectionFactory(\n-\t\t\t\t\t\tlettucePool());\n+\t\t\t\tJedisConnectionFactory factory = new JedisConnectionFactory(\n+\t\t\t\t\t\tjedisPoolConfig());\n \t\t\t\treturn factory;\n \t\t\t}\n-\t\t\tLettuceConnectionFactory factory = new LettuceConnectionFactory(\n-\t\t\t\t\tthis.properties.getHost(), this.properties.getPort());\n+\t\t\tJedisConnectionFactory factory = new JedisConnectionFactory();\n+\t\t\tfactory.setHostName(this.properties.getHost());\n+\t\t\tfactory.setPort(this.properties.getPort());\n \t\t\tif (this.properties.getPassword() != null) {\n \t\t\t\tfactory.setPassword(this.properties.getPassword());\n \t\t\t}\n \t\t\treturn factory;\n \t\t}\n \n-\t\t@Bean\n-\t\t@ConditionalOnMissingBean\n-\t\tpublic LettucePool lettucePool() {\n-\t\t\treturn new DefaultLettucePool(this.properties.getHost(),\n-\t\t\t\t\tthis.properties.getPort(), poolConfig());\n-\t\t}\n-\n-\t\tprivate PoolConfig poolConfig() {\n-\t\t\tPoolConfig pool = new PoolConfig();\n+\t\tprivate JedisPoolConfig jedisPoolConfig() {\n+\t\t\tJedisPoolConfig config = new JedisPoolConfig();\n \t\t\tRedisProperties.Pool props = this.properties.getPool();\n-\t\t\tif (props != null) {\n-\t\t\t\tpool.setMaxActive(props.getMaxActive());\n-\t\t\t\tpool.setMaxIdle(props.getMaxIdle());\n-\t\t\t\tpool.setMinIdle(props.getMinIdle());\n-\t\t\t\tpool.setMaxWait(props.getMaxWait());\n-\t\t\t}\n-\t\t\treturn pool;\n+\t\t\tconfig.setMaxActive(props.getMaxActive());\n+\t\t\tconfig.setMaxIdle(props.getMaxIdle());\n+\t\t\tconfig.setMinIdle(props.getMinIdle());\n+\t\t\tconfig.setMaxWait(props.getMaxWait());\n+\t\t\treturn config;\n \t\t}\n \n \t}\n", 'source_code': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.redis;\n\nimport java.net.UnknownHostException;\n\nimport org.apache.commons.pool.impl.GenericObjectPool;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.connection.RedisConnectionFactory;\nimport org.springframework.data.redis.connection.jedis.JedisConnection;\nimport org.springframework.data.redis.connection.jedis.JedisConnectionFactory;\nimport org.springframework.data.redis.core.RedisOperations;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.StringRedisTemplate;\n\nimport redis.clients.jedis.Jedis;\nimport redis.clients.jedis.JedisPoolConfig;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Redis support.\n *\n * @author Dave Syer\n * @author Andy Wilkinson\n */\n@Configuration\n@ConditionalOnClass({ JedisConnection.class, RedisOperations.class, Jedis.class })\n@EnableConfigurationProperties\npublic class RedisAutoConfiguration {\n\n\t@Configuration\n\t@ConditionalOnMissingClass(name = "org.apache.commons.pool.impl.GenericObjectPool")\n\tprotected static class RedisConnectionConfiguration {\n\n\t\t@Autowired\n\t\tprivate RedisProperties properties;\n\n\t\t@Bean\n\t\t@ConditionalOnMissingBean\n\t\tRedisConnectionFactory redisConnectionFactory() throws UnknownHostException {\n\t\t\tJedisConnectionFactory factory = new JedisConnectionFactory();\n\t\t\tfactory.setHostName(this.properties.getHost());\n\t\t\tfactory.setPort(this.properties.getPort());\n\t\t\tif (this.properties.getPassword() != null) {\n\t\t\t\tfactory.setPassword(this.properties.getPassword());\n\t\t\t}\n\t\t\treturn factory;\n\t\t}\n\n\t}\n\n\t@Configuration\n\t@ConditionalOnClass(GenericObjectPool.class)\n\tprotected static class RedisPooledConnectionConfiguration {\n\n\t\t@Autowired\n\t\tprivate RedisProperties properties;\n\n\t\t@Bean\n\t\t@ConditionalOnMissingBean\n\t\tRedisConnectionFactory redisConnectionFactory() throws UnknownHostException {\n\t\t\tif (this.properties.getPool() != null) {\n\t\t\t\tJedisConnectionFactory factory = new JedisConnectionFactory(\n\t\t\t\t\t\tjedisPoolConfig());\n\t\t\t\treturn factory;\n\t\t\t}\n\t\t\tJedisConnectionFactory factory = new JedisConnectionFactory();\n\t\t\tfactory.setHostName(this.properties.getHost());\n\t\t\tfactory.setPort(this.properties.getPort());\n\t\t\tif (this.properties.getPassword() != null) {\n\t\t\t\tfactory.setPassword(this.properties.getPassword());\n\t\t\t}\n\t\t\treturn factory;\n\t\t}\n\n\t\tprivate JedisPoolConfig jedisPoolConfig() {\n\t\t\tJedisPoolConfig config = new JedisPoolConfig();\n\t\t\tRedisProperties.Pool props = this.properties.getPool();\n\t\t\tconfig.setMaxActive(props.getMaxActive());\n\t\t\tconfig.setMaxIdle(props.getMaxIdle());\n\t\t\tconfig.setMinIdle(props.getMinIdle());\n\t\t\tconfig.setMaxWait(props.getMaxWait());\n\t\t\treturn config;\n\t\t}\n\n\t}\n\n\t@Bean(name = "org.springframework.autoconfigure.redis.RedisProperties")\n\t@ConditionalOnMissingBean\n\tpublic RedisProperties redisProperties() {\n\n\t\treturn new RedisProperties();\n\n\t}\n\n\t@Configuration\n\tprotected static class RedisConfiguration {\n\n\t\t@Autowired\n\t\tprivate RedisProperties properties;\n\n\t\t@Bean\n\t\t@ConditionalOnMissingBean(name = "redisTemplate")\n\t\tRedisOperations<Object, Object> redisTemplate(\n\t\t\t\tRedisConnectionFactory redisConnectionFactory)\n\t\t\t\tthrows UnknownHostException {\n\t\t\tRedisTemplate<Object, Object> template = new RedisTemplate<Object, Object>();\n\t\t\ttemplate.setConnectionFactory(redisConnectionFactory);\n\t\t\treturn template;\n\t\t}\n\n\t\t@Bean\n\t\t@ConditionalOnMissingBean(StringRedisTemplate.class)\n\t\tStringRedisTemplate stringRedisTemplate(\n\t\t\t\tRedisConnectionFactory redisConnectionFactory)\n\t\t\t\tthrows UnknownHostException {\n\t\t\tStringRedisTemplate template = new StringRedisTemplate();\n\t\t\ttemplate.setConnectionFactory(redisConnectionFactory);\n\t\t\treturn template;\n\t\t}\n\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.redis;\n\nimport java.net.UnknownHostException;\n\nimport org.apache.commons.pool.impl.GenericObjectPool;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.connection.PoolConfig;\nimport org.springframework.data.redis.connection.RedisConnectionFactory;\nimport org.springframework.data.redis.connection.lettuce.DefaultLettucePool;\nimport org.springframework.data.redis.connection.lettuce.LettuceConnection;\nimport org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;\nimport org.springframework.data.redis.connection.lettuce.LettucePool;\nimport org.springframework.data.redis.core.RedisOperations;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.StringRedisTemplate;\n\nimport com.lambdaworks.redis.RedisClient;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Data\'s Redis support.\n * \n * @author Dave Syer\n */\n@Configuration\n@ConditionalOnClass({ LettuceConnection.class, RedisOperations.class, RedisClient.class })\n@EnableConfigurationProperties\npublic class RedisAutoConfiguration {\n\n\t@Configuration\n\t@ConditionalOnMissingClass(name = "org.apache.commons.pool.impl.GenericObjectPool")\n\tprotected static class RedisConnectionConfiguration {\n\n\t\t@Autowired\n\t\tprivate RedisProperties properties;\n\n\t\t@Bean\n\t\t@ConditionalOnMissingBean\n\t\tRedisConnectionFactory redisConnectionFactory() throws UnknownHostException {\n\t\t\tLettuceConnectionFactory factory = new LettuceConnectionFactory(\n\t\t\t\t\tthis.properties.getHost(), this.properties.getPort());\n\t\t\tif (this.properties.getPassword() != null) {\n\t\t\t\tfactory.setPassword(this.properties.getPassword());\n\t\t\t}\n\t\t\treturn factory;\n\t\t}\n\n\t}\n\n\t@Configuration\n\t@ConditionalOnClass(GenericObjectPool.class)\n\tprotected static class RedisPooledConnectionConfiguration {\n\n\t\t@Autowired\n\t\tprivate RedisProperties properties;\n\n\t\t@Bean\n\t\t@ConditionalOnMissingBean\n\t\tRedisConnectionFactory redisConnectionFactory() throws UnknownHostException {\n\t\t\tif (this.properties.getPool() != null) {\n\t\t\t\tLettuceConnectionFactory factory = new LettuceConnectionFactory(\n\t\t\t\t\t\tlettucePool());\n\t\t\t\treturn factory;\n\t\t\t}\n\t\t\tLettuceConnectionFactory factory = new LettuceConnectionFactory(\n\t\t\t\t\tthis.properties.getHost(), this.properties.getPort());\n\t\t\tif (this.properties.getPassword() != null) {\n\t\t\t\tfactory.setPassword(this.properties.getPassword());\n\t\t\t}\n\t\t\treturn factory;\n\t\t}\n\n\t\t@Bean\n\t\t@ConditionalOnMissingBean\n\t\tpublic LettucePool lettucePool() {\n\t\t\treturn new DefaultLettucePool(this.properties.getHost(),\n\t\t\t\t\tthis.properties.getPort(), poolConfig());\n\t\t}\n\n\t\tprivate PoolConfig poolConfig() {\n\t\t\tPoolConfig pool = new PoolConfig();\n\t\t\tRedisProperties.Pool props = this.properties.getPool();\n\t\t\tif (props != null) {\n\t\t\t\tpool.setMaxActive(props.getMaxActive());\n\t\t\t\tpool.setMaxIdle(props.getMaxIdle());\n\t\t\t\tpool.setMinIdle(props.getMinIdle());\n\t\t\t\tpool.setMaxWait(props.getMaxWait());\n\t\t\t}\n\t\t\treturn pool;\n\t\t}\n\n\t}\n\n\t@Bean(name = "org.springframework.autoconfigure.redis.RedisProperties")\n\t@ConditionalOnMissingBean\n\tpublic RedisProperties redisProperties() {\n\n\t\treturn new RedisProperties();\n\n\t}\n\n\t@Configuration\n\tprotected static class RedisConfiguration {\n\n\t\t@Autowired\n\t\tprivate RedisProperties properties;\n\n\t\t@Bean\n\t\t@ConditionalOnMissingBean(name = "redisTemplate")\n\t\tRedisOperations<Object, Object> redisTemplate(\n\t\t\t\tRedisConnectionFactory redisConnectionFactory)\n\t\t\t\tthrows UnknownHostException {\n\t\t\tRedisTemplate<Object, Object> template = new RedisTemplate<Object, Object>();\n\t\t\ttemplate.setConnectionFactory(redisConnectionFactory);\n\t\t\treturn template;\n\t\t}\n\n\t\t@Bean\n\t\t@ConditionalOnMissingBean(StringRedisTemplate.class)\n\t\tStringRedisTemplate stringRedisTemplate(\n\t\t\t\tRedisConnectionFactory redisConnectionFactory)\n\t\t\t\tthrows UnknownHostException {\n\t\t\tStringRedisTemplate template = new StringRedisTemplate();\n\t\t\ttemplate.setConnectionFactory(redisConnectionFactory);\n\t\t\treturn template;\n\t\t}\n\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
