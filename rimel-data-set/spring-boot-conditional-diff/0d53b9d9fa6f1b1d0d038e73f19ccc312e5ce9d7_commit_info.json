{'_old_path': None, '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/GridFsTemplateAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': "@@ -0,0 +1,56 @@\n+package org.springframework.boot.autoconfigure.mongo;\n+\n+import com.mongodb.Mongo;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.AutoConfigureAfter;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.data.mongodb.MongoDbFactory;\n+import org.springframework.data.mongodb.core.MongoTemplate;\n+import org.springframework.data.mongodb.core.SimpleMongoDbFactory;\n+import org.springframework.data.mongodb.gridfs.GridFsTemplate;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * <P>\n+ * {@link org.springframework.boot.autoconfigure.EnableAutoConfiguration Auto-configuration} for\n+ * Mongo's {@link com.mongodb.gridfs.GridFS Grid FS} Spring Data's\n+ * {@link org.springframework.data.mongodb.gridfs.GridFsTemplate GridFsTemplate}.\n+ *\n+ * <p>\n+ * You can override which GridFS database is used by specifying {@code spring.data.mongodb.gridFsDatabase},\n+ * otherwise it defaults to the general {@code spring.data.mongodb.database} parameter.\n+ *\n+ * @author Josh Long\n+ */\n+@Configuration\n+@ConditionalOnClass({Mongo.class, GridFsTemplate.class})\n+@EnableConfigurationProperties(MongoProperties.class)\n+@AutoConfigureAfter(MongoTemplateAutoConfiguration.class)\n+public class GridFsTemplateAutoConfiguration {\n+\n+    @Autowired\n+    private MongoProperties mongoProperties;\n+\n+    @Bean\n+    @ConditionalOnMissingBean\n+    public MongoDbFactory mongoDbFactory(Mongo mongo) throws Exception {\n+\n+        String db = StringUtils.hasText(this.mongoProperties.getGridFsDatabase()) ?\n+                this.mongoProperties.getGridFsDatabase() : this.mongoProperties.getMongoClientDatabase() ;\n+\n+        return new SimpleMongoDbFactory(mongo, db );\n+    }\n+\n+    @Bean\n+    @ConditionalOnMissingBean\n+    public GridFsTemplate gridFsTemplate(MongoDbFactory mongoDbFactory,\n+                                         MongoTemplate mongoTemplate) {\n+        return new GridFsTemplate(mongoDbFactory, mongoTemplate.getConverter());\n+    }\n+\n+\n+}\n", 'source_code': "package org.springframework.boot.autoconfigure.mongo;\n\nimport com.mongodb.Mongo;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.mongodb.MongoDbFactory;\nimport org.springframework.data.mongodb.core.MongoTemplate;\nimport org.springframework.data.mongodb.core.SimpleMongoDbFactory;\nimport org.springframework.data.mongodb.gridfs.GridFsTemplate;\nimport org.springframework.util.StringUtils;\n\n/**\n * <P>\n * {@link org.springframework.boot.autoconfigure.EnableAutoConfiguration Auto-configuration} for\n * Mongo's {@link com.mongodb.gridfs.GridFS Grid FS} Spring Data's\n * {@link org.springframework.data.mongodb.gridfs.GridFsTemplate GridFsTemplate}.\n *\n * <p>\n * You can override which GridFS database is used by specifying {@code spring.data.mongodb.gridFsDatabase},\n * otherwise it defaults to the general {@code spring.data.mongodb.database} parameter.\n *\n * @author Josh Long\n */\n@Configuration\n@ConditionalOnClass({Mongo.class, GridFsTemplate.class})\n@EnableConfigurationProperties(MongoProperties.class)\n@AutoConfigureAfter(MongoTemplateAutoConfiguration.class)\npublic class GridFsTemplateAutoConfiguration {\n\n    @Autowired\n    private MongoProperties mongoProperties;\n\n    @Bean\n    @ConditionalOnMissingBean\n    public MongoDbFactory mongoDbFactory(Mongo mongo) throws Exception {\n\n        String db = StringUtils.hasText(this.mongoProperties.getGridFsDatabase()) ?\n                this.mongoProperties.getGridFsDatabase() : this.mongoProperties.getMongoClientDatabase() ;\n\n        return new SimpleMongoDbFactory(mongo, db );\n    }\n\n    @Bean\n    @ConditionalOnMissingBean\n    public GridFsTemplate gridFsTemplate(MongoDbFactory mongoDbFactory,\n                                         MongoTemplate mongoTemplate) {\n        return new GridFsTemplate(mongoDbFactory, mongoTemplate.getConverter());\n    }\n\n\n}\n", 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
