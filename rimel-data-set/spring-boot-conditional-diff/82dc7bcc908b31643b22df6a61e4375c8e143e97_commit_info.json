{'_old_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': "@@ -36,6 +36,7 @@ import org.springframework.hateoas.config.EnableHypermediaSupport;\n import org.springframework.hateoas.config.EnableHypermediaSupport.HypermediaType;\n import org.springframework.plugin.core.Plugin;\n import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter;\n \n /**\n  * {@link EnableAutoConfiguration Auto-configuration} for Spring HATEOAS's\n@@ -47,7 +48,7 @@ import org.springframework.web.bind.annotation.RequestMapping;\n  * @since 1.1.0\n  */\n @Configuration(proxyBeanMethods = false)\n-@ConditionalOnClass({ EntityModel.class, RequestMapping.class, Plugin.class })\n+@ConditionalOnClass({ EntityModel.class, RequestMapping.class, RequestMappingHandlerAdapter.class, Plugin.class })\n @ConditionalOnWebApplication\n @AutoConfigureAfter({ WebMvcAutoConfiguration.class, JacksonAutoConfiguration.class,\n \t\tHttpMessageConvertersAutoConfiguration.class, RepositoryRestMvcAutoConfiguration.class })\n", 'source_code': '/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.hateoas;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration;\nimport org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\nimport org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration;\nimport org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.hateoas.EntityModel;\nimport org.springframework.hateoas.client.LinkDiscoverers;\nimport org.springframework.hateoas.config.EnableHypermediaSupport;\nimport org.springframework.hateoas.config.EnableHypermediaSupport.HypermediaType;\nimport org.springframework.plugin.core.Plugin;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring HATEOAS\'s\n * {@link EnableHypermediaSupport @EnableHypermediaSupport}.\n *\n * @author Roy Clarkson\n * @author Oliver Gierke\n * @author Andy Wilkinson\n * @since 1.1.0\n */\n@Configuration(proxyBeanMethods = false)\n@ConditionalOnClass({ EntityModel.class, RequestMapping.class, RequestMappingHandlerAdapter.class, Plugin.class })\n@ConditionalOnWebApplication\n@AutoConfigureAfter({ WebMvcAutoConfiguration.class, JacksonAutoConfiguration.class,\n\t\tHttpMessageConvertersAutoConfiguration.class, RepositoryRestMvcAutoConfiguration.class })\n@EnableConfigurationProperties(HateoasProperties.class)\n@Import(HypermediaHttpMessageConverterConfiguration.class)\npublic class HypermediaAutoConfiguration {\n\n\t@Configuration(proxyBeanMethods = false)\n\t@ConditionalOnMissingBean(LinkDiscoverers.class)\n\t@ConditionalOnClass(ObjectMapper.class)\n\t@EnableHypermediaSupport(type = HypermediaType.HAL)\n\tprotected static class HypermediaConfiguration {\n\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.hateoas;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration;\nimport org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\nimport org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration;\nimport org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.hateoas.EntityModel;\nimport org.springframework.hateoas.client.LinkDiscoverers;\nimport org.springframework.hateoas.config.EnableHypermediaSupport;\nimport org.springframework.hateoas.config.EnableHypermediaSupport.HypermediaType;\nimport org.springframework.plugin.core.Plugin;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring HATEOAS\'s\n * {@link EnableHypermediaSupport @EnableHypermediaSupport}.\n *\n * @author Roy Clarkson\n * @author Oliver Gierke\n * @author Andy Wilkinson\n * @since 1.1.0\n */\n@Configuration(proxyBeanMethods = false)\n@ConditionalOnClass({ EntityModel.class, RequestMapping.class, Plugin.class })\n@ConditionalOnWebApplication\n@AutoConfigureAfter({ WebMvcAutoConfiguration.class, JacksonAutoConfiguration.class,\n\t\tHttpMessageConvertersAutoConfiguration.class, RepositoryRestMvcAutoConfiguration.class })\n@EnableConfigurationProperties(HateoasProperties.class)\n@Import(HypermediaHttpMessageConverterConfiguration.class)\npublic class HypermediaAutoConfiguration {\n\n\t@Configuration(proxyBeanMethods = false)\n\t@ConditionalOnMissingBean(LinkDiscoverers.class)\n\t@ConditionalOnClass(ObjectMapper.class)\n\t@EnableHypermediaSupport(type = HypermediaType.HAL)\n\tprotected static class HypermediaConfiguration {\n\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
