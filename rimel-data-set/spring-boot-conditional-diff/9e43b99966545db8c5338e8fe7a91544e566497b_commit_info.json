{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/reactive/WebfluxSecurityConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/reactive/WebfluxSecurityConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -20,7 +20,6 @@ import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\n import org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;\n-import org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration;\n \n /**\n  * Switches on {@link EnableWebFluxSecurity} for a reactive web application if this\n@@ -30,9 +29,9 @@ import org.springframework.security.config.annotation.web.reactive.WebFluxSecuri\n  * @since 2.0.0\n  */\n @ConditionalOnClass(EnableWebFluxSecurity.class)\n-@ConditionalOnMissingBean(WebFluxSecurityConfiguration.class)\n+@ConditionalOnMissingBean(org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration.class)\n @ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.REACTIVE)\n @EnableWebFluxSecurity\n-public class WebfluxSecurityConfiguration {\n+public class WebFluxSecurityConfiguration {\n \n }\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.security.reactive;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;\n\n/**\n * Switches on {@link EnableWebFluxSecurity} for a reactive web application if this\n * annotation has not been added by the user.\n *\n * @author Madhura Bhave\n * @since 2.0.0\n */\n@ConditionalOnClass(EnableWebFluxSecurity.class)\n@ConditionalOnMissingBean(org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration.class)\n@ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.REACTIVE)\n@EnableWebFluxSecurity\npublic class WebFluxSecurityConfiguration {\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.security.reactive;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;\nimport org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration;\n\n/**\n * Switches on {@link EnableWebFluxSecurity} for a reactive web application if this\n * annotation has not been added by the user.\n *\n * @author Madhura Bhave\n * @since 2.0.0\n */\n@ConditionalOnClass(EnableWebFluxSecurity.class)\n@ConditionalOnMissingBean(WebFluxSecurityConfiguration.class)\n@ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.REACTIVE)\n@EnableWebFluxSecurity\npublic class WebfluxSecurityConfiguration {\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
