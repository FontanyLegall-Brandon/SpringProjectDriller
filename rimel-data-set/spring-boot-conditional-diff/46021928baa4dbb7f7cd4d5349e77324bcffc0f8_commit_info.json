{'_old_path': None, '_new_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2012-2018 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure.web.servlet;\n+\n+import javax.servlet.Servlet;\n+\n+import io.undertow.Undertow;\n+import org.apache.catalina.startup.Tomcat;\n+import org.apache.coyote.UpgradeProtocol;\n+import org.eclipse.jetty.server.Server;\n+import org.eclipse.jetty.util.Loader;\n+import org.eclipse.jetty.webapp.WebAppContext;\n+import org.xnio.SslClientAuthMode;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.SearchStrategy;\n+import org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory;\n+import org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;\n+import org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory;\n+import org.springframework.boot.web.servlet.server.ServletWebServerFactory;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Configuration classes for servlet web servers\n+ * <p>\n+ * Those should be {@code @Import} in a regular auto-configuration class to guarantee\n+ * their order of execution.\n+ *\n+ * @author Phillip Webb\n+ * @author Dave Syer\n+ * @author Ivan Sopov\n+ * @author Brian Clozel\n+ * @author Stephane Nicoll\n+ */\n+class ServletWebServerFactoryConfiguration {\n+\n+\t@Configuration\n+\t@ConditionalOnClass({ Servlet.class, Tomcat.class, UpgradeProtocol.class })\n+\t@ConditionalOnMissingBean(value = ServletWebServerFactory.class, search = SearchStrategy.CURRENT)\n+\tpublic static class EmbeddedTomcat {\n+\n+\t\t@Bean\n+\t\tpublic TomcatServletWebServerFactory tomcatServletWebServerFactory() {\n+\t\t\treturn new TomcatServletWebServerFactory();\n+\t\t}\n+\n+\t}\n+\n+\t/**\n+\t * Nested configuration if Jetty is being used.\n+\t */\n+\t@Configuration\n+\t@ConditionalOnClass({ Servlet.class, Server.class, Loader.class,\n+\t\t\tWebAppContext.class })\n+\t@ConditionalOnMissingBean(value = ServletWebServerFactory.class, search = SearchStrategy.CURRENT)\n+\tpublic static class EmbeddedJetty {\n+\n+\t\t@Bean\n+\t\tpublic JettyServletWebServerFactory JettyServletWebServerFactory() {\n+\t\t\treturn new JettyServletWebServerFactory();\n+\t\t}\n+\n+\t}\n+\n+\t/**\n+\t * Nested configuration if Undertow is being used.\n+\t */\n+\t@Configuration\n+\t@ConditionalOnClass({ Servlet.class, Undertow.class, SslClientAuthMode.class })\n+\t@ConditionalOnMissingBean(value = ServletWebServerFactory.class, search = SearchStrategy.CURRENT)\n+\tpublic static class EmbeddedUndertow {\n+\n+\t\t@Bean\n+\t\tpublic UndertowServletWebServerFactory undertowServletWebServerFactory() {\n+\t\t\treturn new UndertowServletWebServerFactory();\n+\t\t}\n+\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.web.servlet;\n\nimport javax.servlet.Servlet;\n\nimport io.undertow.Undertow;\nimport org.apache.catalina.startup.Tomcat;\nimport org.apache.coyote.UpgradeProtocol;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.util.Loader;\nimport org.eclipse.jetty.webapp.WebAppContext;\nimport org.xnio.SslClientAuthMode;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.SearchStrategy;\nimport org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory;\nimport org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;\nimport org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory;\nimport org.springframework.boot.web.servlet.server.ServletWebServerFactory;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * Configuration classes for servlet web servers\n * <p>\n * Those should be {@code @Import} in a regular auto-configuration class to guarantee\n * their order of execution.\n *\n * @author Phillip Webb\n * @author Dave Syer\n * @author Ivan Sopov\n * @author Brian Clozel\n * @author Stephane Nicoll\n */\nclass ServletWebServerFactoryConfiguration {\n\n\t@Configuration\n\t@ConditionalOnClass({ Servlet.class, Tomcat.class, UpgradeProtocol.class })\n\t@ConditionalOnMissingBean(value = ServletWebServerFactory.class, search = SearchStrategy.CURRENT)\n\tpublic static class EmbeddedTomcat {\n\n\t\t@Bean\n\t\tpublic TomcatServletWebServerFactory tomcatServletWebServerFactory() {\n\t\t\treturn new TomcatServletWebServerFactory();\n\t\t}\n\n\t}\n\n\t/**\n\t * Nested configuration if Jetty is being used.\n\t */\n\t@Configuration\n\t@ConditionalOnClass({ Servlet.class, Server.class, Loader.class,\n\t\t\tWebAppContext.class })\n\t@ConditionalOnMissingBean(value = ServletWebServerFactory.class, search = SearchStrategy.CURRENT)\n\tpublic static class EmbeddedJetty {\n\n\t\t@Bean\n\t\tpublic JettyServletWebServerFactory JettyServletWebServerFactory() {\n\t\t\treturn new JettyServletWebServerFactory();\n\t\t}\n\n\t}\n\n\t/**\n\t * Nested configuration if Undertow is being used.\n\t */\n\t@Configuration\n\t@ConditionalOnClass({ Servlet.class, Undertow.class, SslClientAuthMode.class })\n\t@ConditionalOnMissingBean(value = ServletWebServerFactory.class, search = SearchStrategy.CURRENT)\n\tpublic static class EmbeddedUndertow {\n\n\t\t@Bean\n\t\tpublic UndertowServletWebServerFactory undertowServletWebServerFactory() {\n\t\t\treturn new UndertowServletWebServerFactory();\n\t\t}\n\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
