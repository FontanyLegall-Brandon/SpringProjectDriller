@@ -0,0 +1,60 @@
+
+
+package org.springframework.boot.actuate.autoconfigure.hazelcast;
+
+import java.util.Map;
+
+import com.hazelcast.core.HazelcastInstance;
+
+import org.springframework.boot.actuate.autoconfigure.health.CompositeHealthIndicatorConfiguration;
+import org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;
+import org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration;
+import org.springframework.boot.actuate.hazelcast.HazelcastHealthIndicator;
+import org.springframework.boot.actuate.health.HealthIndicator;
+import org.springframework.boot.autoconfigure.AutoConfigureAfter;
+import org.springframework.boot.autoconfigure.AutoConfigureBefore;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+
+@Configuration(proxyBeanMethods = false)
+@ConditionalOnClass(HazelcastInstance.class)
+@ConditionalOnBean(HazelcastInstance.class)
+@ConditionalOnEnabledHealthIndicator()
+@AutoConfigureBefore(HealthIndicatorAutoConfiguration.class)
+@AutoConfigureAfter(HazelcastAutoConfiguration.class)
+public class HazelcastHealthIndicatorAutoConfiguration
+		extends CompositeHealthIndicatorConfiguration<HazelcastHealthIndicator, HazelcastInstance> {
+
+	@Bean
+	@ConditionalOnMissingBean(name = )
+	public HealthIndicator hazelcastHealthIndicator(Map<String, HazelcastInstance> hazelcastInstances) {
+		return createHealthIndicator(hazelcastInstances);
+	}
+
+}

