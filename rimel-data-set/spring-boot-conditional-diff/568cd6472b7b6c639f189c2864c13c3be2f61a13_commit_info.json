{'_old_path': None, '_new_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/couchbase/SpringBootCouchbaseReactiveDataConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2012-2017 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure.data.couchbase;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.data.couchbase.config.AbstractReactiveCouchbaseDataConfiguration;\n+import org.springframework.data.couchbase.config.BeanNames;\n+import org.springframework.data.couchbase.config.CouchbaseConfigurer;\n+import org.springframework.data.couchbase.core.RxJavaCouchbaseTemplate;\n+import org.springframework.data.couchbase.core.query.Consistency;\n+import org.springframework.data.couchbase.repository.config.ReactiveRepositoryOperationsMapping;\n+\n+/**\n+ * Configure Spring Data\'s reactive couchbase support.\n+ *\n+ * @author Alex Derkach\n+ * @since 2.0.0\n+ */\n+@Configuration\n+@ConditionalOnMissingBean(AbstractReactiveCouchbaseDataConfiguration.class)\n+@ConditionalOnBean(CouchbaseConfigurer.class)\n+class SpringBootCouchbaseReactiveDataConfiguration extends AbstractReactiveCouchbaseDataConfiguration {\n+\n+\tprivate final CouchbaseDataProperties properties;\n+\n+\tprivate final CouchbaseConfigurer couchbaseConfigurer;\n+\n+\tSpringBootCouchbaseReactiveDataConfiguration(CouchbaseDataProperties properties,\n+\t\t\tCouchbaseConfigurer couchbaseConfigurer) {\n+\t\tthis.properties = properties;\n+\t\tthis.couchbaseConfigurer = couchbaseConfigurer;\n+\t}\n+\n+\t@Override\n+\tprotected CouchbaseConfigurer couchbaseConfigurer() {\n+\t\treturn this.couchbaseConfigurer;\n+\t}\n+\n+\t@Override\n+\tprotected Consistency getDefaultConsistency() {\n+\t\treturn this.properties.getConsistency();\n+\t}\n+\n+\t@Override\n+\t@ConditionalOnMissingBean(name = BeanNames.RXJAVA1_COUCHBASE_TEMPLATE)\n+\t@Bean(name = BeanNames.RXJAVA1_COUCHBASE_TEMPLATE)\n+\tpublic RxJavaCouchbaseTemplate reactiveCouchbaseTemplate() throws Exception {\n+\t\treturn super.reactiveCouchbaseTemplate();\n+\t}\n+\n+\t@Override\n+\t@ConditionalOnMissingBean(name = BeanNames.REACTIVE_COUCHBASE_OPERATIONS_MAPPING)\n+\t@Bean(name = BeanNames.REACTIVE_COUCHBASE_OPERATIONS_MAPPING)\n+\tpublic ReactiveRepositoryOperationsMapping reactiveRepositoryOperationsMapping(RxJavaCouchbaseTemplate reactiveCouchbaseTemplate) throws Exception {\n+\t\treturn super.reactiveRepositoryOperationsMapping(reactiveCouchbaseTemplate);\n+\t}\n+}\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data.couchbase;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.couchbase.config.AbstractReactiveCouchbaseDataConfiguration;\nimport org.springframework.data.couchbase.config.BeanNames;\nimport org.springframework.data.couchbase.config.CouchbaseConfigurer;\nimport org.springframework.data.couchbase.core.RxJavaCouchbaseTemplate;\nimport org.springframework.data.couchbase.core.query.Consistency;\nimport org.springframework.data.couchbase.repository.config.ReactiveRepositoryOperationsMapping;\n\n/**\n * Configure Spring Data\'s reactive couchbase support.\n *\n * @author Alex Derkach\n * @since 2.0.0\n */\n@Configuration\n@ConditionalOnMissingBean(AbstractReactiveCouchbaseDataConfiguration.class)\n@ConditionalOnBean(CouchbaseConfigurer.class)\nclass SpringBootCouchbaseReactiveDataConfiguration extends AbstractReactiveCouchbaseDataConfiguration {\n\n\tprivate final CouchbaseDataProperties properties;\n\n\tprivate final CouchbaseConfigurer couchbaseConfigurer;\n\n\tSpringBootCouchbaseReactiveDataConfiguration(CouchbaseDataProperties properties,\n\t\t\tCouchbaseConfigurer couchbaseConfigurer) {\n\t\tthis.properties = properties;\n\t\tthis.couchbaseConfigurer = couchbaseConfigurer;\n\t}\n\n\t@Override\n\tprotected CouchbaseConfigurer couchbaseConfigurer() {\n\t\treturn this.couchbaseConfigurer;\n\t}\n\n\t@Override\n\tprotected Consistency getDefaultConsistency() {\n\t\treturn this.properties.getConsistency();\n\t}\n\n\t@Override\n\t@ConditionalOnMissingBean(name = BeanNames.RXJAVA1_COUCHBASE_TEMPLATE)\n\t@Bean(name = BeanNames.RXJAVA1_COUCHBASE_TEMPLATE)\n\tpublic RxJavaCouchbaseTemplate reactiveCouchbaseTemplate() throws Exception {\n\t\treturn super.reactiveCouchbaseTemplate();\n\t}\n\n\t@Override\n\t@ConditionalOnMissingBean(name = BeanNames.REACTIVE_COUCHBASE_OPERATIONS_MAPPING)\n\t@Bean(name = BeanNames.REACTIVE_COUCHBASE_OPERATIONS_MAPPING)\n\tpublic ReactiveRepositoryOperationsMapping reactiveRepositoryOperationsMapping(RxJavaCouchbaseTemplate reactiveCouchbaseTemplate) throws Exception {\n\t\treturn super.reactiveRepositoryOperationsMapping(reactiveCouchbaseTemplate);\n\t}\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
