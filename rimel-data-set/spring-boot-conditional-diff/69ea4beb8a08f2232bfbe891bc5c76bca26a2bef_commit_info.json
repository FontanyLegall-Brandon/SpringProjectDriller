{'_old_path': None, '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/GzipFilterAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure.web;\n+\n+import org.eclipse.jetty.servlets.GzipFilter;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.context.embedded.FilterRegistrationBean;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * {@link EnableAutoConfiguration Auto-configuration} for {@link GzipFilter}.\n+ *\n+ * @author Andy Wilkinson\n+ * @since 1.2.2\n+ */\n+@Configuration\n+@ConditionalOnClass(GzipFilter.class)\n+@EnableConfigurationProperties(GzipFilterProperties.class)\n+public class GzipFilterAutoConfiguration {\n+\n+\t@Autowired\n+\tprivate GzipFilterProperties properties;\n+\n+\t@Bean\n+\tpublic FilterRegistrationBean gzipFilter() {\n+\t\tFilterRegistrationBean registration = new FilterRegistrationBean(new GzipFilter());\n+\t\tregistration.addUrlPatterns("/*");\n+\t\tregistration.setInitParameters(this.properties.getAsInitParameters());\n+\n+\t\treturn registration;\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.web;\n\nimport org.eclipse.jetty.servlets.GzipFilter;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.context.embedded.FilterRegistrationBean;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for {@link GzipFilter}.\n *\n * @author Andy Wilkinson\n * @since 1.2.2\n */\n@Configuration\n@ConditionalOnClass(GzipFilter.class)\n@EnableConfigurationProperties(GzipFilterProperties.class)\npublic class GzipFilterAutoConfiguration {\n\n\t@Autowired\n\tprivate GzipFilterProperties properties;\n\n\t@Bean\n\tpublic FilterRegistrationBean gzipFilter() {\n\t\tFilterRegistrationBean registration = new FilterRegistrationBean(new GzipFilter());\n\t\tregistration.addUrlPatterns("/*");\n\t\tregistration.setInitParameters(this.properties.getAsInitParameters());\n\n\t\treturn registration;\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
