{'_old_path': None, '_new_path': PosixPath('spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2012-2016 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.actuate.cloudfoundry;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Set;\n+\n+import org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration;\n+import org.springframework.boot.actuate.endpoint.mvc.MvcEndpoints;\n+import org.springframework.boot.actuate.endpoint.mvc.NamedMvcEndpoint;\n+import org.springframework.boot.autoconfigure.AutoConfigureAfter;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.cloud.CloudPlatform;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.cors.CorsConfiguration;\n+\n+/**\n+ * {@link EnableAutoConfiguration Auto-configuration} to expose actuator endpoints for\n+ * cloud foundry to use.\n+ *\n+ * @author Madhura Bhave\n+ * @since 1.5.0\n+ */\n+@Configuration\n+@ConditionalOnProperty(prefix = "management.cloudfoundry", name = "enabled", matchIfMissing = false)\n+@ConditionalOnBean(MvcEndpoints.class)\n+@AutoConfigureAfter(EndpointWebMvcAutoConfiguration.class)\n+@ConditionalOnCloudPlatform(CloudPlatform.CLOUD_FOUNDRY)\n+public class CloudFoundryActuatorAutoConfiguration {\n+\n+\t@Bean\n+\tpublic CloudFoundryEndpointHandlerMapping cloudFoundryEndpointHandlerMapping(\n+\t\t\tMvcEndpoints mvcEndpoints) {\n+\t\tSet<NamedMvcEndpoint> endpoints = new LinkedHashSet<NamedMvcEndpoint>(\n+\t\t\t\tmvcEndpoints.getEndpoints(NamedMvcEndpoint.class));\n+\t\tCloudFoundryEndpointHandlerMapping mapping = new CloudFoundryEndpointHandlerMapping(\n+\t\t\t\tendpoints, getCorsConfiguration());\n+\t\tmapping.setPrefix("/cloudfoundryapplication");\n+\t\treturn mapping;\n+\t}\n+\n+\tprivate CorsConfiguration getCorsConfiguration() {\n+\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n+\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n+\t\treturn corsConfiguration;\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2016 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.cloudfoundry;\n\nimport java.util.LinkedHashSet;\nimport java.util.Set;\n\nimport org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration;\nimport org.springframework.boot.actuate.endpoint.mvc.MvcEndpoints;\nimport org.springframework.boot.actuate.endpoint.mvc.NamedMvcEndpoint;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.cloud.CloudPlatform;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.cors.CorsConfiguration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} to expose actuator endpoints for\n * cloud foundry to use.\n *\n * @author Madhura Bhave\n * @since 1.5.0\n */\n@Configuration\n@ConditionalOnProperty(prefix = "management.cloudfoundry", name = "enabled", matchIfMissing = false)\n@ConditionalOnBean(MvcEndpoints.class)\n@AutoConfigureAfter(EndpointWebMvcAutoConfiguration.class)\n@ConditionalOnCloudPlatform(CloudPlatform.CLOUD_FOUNDRY)\npublic class CloudFoundryActuatorAutoConfiguration {\n\n\t@Bean\n\tpublic CloudFoundryEndpointHandlerMapping cloudFoundryEndpointHandlerMapping(\n\t\t\tMvcEndpoints mvcEndpoints) {\n\t\tSet<NamedMvcEndpoint> endpoints = new LinkedHashSet<NamedMvcEndpoint>(\n\t\t\t\tmvcEndpoints.getEndpoints(NamedMvcEndpoint.class));\n\t\tCloudFoundryEndpointHandlerMapping mapping = new CloudFoundryEndpointHandlerMapping(\n\t\t\t\tendpoints, getCorsConfiguration());\n\t\tmapping.setPrefix("/cloudfoundryapplication");\n\t\treturn mapping;\n\t}\n\n\tprivate CorsConfiguration getCorsConfiguration() {\n\t\tCorsConfiguration corsConfiguration = new CorsConfiguration();\n\t\tcorsConfiguration.addAllowedOrigin(CorsConfiguration.ALL);\n\t\treturn corsConfiguration;\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
