@@ -0,0 +1,63 @@
+
+
+package org.springframework.boot.actuate.autoconfigure;
+
+import org.springframework.boot.actuate.endpoint.MetricReaderPublicMetrics;
+import org.springframework.boot.actuate.endpoint.PublicMetrics;
+import org.springframework.boot.actuate.metrics.CounterService;
+import org.springframework.boot.actuate.metrics.GaugeService;
+import org.springframework.boot.actuate.metrics.reader.MetricRegistryMetricReader;
+import org.springframework.boot.actuate.metrics.writer.DropwizardMetricServices;
+import org.springframework.boot.autoconfigure.AutoConfigureBefore;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+import com.codahale.metrics.MetricRegistry;
+
+
+@Configuration
+@ConditionalOnClass(MetricRegistry.class)
+@AutoConfigureBefore(MetricRepositoryAutoConfiguration.class)
+public class MetricsDropwizardAutoConfiguration {
+
+	@Bean
+	@ConditionalOnMissingBean
+	public MetricRegistry metricRegistry() {
+		return new MetricRegistry();
+	}
+
+	@Bean
+	@ConditionalOnMissingBean({ DropwizardMetricServices.class, CounterService.class,
+			GaugeService.class })
+	public DropwizardMetricServices dropwizardMetricServices(MetricRegistry metricRegistry) {
+		return new DropwizardMetricServices(metricRegistry);
+	}
+
+	@Bean
+	public PublicMetrics dropwizardPublicMetrics(MetricRegistry metricRegistry) {
+		MetricRegistryMetricReader reader = new MetricRegistryMetricReader(metricRegistry);
+		return new MetricReaderPublicMetrics(reader);
+	}
+
+}
\ No newline at end of file

