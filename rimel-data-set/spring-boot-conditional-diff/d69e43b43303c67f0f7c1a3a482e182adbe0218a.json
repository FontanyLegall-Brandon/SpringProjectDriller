{"author_date": "2016-12-21 15:13:59-05:00", "msg": "Refactor Spring Integration metrics support\n\nUpdate Spring Integration metrics support since Spring Integration\n`4.3.6`+ no longer needs `spring-integration-jmx` enable\n`MessageChannel`, `MessageHandler` and `MessageSource` metrics.\n\n- Add `IntegrationManagementConfiguration` conditional auto-configuration\n  to provide `@EnableIntegrationManagement` when JMX is `enabled` or there\n  is no `IntegrationManagementConfigurer.MANAGEMENT_CONFIGURER_NAME` bean.\n  By default this bean doesn't exist and you explicitly should declare it\n  (e.g. via `@EnableIntegrationManagement`) if you would like to collect\n  metrics. At the same time Spring Integration enables it when JMX\n  management is present (that is a purpose of that new\n  `IntegrationManagementConfiguration`)\n\n- Change `SpringIntegrationMetricReader` to read metrics from the\n  `IntegrationManagementConfigurer`, not `IntegrationMBeanExporter`\n\n- Change `PublicMetricsAutoConfiguration` to register\n  `IntegrationManagementConfigurer.MANAGEMENT_CONFIGURER_NAME` bean if\n  not present. Since we are here in `actuator`, therefore we are\n  interested in the metrics for SI as well.\n\n- Since we don't need JMX for the metrics any more, remove SI-JMX\n  dependency from the `spring-boot-starter-integration`.\n\n- Remove `IntegrationManagementConfiguration` modification from the\n  `integrationMbeanExporter()`, since that looks like mutation of an\n  external object, when end-user would prefer their own options.\n  Therefore we don't need `ObjectProvider<IntegrationManagementConfigurer>`, too\n\n- Add missed `MessageSourceMetrics` gathering for the\n  `SpringIntegrationMetricReader`\n\nCloses gh-7722"}