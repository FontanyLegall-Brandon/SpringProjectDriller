{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/webflux/ReactiveWebServerConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/webflux/ReactiveWebServerConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -30,43 +30,51 @@ import org.springframework.context.annotation.Bean;\n \n /**\n  * Configuration classes for reactive web servers\n- * <p>Those should be {@code @Import} in a regular auto-configuration class\n- * to guarantee their order of execution.\n+ * <p>\n+ * Those should be {@code @Import} in a regular auto-configuration class to guarantee\n+ * their order of execution.\n  *\n  * @author Brian Clozel\n  */\n abstract class ReactiveWebServerConfiguration {\n \n \t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n-\t@ConditionalOnClass({HttpServer.class})\n+\t@ConditionalOnClass({ HttpServer.class })\n \tstatic class ReactorNettyAutoConfiguration {\n+\n \t\t@Bean\n \t\tpublic ReactorNettyReactiveWebServerFactory reactorNettyReactiveWebServerFactory() {\n \t\t\treturn new ReactorNettyReactiveWebServerFactory();\n \t\t}\n+\n \t}\n \n \t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n-\t@ConditionalOnClass({org.apache.catalina.startup.Tomcat.class})\n+\t@ConditionalOnClass({ org.apache.catalina.startup.Tomcat.class })\n \tstatic class TomcatAutoConfiguration {\n+\n \t\t@Bean\n \t\tpublic TomcatReactiveWebServerFactory tomcatReactiveWebServerFactory() {\n \t\t\treturn new TomcatReactiveWebServerFactory();\n \t\t}\n+\n \t}\n \n \t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n-\t@ConditionalOnClass({org.eclipse.jetty.server.Server.class})\n+\t@ConditionalOnClass({ org.eclipse.jetty.server.Server.class })\n \tstatic class JettyAutoConfiguration {\n+\n \t\t@Bean\n \t\tpublic JettyReactiveWebServerFactory jettyReactiveWebServerFactory() {\n \t\t\treturn new JettyReactiveWebServerFactory();\n \t\t}\n+\n \t}\n \n \t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n-\t@ConditionalOnClass({Undertow.class})\n+\t@ConditionalOnClass({ Undertow.class })\n \tstatic class UndertowAutoConfiguration {\n+\n \t\t@Bean\n \t\tpublic UndertowReactiveWebServerFactory undertowReactiveWebServerFactory() {\n \t\t\treturn new UndertowReactiveWebServerFactory();\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.webflux;\n\nimport io.undertow.Undertow;\nimport reactor.ipc.netty.http.server.HttpServer;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.context.embedded.ReactiveWebServerFactory;\nimport org.springframework.boot.context.embedded.jetty.JettyReactiveWebServerFactory;\nimport org.springframework.boot.context.embedded.reactor.ReactorNettyReactiveWebServerFactory;\nimport org.springframework.boot.context.embedded.tomcat.TomcatReactiveWebServerFactory;\nimport org.springframework.boot.context.embedded.undertow.UndertowReactiveWebServerFactory;\nimport org.springframework.context.annotation.Bean;\n\n/**\n * Configuration classes for reactive web servers\n * <p>\n * Those should be {@code @Import} in a regular auto-configuration class to guarantee\n * their order of execution.\n *\n * @author Brian Clozel\n */\nabstract class ReactiveWebServerConfiguration {\n\n\t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n\t@ConditionalOnClass({ HttpServer.class })\n\tstatic class ReactorNettyAutoConfiguration {\n\n\t\t@Bean\n\t\tpublic ReactorNettyReactiveWebServerFactory reactorNettyReactiveWebServerFactory() {\n\t\t\treturn new ReactorNettyReactiveWebServerFactory();\n\t\t}\n\n\t}\n\n\t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n\t@ConditionalOnClass({ org.apache.catalina.startup.Tomcat.class })\n\tstatic class TomcatAutoConfiguration {\n\n\t\t@Bean\n\t\tpublic TomcatReactiveWebServerFactory tomcatReactiveWebServerFactory() {\n\t\t\treturn new TomcatReactiveWebServerFactory();\n\t\t}\n\n\t}\n\n\t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n\t@ConditionalOnClass({ org.eclipse.jetty.server.Server.class })\n\tstatic class JettyAutoConfiguration {\n\n\t\t@Bean\n\t\tpublic JettyReactiveWebServerFactory jettyReactiveWebServerFactory() {\n\t\t\treturn new JettyReactiveWebServerFactory();\n\t\t}\n\n\t}\n\n\t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n\t@ConditionalOnClass({ Undertow.class })\n\tstatic class UndertowAutoConfiguration {\n\n\t\t@Bean\n\t\tpublic UndertowReactiveWebServerFactory undertowReactiveWebServerFactory() {\n\t\t\treturn new UndertowReactiveWebServerFactory();\n\t\t}\n\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.webflux;\n\nimport io.undertow.Undertow;\nimport reactor.ipc.netty.http.server.HttpServer;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.context.embedded.ReactiveWebServerFactory;\nimport org.springframework.boot.context.embedded.jetty.JettyReactiveWebServerFactory;\nimport org.springframework.boot.context.embedded.reactor.ReactorNettyReactiveWebServerFactory;\nimport org.springframework.boot.context.embedded.tomcat.TomcatReactiveWebServerFactory;\nimport org.springframework.boot.context.embedded.undertow.UndertowReactiveWebServerFactory;\nimport org.springframework.context.annotation.Bean;\n\n/**\n * Configuration classes for reactive web servers\n * <p>Those should be {@code @Import} in a regular auto-configuration class\n * to guarantee their order of execution.\n *\n * @author Brian Clozel\n */\nabstract class ReactiveWebServerConfiguration {\n\n\t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n\t@ConditionalOnClass({HttpServer.class})\n\tstatic class ReactorNettyAutoConfiguration {\n\t\t@Bean\n\t\tpublic ReactorNettyReactiveWebServerFactory reactorNettyReactiveWebServerFactory() {\n\t\t\treturn new ReactorNettyReactiveWebServerFactory();\n\t\t}\n\t}\n\n\t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n\t@ConditionalOnClass({org.apache.catalina.startup.Tomcat.class})\n\tstatic class TomcatAutoConfiguration {\n\t\t@Bean\n\t\tpublic TomcatReactiveWebServerFactory tomcatReactiveWebServerFactory() {\n\t\t\treturn new TomcatReactiveWebServerFactory();\n\t\t}\n\t}\n\n\t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n\t@ConditionalOnClass({org.eclipse.jetty.server.Server.class})\n\tstatic class JettyAutoConfiguration {\n\t\t@Bean\n\t\tpublic JettyReactiveWebServerFactory jettyReactiveWebServerFactory() {\n\t\t\treturn new JettyReactiveWebServerFactory();\n\t\t}\n\t}\n\n\t@ConditionalOnMissingBean(ReactiveWebServerFactory.class)\n\t@ConditionalOnClass({Undertow.class})\n\tstatic class UndertowAutoConfiguration {\n\t\t@Bean\n\t\tpublic UndertowReactiveWebServerFactory undertowReactiveWebServerFactory() {\n\t\t\treturn new UndertowReactiveWebServerFactory();\n\t\t}\n\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
