@@ -0,0 +1,57 @@
+
+
+package org.springframework.boot.autoconfigure.web;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.core.Ordered;
+import org.springframework.core.annotation.Order;
+import org.springframework.web.filter.CharacterEncodingFilter;
+
+
+@Configuration
+@EnableConfigurationProperties(HttpEncodingProperties.class)
+@ConditionalOnClass(CharacterEncodingFilter.class)
+@ConditionalOnProperty(prefix = , value = , matchIfMissing = true)
+public class HttpEncodingAutoConfiguration {
+
+	@Autowired
+	private HttpEncodingProperties httpEncodingProperties;
+
+	@ConditionalOnMissingBean
+	@Bean
+	@Order(Ordered.HIGHEST_PRECEDENCE)
+	public CharacterEncodingFilter characterEncodingFilter() {
+		CharacterEncodingFilter filter = new CharacterEncodingFilter();
+		filter.setEncoding(httpEncodingProperties.getCharset().name());
+		filter.setForceEncoding(httpEncodingProperties.isForce());
+		return filter;
+	}
+
+}

