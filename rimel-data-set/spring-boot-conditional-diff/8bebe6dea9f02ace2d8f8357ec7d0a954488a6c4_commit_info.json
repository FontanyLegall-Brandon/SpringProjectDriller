{'_old_path': None, '_new_path': PosixPath('spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoProviderAutoConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.actuate.autoconfigure;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.actuate.info.EnvironmentInfoProvider;\n+import org.springframework.boot.actuate.info.InfoProvider;\n+import org.springframework.boot.actuate.info.ScmGitPropertiesInfoProvider;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.env.ConfigurableEnvironment;\n+import org.springframework.core.env.StandardEnvironment;\n+import org.springframework.core.io.Resource;\n+\n+/**\n+ * {@link EnableAutoConfiguration Auto-configuration} for standard {@link InfoProvider}s.\n+ *\n+ * @author Meang Akira Tanaka\n+ * @since 1.3.0\n+ */\n+@Configuration\n+@AutoConfigureBefore({ EndpointAutoConfiguration.class })\n+public class InfoProviderAutoConfiguration {\n+\n+\t@Autowired\n+\tprivate final ConfigurableEnvironment environment = new StandardEnvironment();\n+\n+\t@Value("${spring.git.properties:classpath:git.properties}")\n+\tprivate Resource gitProperties;\n+\n+\t@Bean\n+\t@ConditionalOnMissingBean(name = "environmentInfoProvider")\n+\tpublic InfoProvider environmentInfoProvider() throws Exception {\n+\t\treturn new EnvironmentInfoProvider(environment);\n+\t}\n+\t\n+\t@Bean\n+\t@ConditionalOnMissingBean(name = "scmInfoProvider")\n+\tpublic InfoProvider scmInfoProvider() throws Exception {\n+\t\treturn new ScmGitPropertiesInfoProvider(gitProperties);\n+\t}\n+\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.actuate.info.EnvironmentInfoProvider;\nimport org.springframework.boot.actuate.info.InfoProvider;\nimport org.springframework.boot.actuate.info.ScmGitPropertiesInfoProvider;\nimport org.springframework.boot.autoconfigure.AutoConfigureBefore;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.env.ConfigurableEnvironment;\nimport org.springframework.core.env.StandardEnvironment;\nimport org.springframework.core.io.Resource;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for standard {@link InfoProvider}s.\n *\n * @author Meang Akira Tanaka\n * @since 1.3.0\n */\n@Configuration\n@AutoConfigureBefore({ EndpointAutoConfiguration.class })\npublic class InfoProviderAutoConfiguration {\n\n\t@Autowired\n\tprivate final ConfigurableEnvironment environment = new StandardEnvironment();\n\n\t@Value("${spring.git.properties:classpath:git.properties}")\n\tprivate Resource gitProperties;\n\n\t@Bean\n\t@ConditionalOnMissingBean(name = "environmentInfoProvider")\n\tpublic InfoProvider environmentInfoProvider() throws Exception {\n\t\treturn new EnvironmentInfoProvider(environment);\n\t}\n\t\n\t@Bean\n\t@ConditionalOnMissingBean(name = "scmInfoProvider")\n\tpublic InfoProvider scmInfoProvider() throws Exception {\n\t\treturn new ScmGitPropertiesInfoProvider(gitProperties);\n\t}\n\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
