{'_old_path': PosixPath('spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -1,5 +1,5 @@\n /*\n- * Copyright 2013-2014 the original author or authors.\n+ * Copyright 2013-2015 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the "License");\n  * you may not use this file except in compliance with the License.\n@@ -25,8 +25,8 @@ import org.springframework.boot.autoconfigure.AutoConfigureAfter;\n import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\n import org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration;\n import org.springframework.boot.context.properties.EnableConfigurationProperties;\n@@ -39,8 +39,8 @@ import org.springframework.context.annotation.Configuration;\n  *\n  * <p>\n  * This configuration will get automatically enabled as soon as the Jolokia\n- * {@link AgentServlet} is on the classpath. To disable set\n- * <code>endpoints.jolokia.enabled: false</code>.\n+ * {@link AgentServlet} is on the classpath. To disable it set\n+ * <code>endpoints.jolokia.enabled: false</code> or <code>endpoints.enabled: false</code>.\n  *\n  * <p>\n  * Additional configuration parameters for Jolokia can be provided by specifying\n@@ -50,11 +50,12 @@ import org.springframework.context.annotation.Configuration;\n  *\n  * @author Christian Dupuis\n  * @author Dave Syer\n+ * @author Andy Wilkinson\n  */\n @Configuration\n @ConditionalOnWebApplication\n @ConditionalOnClass({ AgentServlet.class })\n-@ConditionalOnProperty(prefix = "endpoints.jolokia", name = "enabled", matchIfMissing = true)\n+@ConditionalOnExpression("${endpoints.jolokia.enabled:${endpoints.enabled:true}}")\n @AutoConfigureBefore(ManagementSecurityAutoConfiguration.class)\n @AutoConfigureAfter(EmbeddedServletContainerAutoConfiguration.class)\n @EnableConfigurationProperties(JolokiaProperties.class)\n', 'source_code': '/*\n * Copyright 2013-2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure;\n\nimport java.util.Properties;\n\nimport org.jolokia.http.AgentServlet;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.AutoConfigureBefore;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for embedding Jolokia, a JMX-HTTP\n * bridge giving an alternative to JSR-160 connectors.\n *\n * <p>\n * This configuration will get automatically enabled as soon as the Jolokia\n * {@link AgentServlet} is on the classpath. To disable it set\n * <code>endpoints.jolokia.enabled: false</code> or <code>endpoints.enabled: false</code>.\n *\n * <p>\n * Additional configuration parameters for Jolokia can be provided by specifying\n * <code>jolokia.config.*</code> properties. See the <a\n * href="http://jolokia.org">http://jolokia.org</a> web site for more information on\n * supported configuration parameters.\n *\n * @author Christian Dupuis\n * @author Dave Syer\n * @author Andy Wilkinson\n */\n@Configuration\n@ConditionalOnWebApplication\n@ConditionalOnClass({ AgentServlet.class })\n@ConditionalOnExpression("${endpoints.jolokia.enabled:${endpoints.enabled:true}}")\n@AutoConfigureBefore(ManagementSecurityAutoConfiguration.class)\n@AutoConfigureAfter(EmbeddedServletContainerAutoConfiguration.class)\n@EnableConfigurationProperties(JolokiaProperties.class)\npublic class JolokiaAutoConfiguration {\n\n\t@Autowired\n\tJolokiaProperties properties = new JolokiaProperties();\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\tpublic JolokiaMvcEndpoint jolokiaEndpoint() {\n\t\tJolokiaMvcEndpoint endpoint = new JolokiaMvcEndpoint();\n\t\tendpoint.setInitParameters(getInitParameters());\n\t\treturn endpoint;\n\t}\n\n\tprivate Properties getInitParameters() {\n\t\tProperties initParameters = new Properties();\n\t\tinitParameters.putAll(this.properties.getConfig());\n\t\treturn initParameters;\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2013-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure;\n\nimport java.util.Properties;\n\nimport org.jolokia.http.AgentServlet;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.AutoConfigureBefore;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for embedding Jolokia, a JMX-HTTP\n * bridge giving an alternative to JSR-160 connectors.\n *\n * <p>\n * This configuration will get automatically enabled as soon as the Jolokia\n * {@link AgentServlet} is on the classpath. To disable set\n * <code>endpoints.jolokia.enabled: false</code>.\n *\n * <p>\n * Additional configuration parameters for Jolokia can be provided by specifying\n * <code>jolokia.config.*</code> properties. See the <a\n * href="http://jolokia.org">http://jolokia.org</a> web site for more information on\n * supported configuration parameters.\n *\n * @author Christian Dupuis\n * @author Dave Syer\n */\n@Configuration\n@ConditionalOnWebApplication\n@ConditionalOnClass({ AgentServlet.class })\n@ConditionalOnProperty(prefix = "endpoints.jolokia", name = "enabled", matchIfMissing = true)\n@AutoConfigureBefore(ManagementSecurityAutoConfiguration.class)\n@AutoConfigureAfter(EmbeddedServletContainerAutoConfiguration.class)\n@EnableConfigurationProperties(JolokiaProperties.class)\npublic class JolokiaAutoConfiguration {\n\n\t@Autowired\n\tJolokiaProperties properties = new JolokiaProperties();\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\tpublic JolokiaMvcEndpoint jolokiaEndpoint() {\n\t\tJolokiaMvcEndpoint endpoint = new JolokiaMvcEndpoint();\n\t\tendpoint.setInitParameters(getInitParameters());\n\t\treturn endpoint;\n\t}\n\n\tprivate Properties getInitParameters() {\n\t\tProperties initParameters = new Properties();\n\t\tinitParameters.putAll(this.properties.getConfig());\n\t\treturn initParameters;\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
