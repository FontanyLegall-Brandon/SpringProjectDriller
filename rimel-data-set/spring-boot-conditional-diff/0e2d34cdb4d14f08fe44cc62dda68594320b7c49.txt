@@ -25,11 +25,9 @@ import org.apache.commons.logging.LogFactory;
 
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
-import org.springframework.boot.autoconfigure.security.SecurityProperties;
 import org.springframework.boot.autoconfigure.web.ServerProperties;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.boot.devtools.remote.server.AccessManager;
@@ -46,11 +44,7 @@ import org.springframework.boot.devtools.restart.server.HttpRestartServerHandler
 import org.springframework.boot.devtools.restart.server.SourceFolderUrlFilter;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
-import org.springframework.core.annotation.Order;
 import org.springframework.http.server.ServerHttpRequest;
-import org.springframework.security.config.annotation.ObjectPostProcessor;
-import org.springframework.security.config.annotation.web.builders.HttpSecurity;
-import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
 
 /**
  * {@link EnableAutoConfiguration Auto-configuration} for remote development support.
@@ -143,31 +137,4 @@ public class RemoteDevToolsAutoConfiguration {
 
 	}
 
-	@Configuration
-	@ConditionalOnClass(WebSecurityConfigurerAdapter.class)
-	@ConditionalOnBean(ObjectPostProcessor.class)
-	static class RemoteDevToolsSecurityConfiguration {
-
-		@Bean
-		public RemoteRestartWebSecurityConfigurer remoteRestartWebSecurityConfigurer() {
-			return new RemoteRestartWebSecurityConfigurer();
-		}
-
-		@Order(SecurityProperties.IGNORED_ORDER + 2)
-		static class RemoteRestartWebSecurityConfigurer
-				extends WebSecurityConfigurerAdapter {
-
-			@Autowired
-			private DevToolsProperties properties;
-
-			@Override
-			public void configure(HttpSecurity http) throws Exception {
-				http.antMatcher(this.properties.getRemote().getContextPath() + );
-				http.csrf().disable();
-			}
-
-		}
-
-	}
-
 }

