{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/PropertyPlaceholderAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/PropertyPlaceholderAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -17,6 +17,7 @@\n package org.springframework.boot.autoconfigure;\n \n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.SearchStrategy;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n@@ -36,7 +37,7 @@ import org.springframework.core.annotation.Order;\n public class PropertyPlaceholderAutoConfiguration {\n \n \t@Bean\n-\t@ConditionalOnMissingBean\n+\t@ConditionalOnMissingBean(search = SearchStrategy.CURRENT)\n \tpublic static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer(\n \t\t\tApplicationContext context) {\n \t\treturn new PropertySourcesPlaceholderConfigurer();\n', 'source_code': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.SearchStrategy;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\nimport org.springframework.core.Ordered;\nimport org.springframework.core.annotation.Order;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for\n * {@link PropertySourcesPlaceholderConfigurer}.\n * \n * @author Phillip Webb\n * @author Dave Syer\n */\n@Configuration\n@Order(Ordered.HIGHEST_PRECEDENCE)\npublic class PropertyPlaceholderAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean(search = SearchStrategy.CURRENT)\n\tpublic static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer(\n\t\t\tApplicationContext context) {\n\t\treturn new PropertySourcesPlaceholderConfigurer();\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\nimport org.springframework.core.Ordered;\nimport org.springframework.core.annotation.Order;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for\n * {@link PropertySourcesPlaceholderConfigurer}.\n * \n * @author Phillip Webb\n * @author Dave Syer\n */\n@Configuration\n@Order(Ordered.HIGHEST_PRECEDENCE)\npublic class PropertyPlaceholderAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\tpublic static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer(\n\t\t\tApplicationContext context) {\n\t\treturn new PropertySourcesPlaceholderConfigurer();\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
