{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfigureRegistrar.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfigureRegistrar.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2013 the original author or authors.\n+ * Copyright 2012-2014 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the "License");\n  * you may not use this file except in compliance with the License.\n@@ -18,9 +18,11 @@ package org.springframework.boot.autoconfigure.data;\n \n import java.lang.annotation.Annotation;\n \n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.context.annotation.ImportBeanDefinitionRegistrar;\n import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;\n import org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension;\n+import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;\n import org.springframework.data.repository.config.RepositoryConfigurationExtension;\n \n /**\n@@ -29,6 +31,7 @@ import org.springframework.data.repository.config.RepositoryConfigurationExtensi\n  * \n  * @author Dave Syer\n  */\n+@ConditionalOnMissingBean(MongoRepositoryFactoryBean.class)\n class MongoRepositoriesAutoConfigureRegistrar extends\n \t\tAbstractRepositoryConfigurationSourceSupport {\n \n', 'source_code': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data;\n\nimport java.lang.annotation.Annotation;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.ImportBeanDefinitionRegistrar;\nimport org.springframework.data.mongodb.repository.config.EnableMongoRepositories;\nimport org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension;\nimport org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;\nimport org.springframework.data.repository.config.RepositoryConfigurationExtension;\n\n/**\n * {@link ImportBeanDefinitionRegistrar} used to auto-configure Spring Data Mongo\n * Repositories.\n * \n * @author Dave Syer\n */\n@ConditionalOnMissingBean(MongoRepositoryFactoryBean.class)\nclass MongoRepositoriesAutoConfigureRegistrar extends\n\t\tAbstractRepositoryConfigurationSourceSupport {\n\n\t@Override\n\tprotected Class<? extends Annotation> getAnnotation() {\n\t\treturn EnableMongoRepositories.class;\n\t}\n\n\t@Override\n\tprotected Class<?> getConfiguration() {\n\t\treturn EnableMongoRepositoriesConfiguration.class;\n\t}\n\n\t@Override\n\tprotected RepositoryConfigurationExtension getRepositoryConfigurationExtension() {\n\t\treturn new MongoRepositoryConfigurationExtension();\n\t}\n\n\t@EnableMongoRepositories\n\tprivate static class EnableMongoRepositoriesConfiguration {\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.data;\n\nimport java.lang.annotation.Annotation;\n\nimport org.springframework.context.annotation.ImportBeanDefinitionRegistrar;\nimport org.springframework.data.mongodb.repository.config.EnableMongoRepositories;\nimport org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension;\nimport org.springframework.data.repository.config.RepositoryConfigurationExtension;\n\n/**\n * {@link ImportBeanDefinitionRegistrar} used to auto-configure Spring Data Mongo\n * Repositories.\n * \n * @author Dave Syer\n */\nclass MongoRepositoriesAutoConfigureRegistrar extends\n\t\tAbstractRepositoryConfigurationSourceSupport {\n\n\t@Override\n\tprotected Class<? extends Annotation> getAnnotation() {\n\t\treturn EnableMongoRepositories.class;\n\t}\n\n\t@Override\n\tprotected Class<?> getConfiguration() {\n\t\treturn EnableMongoRepositoriesConfiguration.class;\n\t}\n\n\t@Override\n\tprotected RepositoryConfigurationExtension getRepositoryConfigurationExtension() {\n\t\treturn new MongoRepositoryConfigurationExtension();\n\t}\n\n\t@EnableMongoRepositories\n\tprivate static class EnableMongoRepositoriesConfiguration {\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
