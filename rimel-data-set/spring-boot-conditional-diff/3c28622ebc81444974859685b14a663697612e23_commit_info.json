{'_old_path': PosixPath('spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/reactor/core/ReactorCoreAutoConfiguration.java'), '_new_path': None, 'change_type': <ModificationType.DELETE: 4>, 'diff': '@@ -1,48 +0,0 @@\n-/*\n- * Copyright 2012-2019 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the "License");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an "AS IS" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.springframework.boot.autoconfigure.reactor.core;\n-\n-import reactor.core.publisher.Flux;\n-import reactor.core.publisher.Hooks;\n-import reactor.core.publisher.Mono;\n-\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n-import org.springframework.boot.context.properties.EnableConfigurationProperties;\n-import org.springframework.context.annotation.Configuration;\n-\n-/**\n- * {@link EnableAutoConfiguration Auto-configuration} for Reactor Core.\n- *\n- * @author Brian Clozel\n- * @author Eddú Meléndez\n- * @since 2.0.0\n- */\n-@Configuration(proxyBeanMethods = false)\n-@ConditionalOnClass({ Mono.class, Flux.class })\n-@EnableConfigurationProperties(ReactorCoreProperties.class)\n-public class ReactorCoreAutoConfiguration {\n-\n-\t@Autowired\n-\tprotected void initialize(ReactorCoreProperties properties) {\n-\t\tif (properties.isDebug()) {\n-\t\t\tHooks.onOperatorDebug();\n-\t\t}\n-\t}\n-\n-}\n', 'source_code': None, 'source_code_before': '/*\n * Copyright 2012-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.reactor.core;\n\nimport reactor.core.publisher.Flux;\nimport reactor.core.publisher.Hooks;\nimport reactor.core.publisher.Mono;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Reactor Core.\n *\n * @author Brian Clozel\n * @author Eddú Meléndez\n * @since 2.0.0\n */\n@Configuration(proxyBeanMethods = false)\n@ConditionalOnClass({ Mono.class, Flux.class })\n@EnableConfigurationProperties(ReactorCoreProperties.class)\npublic class ReactorCoreAutoConfiguration {\n\n\t@Autowired\n\tprotected void initialize(ReactorCoreProperties properties) {\n\t\tif (properties.isDebug()) {\n\t\t\tHooks.onOperatorDebug();\n\t\t}\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
