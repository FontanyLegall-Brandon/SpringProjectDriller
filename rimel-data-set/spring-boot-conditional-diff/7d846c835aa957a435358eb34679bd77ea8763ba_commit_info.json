{'_old_path': PosixPath('spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -39,7 +39,7 @@ import org.springframework.util.StringUtils;\n  */\n @Configuration\n @AutoConfigureAfter({ EndpointAutoConfiguration.class })\n-@ConditionalOnExpression("${endpoints.jmx.enabled:true}")\n+@ConditionalOnExpression("${endpoints.jmx.enabled:true}&&${spring.jmx.enabled:true}")\n @EnableConfigurationProperties(EndpointMBeanExportProperties.class)\n public class EndpointMBeanExportAutoConfiguration {\n \n@@ -55,7 +55,7 @@ public class EndpointMBeanExportAutoConfiguration {\n \t\t\tmbeanExporter.setDomain(domain);\n \t\t}\n \n-\t\tmbeanExporter.setEnsureUniqueRuntimeObjectNames(this.properties.getUniqueNames());\n+\t\tmbeanExporter.setEnsureUniqueRuntimeObjectNames(this.properties.isUniqueNames());\n \t\tmbeanExporter.setObjectNameStaticProperties(this.properties.getStaticNames());\n \n \t\treturn mbeanExporter;\n@@ -68,8 +68,18 @@ public class EndpointMBeanExportAutoConfiguration {\n \n \t\tprivate boolean uniqueNames = false;\n \n+\t\tprivate boolean enabled = true;\n+\n \t\tprivate Properties staticNames = new Properties();\n \n+\t\tpublic boolean isEnabled() {\n+\t\t\treturn this.enabled;\n+\t\t}\n+\n+\t\tpublic void setEnabled(boolean enabled) {\n+\t\t\tthis.enabled = enabled;\n+\t\t}\n+\n \t\tpublic String getDomain() {\n \t\t\treturn this.domain;\n \t\t}\n@@ -78,7 +88,7 @@ public class EndpointMBeanExportAutoConfiguration {\n \t\t\tthis.domain = domain;\n \t\t}\n \n-\t\tpublic boolean getUniqueNames() {\n+\t\tpublic boolean isUniqueNames() {\n \t\t\treturn this.uniqueNames;\n \t\t}\n \n', 'source_code': '/*\n * Copyright 2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure;\n\nimport java.util.Properties;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportAutoConfiguration.EndpointMBeanExportProperties;\nimport org.springframework.boot.actuate.endpoint.Endpoint;\nimport org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.util.StringUtils;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} to enable JMX export for\n * {@link Endpoint}s.\n * \n * @author Christian Dupuis\n */\n@Configuration\n@AutoConfigureAfter({ EndpointAutoConfiguration.class })\n@ConditionalOnExpression("${endpoints.jmx.enabled:true}&&${spring.jmx.enabled:true}")\n@EnableConfigurationProperties(EndpointMBeanExportProperties.class)\npublic class EndpointMBeanExportAutoConfiguration {\n\n\t@Autowired\n\tEndpointMBeanExportProperties properties = new EndpointMBeanExportProperties();\n\n\t@Bean\n\tpublic EndpointMBeanExporter endpointMBeanExporter() {\n\t\tEndpointMBeanExporter mbeanExporter = new EndpointMBeanExporter();\n\n\t\tString domain = this.properties.getDomain();\n\t\tif (StringUtils.hasText(domain)) {\n\t\t\tmbeanExporter.setDomain(domain);\n\t\t}\n\n\t\tmbeanExporter.setEnsureUniqueRuntimeObjectNames(this.properties.isUniqueNames());\n\t\tmbeanExporter.setObjectNameStaticProperties(this.properties.getStaticNames());\n\n\t\treturn mbeanExporter;\n\t}\n\n\t@ConfigurationProperties(name = "endpoints.jmx")\n\tpublic static class EndpointMBeanExportProperties {\n\n\t\tprivate String domain;\n\n\t\tprivate boolean uniqueNames = false;\n\n\t\tprivate boolean enabled = true;\n\n\t\tprivate Properties staticNames = new Properties();\n\n\t\tpublic boolean isEnabled() {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\tpublic void setEnabled(boolean enabled) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tpublic String getDomain() {\n\t\t\treturn this.domain;\n\t\t}\n\n\t\tpublic void setDomain(String domain) {\n\t\t\tthis.domain = domain;\n\t\t}\n\n\t\tpublic boolean isUniqueNames() {\n\t\t\treturn this.uniqueNames;\n\t\t}\n\n\t\tpublic void setUniqueNames(boolean uniqueNames) {\n\t\t\tthis.uniqueNames = uniqueNames;\n\t\t}\n\n\t\tpublic Properties getStaticNames() {\n\t\t\treturn this.staticNames;\n\t\t}\n\n\t\tpublic void setStaticNames(String[] staticNames) {\n\t\t\tthis.staticNames = StringUtils.splitArrayElementsIntoProperties(staticNames,\n\t\t\t\t\t"=");\n\t\t}\n\t}\n\n}', 'source_code_before': '/*\n * Copyright 2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure;\n\nimport java.util.Properties;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportAutoConfiguration.EndpointMBeanExportProperties;\nimport org.springframework.boot.actuate.endpoint.Endpoint;\nimport org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.util.StringUtils;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} to enable JMX export for\n * {@link Endpoint}s.\n * \n * @author Christian Dupuis\n */\n@Configuration\n@AutoConfigureAfter({ EndpointAutoConfiguration.class })\n@ConditionalOnExpression("${endpoints.jmx.enabled:true}")\n@EnableConfigurationProperties(EndpointMBeanExportProperties.class)\npublic class EndpointMBeanExportAutoConfiguration {\n\n\t@Autowired\n\tEndpointMBeanExportProperties properties = new EndpointMBeanExportProperties();\n\n\t@Bean\n\tpublic EndpointMBeanExporter endpointMBeanExporter() {\n\t\tEndpointMBeanExporter mbeanExporter = new EndpointMBeanExporter();\n\n\t\tString domain = this.properties.getDomain();\n\t\tif (StringUtils.hasText(domain)) {\n\t\t\tmbeanExporter.setDomain(domain);\n\t\t}\n\n\t\tmbeanExporter.setEnsureUniqueRuntimeObjectNames(this.properties.getUniqueNames());\n\t\tmbeanExporter.setObjectNameStaticProperties(this.properties.getStaticNames());\n\n\t\treturn mbeanExporter;\n\t}\n\n\t@ConfigurationProperties(name = "endpoints.jmx")\n\tpublic static class EndpointMBeanExportProperties {\n\n\t\tprivate String domain;\n\n\t\tprivate boolean uniqueNames = false;\n\n\t\tprivate Properties staticNames = new Properties();\n\n\t\tpublic String getDomain() {\n\t\t\treturn this.domain;\n\t\t}\n\n\t\tpublic void setDomain(String domain) {\n\t\t\tthis.domain = domain;\n\t\t}\n\n\t\tpublic boolean getUniqueNames() {\n\t\t\treturn this.uniqueNames;\n\t\t}\n\n\t\tpublic void setUniqueNames(boolean uniqueNames) {\n\t\t\tthis.uniqueNames = uniqueNames;\n\t\t}\n\n\t\tpublic Properties getStaticNames() {\n\t\t\treturn this.staticNames;\n\t\t}\n\n\t\tpublic void setStaticNames(String[] staticNames) {\n\t\t\tthis.staticNames = StringUtils.splitArrayElementsIntoProperties(staticNames,\n\t\t\t\t\t"=");\n\t\t}\n\t}\n\n}', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
