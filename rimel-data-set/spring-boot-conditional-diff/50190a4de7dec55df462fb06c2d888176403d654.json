{"author_date": "2014-04-30 09:49:35+01:00", "msg": "Add support for HikariDataSource\n\nWe still prefer Tomcat if it is available (that can change\nif the community asks loudly enough). Hikari is supported\nvia the same spring.datasource.* properties as Tomcat (and\nDBCP), with some modifications:\n\n* The validation and timeout settings are not as fine-grained\nin Hikari, so many of them will simply be ignored. The most\ncommon options (url, username, password, driverClassName) all\nwork as expected.\n\n* The Hikari team recommends using a vendor-specific DataSource\nvia spring.datasource.dataSourceClassName and supplying it with\nProperties (spring.datasource.hikari.*).\n\nHikari prefers the JDBC4 isValid() API (encapsulates vendor-\nspecific queries) which is probably a good thing, but we\nhaven't provided any explicit support or testing for that yet.\n\nFixes gh-418"}