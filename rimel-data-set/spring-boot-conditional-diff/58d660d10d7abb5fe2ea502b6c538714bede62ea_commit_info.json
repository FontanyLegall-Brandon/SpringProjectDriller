{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -19,6 +19,7 @@ package org.springframework.boot.autoconfigure.dao;\n import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n import org.springframework.context.annotation.Bean;\n import org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor;\n \n@@ -34,8 +35,11 @@ public class PersistenceExceptionTranslationAutoConfiguration {\n \n \t@Bean\n \t@ConditionalOnMissingBean(PersistenceExceptionTranslationPostProcessor.class)\n+\t@ConditionalOnProperty(prefix = "spring.dao.exceptiontranslation", name = "enabled", matchIfMissing = true)\n \tpublic PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor() {\n-\t\treturn new PersistenceExceptionTranslationPostProcessor();\n+\t\tPersistenceExceptionTranslationPostProcessor postProcessor = new PersistenceExceptionTranslationPostProcessor();\n+\t\tpostProcessor.setProxyTargetClass(true);\n+\t\treturn postProcessor;\n \t}\n \n }\n', 'source_code': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.dao;\n\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring\'s persistence exception\n * translation\n *\n * @author Andy Wilkinson\n * @since 1.2.0\n */\n@ConditionalOnClass(PersistenceExceptionTranslationPostProcessor.class)\npublic class PersistenceExceptionTranslationAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean(PersistenceExceptionTranslationPostProcessor.class)\n\t@ConditionalOnProperty(prefix = "spring.dao.exceptiontranslation", name = "enabled", matchIfMissing = true)\n\tpublic PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor() {\n\t\tPersistenceExceptionTranslationPostProcessor postProcessor = new PersistenceExceptionTranslationPostProcessor();\n\t\tpostProcessor.setProxyTargetClass(true);\n\t\treturn postProcessor;\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.dao;\n\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring\'s persistence exception\n * translation\n *\n * @author Andy Wilkinson\n * @since 1.2.0\n */\n@ConditionalOnClass(PersistenceExceptionTranslationPostProcessor.class)\npublic class PersistenceExceptionTranslationAutoConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean(PersistenceExceptionTranslationPostProcessor.class)\n\tpublic PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor() {\n\t\treturn new PersistenceExceptionTranslationPostProcessor();\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
