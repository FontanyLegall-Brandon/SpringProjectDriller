@@ -1,60 +0,0 @@
-
-
-package org.springframework.boot.actuate.autoconfigure.metrics.jdbc;
-
-import java.util.Collection;
-
-import javax.sql.DataSource;
-
-import com.zaxxer.hikari.HikariDataSource;
-import com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory;
-import io.micrometer.core.instrument.MeterRegistry;
-
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
-import org.springframework.context.annotation.Configuration;
-
-
-@Configuration
-@ConditionalOnClass(HikariDataSource.class)
-class HikariDataSourceMetricsConfiguration {
-
-	private final MeterRegistry registry;
-
-	HikariDataSourceMetricsConfiguration(MeterRegistry registry) {
-		this.registry = registry;
-	}
-
-	@Autowired
-	public void bindMetricsRegistryToHikariDataSources(
-			Collection<DataSource> dataSources) {
-		dataSources.stream().filter(HikariDataSource.class::isInstance)
-				.map(HikariDataSource.class::cast)
-				.forEach(this::bindMetricsRegistryToHikariDataSource);
-	}
-
-	private void bindMetricsRegistryToHikariDataSource(HikariDataSource hikari) {
-		hikari.setMetricsTrackerFactory(
-				new MicrometerMetricsTrackerFactory(this.registry));
-	}
-
-}

