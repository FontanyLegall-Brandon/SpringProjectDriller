{'_old_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java'), '_new_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2017 the original author or authors.\n+ * Copyright 2012-2018 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the "License");\n  * you may not use this file except in compliance with the License.\n@@ -21,7 +21,7 @@ import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointPr\n import org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration;\n import org.springframework.boot.actuate.endpoint.annotation.Endpoint;\n import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;\n-import org.springframework.boot.actuate.endpoint.web.annotation.WebAnnotationEndpointDiscoverer;\n+import org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier;\n import org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n@@ -40,25 +40,24 @@ import org.springframework.web.servlet.DispatcherServlet;\n  * @author Phillip Webb\n  * @since 2.0.0\n  */\n-\n @ManagementContextConfiguration\n @ConditionalOnWebApplication(type = Type.SERVLET)\n @ConditionalOnClass(DispatcherServlet.class)\n-@ConditionalOnBean({ DispatcherServlet.class, WebAnnotationEndpointDiscoverer.class })\n+@ConditionalOnBean({ DispatcherServlet.class, WebEndpointsSupplier.class })\n @EnableConfigurationProperties(CorsEndpointProperties.class)\n public class WebMvcEndpointManagementContextConfiguration {\n \n \t@Bean\n \t@ConditionalOnMissingBean\n \tpublic WebMvcEndpointHandlerMapping webEndpointServletHandlerMapping(\n-\t\t\tWebAnnotationEndpointDiscoverer endpointDiscoverer,\n+\t\t\tWebEndpointsSupplier webEndpointsSupplier,\n \t\t\tEndpointMediaTypes endpointMediaTypes, CorsEndpointProperties corsProperties,\n \t\t\tWebEndpointProperties webEndpointProperties) {\n-\t\tWebMvcEndpointHandlerMapping handlerMapping = new WebMvcEndpointHandlerMapping(\n-\t\t\t\tnew EndpointMapping(webEndpointProperties.getBasePath()),\n-\t\t\t\tendpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n+\t\tEndpointMapping endpointMapping = new EndpointMapping(\n+\t\t\t\twebEndpointProperties.getBasePath());\n+\t\treturn new WebMvcEndpointHandlerMapping(endpointMapping,\n+\t\t\t\twebEndpointsSupplier.getEndpoints(), endpointMediaTypes,\n \t\t\t\tcorsProperties.toCorsConfiguration());\n-\t\treturn handlerMapping;\n \t}\n \n }\n', 'source_code': '/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet;\n\nimport org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties;\nimport org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties;\nimport org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration;\nimport org.springframework.boot.actuate.endpoint.annotation.Endpoint;\nimport org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;\nimport org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier;\nimport org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication.Type;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.boot.endpoint.web.EndpointMapping;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.web.servlet.DispatcherServlet;\n\n/**\n * {@link ManagementContextConfiguration} for Spring MVC {@link Endpoint} concerns.\n *\n * @author Andy Wilkinson\n * @author Phillip Webb\n * @since 2.0.0\n */\n@ManagementContextConfiguration\n@ConditionalOnWebApplication(type = Type.SERVLET)\n@ConditionalOnClass(DispatcherServlet.class)\n@ConditionalOnBean({ DispatcherServlet.class, WebEndpointsSupplier.class })\n@EnableConfigurationProperties(CorsEndpointProperties.class)\npublic class WebMvcEndpointManagementContextConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\tpublic WebMvcEndpointHandlerMapping webEndpointServletHandlerMapping(\n\t\t\tWebEndpointsSupplier webEndpointsSupplier,\n\t\t\tEndpointMediaTypes endpointMediaTypes, CorsEndpointProperties corsProperties,\n\t\t\tWebEndpointProperties webEndpointProperties) {\n\t\tEndpointMapping endpointMapping = new EndpointMapping(\n\t\t\t\twebEndpointProperties.getBasePath());\n\t\treturn new WebMvcEndpointHandlerMapping(endpointMapping,\n\t\t\t\twebEndpointsSupplier.getEndpoints(), endpointMediaTypes,\n\t\t\t\tcorsProperties.toCorsConfiguration());\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet;\n\nimport org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties;\nimport org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties;\nimport org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration;\nimport org.springframework.boot.actuate.endpoint.annotation.Endpoint;\nimport org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;\nimport org.springframework.boot.actuate.endpoint.web.annotation.WebAnnotationEndpointDiscoverer;\nimport org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication.Type;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.boot.endpoint.web.EndpointMapping;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.web.servlet.DispatcherServlet;\n\n/**\n * {@link ManagementContextConfiguration} for Spring MVC {@link Endpoint} concerns.\n *\n * @author Andy Wilkinson\n * @author Phillip Webb\n * @since 2.0.0\n */\n\n@ManagementContextConfiguration\n@ConditionalOnWebApplication(type = Type.SERVLET)\n@ConditionalOnClass(DispatcherServlet.class)\n@ConditionalOnBean({ DispatcherServlet.class, WebAnnotationEndpointDiscoverer.class })\n@EnableConfigurationProperties(CorsEndpointProperties.class)\npublic class WebMvcEndpointManagementContextConfiguration {\n\n\t@Bean\n\t@ConditionalOnMissingBean\n\tpublic WebMvcEndpointHandlerMapping webEndpointServletHandlerMapping(\n\t\t\tWebAnnotationEndpointDiscoverer endpointDiscoverer,\n\t\t\tEndpointMediaTypes endpointMediaTypes, CorsEndpointProperties corsProperties,\n\t\t\tWebEndpointProperties webEndpointProperties) {\n\t\tWebMvcEndpointHandlerMapping handlerMapping = new WebMvcEndpointHandlerMapping(\n\t\t\t\tnew EndpointMapping(webEndpointProperties.getBasePath()),\n\t\t\t\tendpointDiscoverer.discoverEndpoints(), endpointMediaTypes,\n\t\t\t\tcorsProperties.toCorsConfiguration());\n\t\treturn handlerMapping;\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
