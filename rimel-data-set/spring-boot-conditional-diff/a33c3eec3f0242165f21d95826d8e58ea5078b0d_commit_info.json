{'_old_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfiguration.java'), '_new_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -37,7 +37,7 @@ import org.springframework.context.annotation.Configuration;\n \n /**\n  * {@link EnableAutoConfiguration Auto-configuration} for {@link InfluxDbHealthIndicator}.\n- * \n+ *\n  * @author Eddú Meléndez\n  * @since 2.0.0\n  */\n@@ -57,8 +57,9 @@ public class InfluxDbHealthIndicatorAutoConfiguration extends\n \t}\n \n \t@Bean\n-\t@ConditionalOnMissingBean(name = "influxdbHealthIndicator")\n-\tpublic HealthIndicator influxdbHealthIndicator() {\n+\t@ConditionalOnMissingBean(name = "influxDbHealthIndicator")\n+\tpublic HealthIndicator influxDbHealthIndicator() {\n \t\treturn createHealthIndicator(this.influxDbs);\n \t}\n+\n }\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.influx;\n\nimport java.util.Map;\n\nimport org.influxdb.InfluxDB;\n\nimport org.springframework.boot.actuate.autoconfigure.health.CompositeHealthIndicatorConfiguration;\nimport org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;\nimport org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration;\nimport org.springframework.boot.actuate.health.HealthIndicator;\nimport org.springframework.boot.actuate.infux.InfluxDbHealthIndicator;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.AutoConfigureBefore;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for {@link InfluxDbHealthIndicator}.\n *\n * @author Eddú Meléndez\n * @since 2.0.0\n */\n@Configuration\n@ConditionalOnClass(InfluxDB.class)\n@ConditionalOnBean(InfluxDB.class)\n@ConditionalOnEnabledHealthIndicator("influxdb")\n@AutoConfigureBefore(HealthIndicatorAutoConfiguration.class)\n@AutoConfigureAfter(InfluxDbAutoConfiguration.class)\npublic class InfluxDbHealthIndicatorAutoConfiguration extends\n\t\tCompositeHealthIndicatorConfiguration<InfluxDbHealthIndicator, InfluxDB> {\n\n\tprivate final Map<String, InfluxDB> influxDbs;\n\n\tpublic InfluxDbHealthIndicatorAutoConfiguration(Map<String, InfluxDB> influxDbs) {\n\t\tthis.influxDbs = influxDbs;\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean(name = "influxDbHealthIndicator")\n\tpublic HealthIndicator influxDbHealthIndicator() {\n\t\treturn createHealthIndicator(this.influxDbs);\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.influx;\n\nimport java.util.Map;\n\nimport org.influxdb.InfluxDB;\n\nimport org.springframework.boot.actuate.autoconfigure.health.CompositeHealthIndicatorConfiguration;\nimport org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;\nimport org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration;\nimport org.springframework.boot.actuate.health.HealthIndicator;\nimport org.springframework.boot.actuate.infux.InfluxDbHealthIndicator;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.AutoConfigureBefore;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for {@link InfluxDbHealthIndicator}.\n * \n * @author Eddú Meléndez\n * @since 2.0.0\n */\n@Configuration\n@ConditionalOnClass(InfluxDB.class)\n@ConditionalOnBean(InfluxDB.class)\n@ConditionalOnEnabledHealthIndicator("influxdb")\n@AutoConfigureBefore(HealthIndicatorAutoConfiguration.class)\n@AutoConfigureAfter(InfluxDbAutoConfiguration.class)\npublic class InfluxDbHealthIndicatorAutoConfiguration extends\n\t\tCompositeHealthIndicatorConfiguration<InfluxDbHealthIndicator, InfluxDB> {\n\n\tprivate final Map<String, InfluxDB> influxDbs;\n\n\tpublic InfluxDbHealthIndicatorAutoConfiguration(Map<String, InfluxDB> influxDbs) {\n\t\tthis.influxDbs = influxDbs;\n\t}\n\n\t@Bean\n\t@ConditionalOnMissingBean(name = "influxdbHealthIndicator")\n\tpublic HealthIndicator influxdbHealthIndicator() {\n\t\treturn createHealthIndicator(this.influxDbs);\n\t}\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
