@@ -22,9 +22,11 @@ import java.util.Properties;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionOutcome;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnResource;
 import org.springframework.boot.autoconfigure.condition.SpringBootCondition;
 import org.springframework.boot.bind.RelaxedPropertyResolver;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.boot.info.BuildProperties;
 import org.springframework.boot.info.GitProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.ConditionContext;
@@ -60,6 +62,13 @@ public class ProjectInfoAutoConfiguration {
 		return new GitProperties(loadFrom(this.properties.getGit().getLocation(), ));
 	}
 
+	@ConditionalOnResource(resources = )
+	@ConditionalOnMissingBean
+	@Bean
+	public BuildProperties buildProperties() throws Exception {
+		return new BuildProperties(loadFrom(this.properties.getBuild().getLocation(), ));
+	}
+
 	protected Properties loadFrom(Resource location, String prefix) throws IOException {
 		String p = prefix.endsWith() ? prefix : prefix + ;
 		Properties source = PropertiesLoaderUtils.loadProperties(location);
@@ -72,7 +81,6 @@ public class ProjectInfoAutoConfiguration {
 		return target;
 	}
 
-
 	static class GitResourceAvailableCondition extends SpringBootCondition {
 
 		private final ResourceLoader defaultResourceLoader = new DefaultResourceLoader();

