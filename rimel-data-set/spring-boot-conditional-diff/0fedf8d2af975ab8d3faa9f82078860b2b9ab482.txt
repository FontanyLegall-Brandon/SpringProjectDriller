@@ -18,6 +18,8 @@ package org.springframework.boot.actuate.autoconfigure.liquibase;
 
 import liquibase.integration.spring.SpringLiquibase;
 
+import org.springframework.beans.BeansException;
+import org.springframework.beans.factory.config.BeanPostProcessor;
 import org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;
 import org.springframework.boot.actuate.liquibase.LiquibaseEndpoint;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -25,6 +27,7 @@ import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase;
 import org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.annotation.Bean;
@@ -49,4 +52,29 @@ public class LiquibaseEndpointAutoConfiguration {
 		return new LiquibaseEndpoint(context);
 	}
 
+	@Bean
+	@ConditionalOnBean(SpringLiquibase.class)
+	@ConditionalOnEnabledEndpoint(endpoint = LiquibaseEndpoint.class)
+	public static BeanPostProcessor preventDataSourceCloseBeanPostProcessor() {
+		return new BeanPostProcessor() {
+
+			@Override
+			public Object postProcessBeforeInitialization(Object bean, String beanName)
+					throws BeansException {
+				if (bean instanceof DataSourceClosingSpringLiquibase) {
+					((DataSourceClosingSpringLiquibase) bean)
+							.setCloseDataSourceOnceMigrated(false);
+				}
+				return bean;
+			}
+
+			@Override
+			public Object postProcessAfterInitialization(Object bean, String beanName)
+					throws BeansException {
+				return bean;
+			}
+
+		};
+	}
+
 }

