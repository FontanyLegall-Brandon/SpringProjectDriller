@@ -0,0 +1,67 @@
+
+
+package org.springframework.boot.autoconfigure.jdbc;
+
+import javax.sql.DataSource;
+
+import org.springframework.boot.autoconfigure.AutoConfigureAfter;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.jdbc.core.JdbcOperations;
+import org.springframework.jdbc.core.JdbcTemplate;
+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;
+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
+
+
+@Configuration
+@ConditionalOnClass(DataSource.class)
+@ConditionalOnSingleCandidate(DataSource.class)
+@AutoConfigureAfter(DataSourceAutoConfiguration.class)
+public class JdbcTemplateAutoConfiguration {
+
+	private final DataSource dataSource;
+
+	public JdbcTemplateAutoConfiguration(DataSource dataSource) {
+		this.dataSource = dataSource;
+	}
+
+	@Bean
+	@ConditionalOnMissingBean(JdbcOperations.class)
+	public JdbcTemplate jdbcTemplate() {
+		return new JdbcTemplate(this.dataSource);
+	}
+
+	@Bean
+	@ConditionalOnMissingBean(NamedParameterJdbcOperations.class)
+	public NamedParameterJdbcTemplate namedParameterJdbcTemplate() {
+		return new NamedParameterJdbcTemplate(this.dataSource);
+	}
+
+}

