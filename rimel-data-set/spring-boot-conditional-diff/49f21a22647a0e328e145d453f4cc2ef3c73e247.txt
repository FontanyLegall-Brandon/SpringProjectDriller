@@ -17,12 +17,12 @@
 package org.springframework.boot.actuate.autoconfigure.metrics.jdbc;
 
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Map;
 
 import javax.sql.DataSource;
 
 import io.micrometer.core.instrument.MeterRegistry;
-import io.micrometer.core.instrument.Tags;
 
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration;
@@ -31,9 +31,7 @@ import org.springframework.boot.actuate.metrics.jdbc.DataSourcePoolMetrics;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.util.StringUtils;
@@ -50,8 +48,6 @@ import org.springframework.util.StringUtils;
 		SimpleMetricsExportAutoConfiguration.class })
 @ConditionalOnBean({ DataSource.class, DataSourcePoolMetadataProvider.class,
 		MeterRegistry.class })
-@ConditionalOnProperty(value = , matchIfMissing = true)
-@EnableConfigurationProperties(JdbcMetricsProperties.class)
 public class DataSourcePoolMetricsAutoConfiguration {
 
 	private static final String DATASOURCE_SUFFIX = ;
@@ -60,14 +56,10 @@ public class DataSourcePoolMetricsAutoConfiguration {
 
 	private final Collection<DataSourcePoolMetadataProvider> metadataProviders;
 
-	private final String metricName;
-
 	public DataSourcePoolMetricsAutoConfiguration(MeterRegistry registry,
-			Collection<DataSourcePoolMetadataProvider> metadataProviders,
-			JdbcMetricsProperties jdbcMetricsProperties) {
+			Collection<DataSourcePoolMetadataProvider> metadataProviders) {
 		this.registry = registry;
 		this.metadataProviders = metadataProviders;
-		this.metricName = jdbcMetricsProperties.getMetricName();
 	}
 
 	@Autowired
@@ -77,8 +69,8 @@ public class DataSourcePoolMetricsAutoConfiguration {
 
 	private void bindDataSourceToRegistry(String beanName, DataSource dataSource) {
 		String dataSourceName = getDataSourceName(beanName);
-		new DataSourcePoolMetrics(dataSource, this.metadataProviders, this.metricName,
-				Tags.of(, dataSourceName)).bindTo(this.registry);
+		new DataSourcePoolMetrics(dataSource, this.metadataProviders,
+				dataSourceName, Collections.emptyList()).bindTo(this.registry);
 	}
 
 	/**

