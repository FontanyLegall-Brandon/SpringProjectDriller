{'_old_path': None, '_new_path': PosixPath('spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/NoOpMeterRegistryConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2012-2018 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.actuate.autoconfigure.metrics;\n+\n+import io.micrometer.core.instrument.Clock;\n+import io.micrometer.core.instrument.MeterRegistry;\n+import io.micrometer.core.instrument.composite.CompositeMeterRegistry;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.annotation.Bean;\n+\n+/**\n+ * Configuration for a no-op meter registry when the context does not contain an\n+ * auto-configured {@link MeterRegistry}.\n+ *\n+ * @author Andy Wilkinson\n+ */\n+@ConditionalOnBean(Clock.class)\n+@ConditionalOnMissingBean(MeterRegistry.class)\n+class NoOpMeterRegistryConfiguration {\n+\n+\t@Bean\n+\tpublic CompositeMeterRegistry noOpMeterRegistry(Clock clock) {\n+\t\treturn new CompositeMeterRegistry(clock);\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.actuate.autoconfigure.metrics;\n\nimport io.micrometer.core.instrument.Clock;\nimport io.micrometer.core.instrument.MeterRegistry;\nimport io.micrometer.core.instrument.composite.CompositeMeterRegistry;\n\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\n\n/**\n * Configuration for a no-op meter registry when the context does not contain an\n * auto-configured {@link MeterRegistry}.\n *\n * @author Andy Wilkinson\n */\n@ConditionalOnBean(Clock.class)\n@ConditionalOnMissingBean(MeterRegistry.class)\nclass NoOpMeterRegistryConfiguration {\n\n\t@Bean\n\tpublic CompositeMeterRegistry noOpMeterRegistry(Clock clock) {\n\t\treturn new CompositeMeterRegistry(clock);\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
