{"author_date": "2019-08-20 14:18:27-07:00", "msg": "Add HealthContributor and refactor HealthEndpoint\n\nOverhaul `HealthEndpoint` support to make it easier to support health\ngroups. Prior to this commit the `HealthIndicator` interface was used\nfor both regular indicators and composite indicators. In addition the\n`Health` result was used to both represent individual, system and\ncomposite health. This design unfortunately means that all health\ncontributors need to be aware of the `HealthAggregator` and could not\neasily support heath groups if per-group aggregation is required.\n\nThis commit reworks many aspects of the health support in order to\nprovide a cleaner separation between a `HealthIndicator`and a\ncomposite. The following changes have been made:\n\n- A `HealthContributor` interface has been introduced to represent\n  the general concept of something that contributes health information.\n  A contributor can either be a `HealthIndicator` or a\n  `CompositeHealthContributor`.\n\n- A `HealthComponent` class has been introduced to mirror the\n  contributor arrangement. The component can be either\n  `CompositeHealth` or `Health`.\n\n- The `HealthAggregator` interface has been replaced with a more\n  focused `StatusAggregator` interface which only deals with `Status`\n  results.\n\n- `CompositeHealthIndicator` has been replaced with\n  `CompositeHealthContributor` which only provides access to other\n  contributors. A composite can no longer directly return `Health`.\n\n- `HealthIndicatorRegistry` has been replaced with\n  `HealthContributorRegistry` and the default implementation now\n  uses a copy-on-write strategy.\n\n- `HealthEndpoint`, `HealthEndpointWebExtension` and\n  `ReactiveHealthEndpointWebExtension` now extend a common\n  `HealthEndpointSupport` class. They are now driven by a\n  health contributor registry and `HealthEndpointSettings`.\n\n- The `HealthStatusHttpMapper` class has been replaced by a\n  `HttpCodeStatusMapper` interface.\n\n- The `HealthWebEndpointResponseMapper` class has been replaced\n  by a `HealthEndpointSettings` strategy. This allows us to move\n  role related logic and `ShowDetails` to the auto-configure module.\n\n- `SimpleHttpCodeStatusMapper` and `SimpleStatusAggregator`\n  implementations have been added which are configured via constructor\n  arguments rather than setters.\n\n- Endpoint auto-configuration has been reworked and the\n  `CompositeHealthIndicatorConfiguration` class has been replaced\n  by `CompositeHealthContributorConfiguration`.\n\n- The endpoint JSON has been changed make `details` distinct from\n  `components`.\n\nSee gh-17926"}