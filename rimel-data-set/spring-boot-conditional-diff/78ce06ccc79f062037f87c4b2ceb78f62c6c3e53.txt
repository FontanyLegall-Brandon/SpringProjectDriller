@@ -0,0 +1,114 @@
+
+
+package org.springframework.boot.autoconfigure.data;
+
+import java.io.IOException;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.util.Arrays;
+
+import javax.annotation.PreDestroy;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Import;
+import org.springframework.data.couchbase.core.CouchbaseTemplate;
+import org.springframework.data.couchbase.repository.CouchbaseRepository;
+import org.springframework.data.couchbase.repository.config.EnableCouchbaseRepositories;
+
+import com.couchbase.client.CouchbaseClient;
+
+
+@Configuration
+@ConditionalOnClass({ CouchbaseClient.class, CouchbaseRepository.class })
+public class CouchbaseRepositoriesAutoConfiguration {
+
+	@Import(CouchbaseRepositoriesAutoConfigureRegistrar.class)
+	@Configuration
+	@EnableConfigurationProperties(CouchbaseProperties.class)
+	protected static class CouchbaseRepositoriesConfiguration {
+
+		@Autowired
+		private CouchbaseProperties config;
+
+		@PreDestroy
+		public void close() throws URISyntaxException, IOException {
+			couchbaseClient().shutdown();
+		}
+
+		@Bean
+		@ConditionalOnMissingBean(CouchbaseClient.class)
+		CouchbaseClient couchbaseClient() throws URISyntaxException, IOException {
+			return this.config.couchbaseClient();
+		}
+
+		@Bean
+		@ConditionalOnMissingBean(CouchbaseTemplate.class)
+		CouchbaseTemplate couchbaseTemplate(CouchbaseClient couchbaseClient) {
+			return new CouchbaseTemplate(couchbaseClient);
+		}
+	}
+
+	@ConfigurationProperties(prefix = )
+	public static class CouchbaseProperties {
+
+		private String host = ;
+		private String bucket = ;
+		private String password = ;
+
+		public CouchbaseClient couchbaseClient() throws URISyntaxException, IOException {
+			return new CouchbaseClient(Arrays.asList(new URI( + getHost()
+					+ )), getBucket(), getPassword());
+		}
+
+		public String getHost() {
+			return this.host;
+		}
+
+		public void setHost(String host) {
+			this.host = host;
+		}
+
+		public String getBucket() {
+			return this.bucket;
+		}
+
+		public void setBucket(String bucket) {
+			this.bucket = bucket;
+		}
+
+		public String getPassword() {
+			return this.password;
+		}
+
+		public void setPassword(String password) {
+			this.password = password;
+		}
+	}
+}

