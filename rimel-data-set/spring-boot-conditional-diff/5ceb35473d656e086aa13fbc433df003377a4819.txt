@@ -16,6 +16,9 @@
 
 package org.springframework.boot.actuate.autoconfigure;
 
+import java.util.Collections;
+import java.util.List;
+
 import javax.servlet.Servlet;
 import javax.sql.DataSource;
 
@@ -29,8 +32,9 @@ import org.springframework.boot.actuate.endpoint.PublicMetrics;
 import org.springframework.boot.actuate.endpoint.RichGaugeReaderPublicMetrics;
 import org.springframework.boot.actuate.endpoint.SystemPublicMetrics;
 import org.springframework.boot.actuate.endpoint.TomcatPublicMetrics;
+import org.springframework.boot.actuate.metrics.integration.SpringIntegrationMetricReader;
+import org.springframework.boot.actuate.metrics.reader.CompositeMetricReader;
 import org.springframework.boot.actuate.metrics.reader.MetricReader;
-import org.springframework.boot.actuate.metrics.repository.InMemoryMetricRepository;
 import org.springframework.boot.actuate.metrics.rich.RichGaugeReader;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
 import org.springframework.boot.autoconfigure.AutoConfigureBefore;
@@ -38,12 +42,17 @@ import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnJava;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnJava.JavaVersion;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration;
 import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
 import org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvider;
 import org.springframework.cache.CacheManager;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.integration.monitor.IntegrationMBeanExporter;
+import org.springframework.lang.UsesJava7;
 
 /**
  * {@link EnableAutoConfiguration Auto-configuration} for {@link PublicMetrics}.
@@ -56,12 +65,13 @@ import org.springframework.context.annotation.Configuration;
 @Configuration
 @AutoConfigureBefore(EndpointAutoConfiguration.class)
 @AutoConfigureAfter({ DataSourceAutoConfiguration.class, CacheAutoConfiguration.class,
-		MetricRepositoryAutoConfiguration.class, CacheStatisticsAutoConfiguration.class })
+		MetricRepositoryAutoConfiguration.class, CacheStatisticsAutoConfiguration.class,
+		IntegrationAutoConfiguration.class })
 public class PublicMetricsAutoConfiguration {
 
 	@Autowired(required = false)
-	@ActuatorMetricRepository
-	private MetricReader metricReader = new InMemoryMetricRepository();
+	@ActuatorMetricReader
+	private List<MetricReader> metricReaders = Collections.emptyList();
 
 	@Bean
 	public SystemPublicMetrics systemPublicMetrics() {
@@ -70,7 +80,7 @@ public class PublicMetricsAutoConfiguration {
 
 	@Bean
 	public MetricReaderPublicMetrics metricReaderPublicMetrics() {
-		return new MetricReaderPublicMetrics(this.metricReader);
+		return new MetricReaderPublicMetrics(new CompositeMetricReader(this.metricReaders.toArray(new MetricReader[0])));
 	}
 
 	@Bean
@@ -120,4 +130,21 @@ public class PublicMetricsAutoConfiguration {
 
 	}
 
+	@Configuration
+	@ConditionalOnClass(IntegrationMBeanExporter.class)
+	@ConditionalOnBean(IntegrationMBeanExporter.class)
+	@ConditionalOnJava(JavaVersion.SEVEN)
+	@UsesJava7
+	static class IntegrationMetricsConfiguration {
+
+		@Bean
+		@ConditionalOnMissingBean
+		public MetricReaderPublicMetrics springIntegrationPublicMetrics(
+				IntegrationMBeanExporter exporter) {
+			return new MetricReaderPublicMetrics(new SpringIntegrationMetricReader(
+					exporter));
+		}
+
+	}
+
 }

