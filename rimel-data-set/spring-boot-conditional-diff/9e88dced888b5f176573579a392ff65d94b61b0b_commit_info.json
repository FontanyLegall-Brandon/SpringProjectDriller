{'_old_path': None, '_new_path': PosixPath('spring-boot-devtools/src/test/java/org/springframework/boot/devtools/env/DevToolPropertiesIntegrationTests.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.devtools.env;\n+\n+import org.junit.After;\n+import org.junit.Test;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.ConfigurableApplicationContext;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Integration tests for the configuration of development-time properties\n+ *\n+ * @author Andy Wilkinson\n+ */\n+public class DevToolPropertiesIntegrationTests {\n+\n+\tprivate ConfigurableApplicationContext context;\n+\n+\t@After\n+\tpublic void cleanup() {\n+\t\tif (this.context != null) {\n+\t\t\tthis.context.close();\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tpublic void classPropertyConditionIsAffectedByDevToolProperties() {\n+\t\tSpringApplication application = new SpringApplication(\n+\t\t\t\tClassConditionConfiguration.class);\n+\t\tapplication.setWebEnvironment(false);\n+\t\tthis.context = application.run();\n+\t\tthis.context.getBean(ClassConditionConfiguration.class);\n+\t}\n+\n+\t@Test\n+\tpublic void beanMethodPropertyConditionIsAffectedByDevToolProperties() {\n+\t\tSpringApplication application = new SpringApplication(\n+\t\t\t\tBeanConditionConfiguration.class);\n+\t\tapplication.setWebEnvironment(false);\n+\t\tthis.context = application.run();\n+\t\tthis.context.getBean(MyBean.class);\n+\t}\n+\n+\t@Configuration\n+\t@ConditionalOnProperty("spring.h2.console.enabled")\n+\tstatic class ClassConditionConfiguration {\n+\n+\t}\n+\n+\t@Configuration\n+\tstatic class BeanConditionConfiguration {\n+\n+\t\t@Bean\n+\t\t@ConditionalOnProperty("spring.h2.console.enabled")\n+\t\tpublic MyBean myBean() {\n+\t\t\treturn new MyBean();\n+\t\t}\n+\t}\n+\n+\tstatic class MyBean {\n+\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.devtools.env;\n\nimport org.junit.After;\nimport org.junit.Test;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.context.ConfigurableApplicationContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**\n * Integration tests for the configuration of development-time properties\n *\n * @author Andy Wilkinson\n */\npublic class DevToolPropertiesIntegrationTests {\n\n\tprivate ConfigurableApplicationContext context;\n\n\t@After\n\tpublic void cleanup() {\n\t\tif (this.context != null) {\n\t\t\tthis.context.close();\n\t\t}\n\t}\n\n\t@Test\n\tpublic void classPropertyConditionIsAffectedByDevToolProperties() {\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tClassConditionConfiguration.class);\n\t\tapplication.setWebEnvironment(false);\n\t\tthis.context = application.run();\n\t\tthis.context.getBean(ClassConditionConfiguration.class);\n\t}\n\n\t@Test\n\tpublic void beanMethodPropertyConditionIsAffectedByDevToolProperties() {\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tBeanConditionConfiguration.class);\n\t\tapplication.setWebEnvironment(false);\n\t\tthis.context = application.run();\n\t\tthis.context.getBean(MyBean.class);\n\t}\n\n\t@Configuration\n\t@ConditionalOnProperty("spring.h2.console.enabled")\n\tstatic class ClassConditionConfiguration {\n\n\t}\n\n\t@Configuration\n\tstatic class BeanConditionConfiguration {\n\n\t\t@Bean\n\t\t@ConditionalOnProperty("spring.h2.console.enabled")\n\t\tpublic MyBean myBean() {\n\t\t\treturn new MyBean();\n\t\t}\n\t}\n\n\tstatic class MyBean {\n\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
