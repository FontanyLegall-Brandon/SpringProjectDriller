{'_old_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/OAuth2AutoConfiguration.java'), '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/OAuth2AutoConfiguration.java'), 'change_type': <ModificationType.MODIFY: 5>, 'diff': '@@ -30,7 +30,7 @@ import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Import;\n import org.springframework.security.oauth2.common.OAuth2AccessToken;\n-import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n \n /**\n  * {@link EnableAutoConfiguration Auto-configuration} for Spring Security OAuth2.\n@@ -40,7 +40,7 @@ import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter\n  * @since 1.3.0\n  */\n @Configuration\n-@ConditionalOnClass({ OAuth2AccessToken.class, WebMvcConfigurerAdapter.class })\n+@ConditionalOnClass({ OAuth2AccessToken.class, WebMvcConfigurer.class })\n @Import({ OAuth2AuthorizationServerConfiguration.class,\n \t\tOAuth2MethodSecurityConfiguration.class, OAuth2ResourceServerConfiguration.class,\n \t\tOAuth2RestOperationsConfiguration.class })\n', 'source_code': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.security.oauth2;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureBefore;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2AuthorizationServerConfiguration;\nimport org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2RestOperationsConfiguration;\nimport org.springframework.boot.autoconfigure.security.oauth2.method.OAuth2MethodSecurityConfiguration;\nimport org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration;\nimport org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties;\nimport org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.security.oauth2.common.OAuth2AccessToken;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Security OAuth2.\n *\n * @author Greg Turnquist\n * @author Dave Syer\n * @since 1.3.0\n */\n@Configuration\n@ConditionalOnClass({ OAuth2AccessToken.class, WebMvcConfigurer.class })\n@Import({ OAuth2AuthorizationServerConfiguration.class,\n\t\tOAuth2MethodSecurityConfiguration.class, OAuth2ResourceServerConfiguration.class,\n\t\tOAuth2RestOperationsConfiguration.class })\n@AutoConfigureBefore(WebMvcAutoConfiguration.class)\n@EnableConfigurationProperties(OAuth2ClientProperties.class)\npublic class OAuth2AutoConfiguration {\n\n\tprivate final OAuth2ClientProperties credentials;\n\n\tpublic OAuth2AutoConfiguration(OAuth2ClientProperties credentials) {\n\t\tthis.credentials = credentials;\n\t}\n\n\t@Bean\n\tpublic ResourceServerProperties resourceServerProperties() {\n\t\treturn new ResourceServerProperties(this.credentials.getClientId(),\n\t\t\t\tthis.credentials.getClientSecret());\n\t}\n\n}\n', 'source_code_before': '/*\n * Copyright 2012-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.security.oauth2;\n\nimport org.springframework.boot.autoconfigure.AutoConfigureBefore;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2AuthorizationServerConfiguration;\nimport org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2RestOperationsConfiguration;\nimport org.springframework.boot.autoconfigure.security.oauth2.method.OAuth2MethodSecurityConfiguration;\nimport org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration;\nimport org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties;\nimport org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.security.oauth2.common.OAuth2AccessToken;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\n\n/**\n * {@link EnableAutoConfiguration Auto-configuration} for Spring Security OAuth2.\n *\n * @author Greg Turnquist\n * @author Dave Syer\n * @since 1.3.0\n */\n@Configuration\n@ConditionalOnClass({ OAuth2AccessToken.class, WebMvcConfigurerAdapter.class })\n@Import({ OAuth2AuthorizationServerConfiguration.class,\n\t\tOAuth2MethodSecurityConfiguration.class, OAuth2ResourceServerConfiguration.class,\n\t\tOAuth2RestOperationsConfiguration.class })\n@AutoConfigureBefore(WebMvcAutoConfiguration.class)\n@EnableConfigurationProperties(OAuth2ClientProperties.class)\npublic class OAuth2AutoConfiguration {\n\n\tprivate final OAuth2ClientProperties credentials;\n\n\tpublic OAuth2AutoConfiguration(OAuth2ClientProperties credentials) {\n\t\tthis.credentials = credentials;\n\t}\n\n\t@Bean\n\tpublic ResourceServerProperties resourceServerProperties() {\n\t\treturn new ResourceServerProperties(this.credentials.getClientId(),\n\t\t\t\tthis.credentials.getClientSecret());\n\t}\n\n}\n', '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
