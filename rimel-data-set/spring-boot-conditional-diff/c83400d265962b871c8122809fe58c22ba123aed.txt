@@ -23,11 +23,8 @@ import java.util.List;
 import javax.annotation.PostConstruct;
 
 import org.junit.Test;
-import org.springframework.beans.factory.BeanCreationException;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.TestUtils;
-import org.springframework.boot.context.condition.AssertMissingBean;
-import org.springframework.boot.context.condition.ConditionalOnMissingBean;
 import org.springframework.context.annotation.AnnotationConfigApplicationContext;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
@@ -90,30 +87,9 @@ public class EnableConfigurationPropertiesTests {
 		assertEquals(, this.context.getBean(TestProperties.class).getName());
 	}
 
-	@Test(expected = BeanCreationException.class)
-	public void testPropertiesBindingWithDefaultsInBeanMethodReverseOrder() {
-		this.context.register(TestBeanConfiguration.class, DefaultConfiguration.class);
-		this.context.refresh();
-		String[] beanNames = this.context.getBeanNamesForType(TestProperties.class);
-		assertEquals( + Arrays.asList(beanNames), 1, beanNames.length);
-		assertEquals(, this.context.getBean(TestProperties.class).getName());
-	}
-
 	@Test
 	public void testPropertiesBindingWithDefaultsInBeanMethod() {
-		this.context.register(DefaultConfiguration.class, TestBeanConfiguration.class);
-		this.context.refresh();
-		String[] beanNames = this.context.getBeanNamesForType(TestProperties.class);
-		assertEquals( + Arrays.asList(beanNames), 1, beanNames.length);
-		assertEquals(, this.context.getBean(TestProperties.class).getName());
-	}
-
-	
-	
-	
-	@Test(expected = BeanCreationException.class)
-	public void testPropertiesBindingWithDefaults() {
-		this.context.register(TestConfiguration.class, DefaultConfiguration.class);
+		this.context.register(DefaultConfiguration.class);
 		this.context.refresh();
 		String[] beanNames = this.context.getBeanNamesForType(TestProperties.class);
 		assertEquals( + Arrays.asList(beanNames), 1, beanNames.length);
@@ -204,20 +180,9 @@ public class EnableConfigurationPropertiesTests {
 	protected static class TestConfiguration {
 	}
 
-	@Configuration
-	@EnableConfigurationProperties
-	protected static class TestBeanConfiguration {
-		@ConditionalOnMissingBean(TestProperties.class)
-		@Bean(name = )
-		public TestProperties testProperties() {
-			return new TestProperties();
-		}
-	}
-
 	@Configuration
 	protected static class DefaultConfiguration {
 		@Bean
-		@AssertMissingBean(TestProperties.class)
 		public TestProperties testProperties() {
 			TestProperties test = new TestProperties();
 			test.setName();

