{"author_date": "2014-10-02 12:13:01-05:00", "msg": "Auto-configure Spring Security OAuth2 when detected on the classpath\n\n* Automatically spin up Authorization Server and Resource Server\n* Automatically configures method level security included OAuth2Expression handler\n* Wrote extensive unit tests verifying default behavior as well as the auto-configuration backing off when custom Authorization/Resource servers are included\n* Created org.springframework.boot.security.oauth2 subpackage to contain it\n* Can also disable either resource of authorization server completely with a single property for each\n* Print out the auto-generated secrets and other settings\n* Added spring-boot-sample-secure-oauth2 to provide a sample that can be run and poked with curl as well as some automated tests.\n* Make users ask for which servers to install by adding @Enable*\n* User has to @EnableGlobalMethodSecurity instead of using properties files\n\nAdd Spring Security OAuth2 support to Spring Boot CLI\n\n* Triggered from either @EnableAuthorizationServer or @EnableResourceServer\n* Needs to have @EnableGlobalMethodSecurity to allow picking the annotation model.\n* By default, comes with import support for @PreAuthorize, @PreFilter, @PostAuthorize, and @PostFilter via a single start import\n* Also need import support for the enable annotations mentioned above.\n* Added extra test case and sample (oauth2.groovy)"}