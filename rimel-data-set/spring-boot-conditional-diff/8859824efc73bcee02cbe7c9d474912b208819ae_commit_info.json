{'_old_path': None, '_new_path': PosixPath('spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/artemis/ArtemisXAConnectionFactoryConfiguration.java'), 'change_type': <ModificationType.ADD: 1>, 'diff': '@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2012-2015 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the "License");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an "AS IS" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.boot.autoconfigure.jms.artemis;\n+\n+import javax.jms.ConnectionFactory;\n+import javax.transaction.TransactionManager;\n+\n+import org.apache.activemq.artemis.jms.client.ActiveMQXAConnectionFactory;\n+import org.springframework.beans.factory.ListableBeanFactory;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.jta.XAConnectionFactoryWrapper;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+\n+/**\n+ * Configuration for Artemis XA {@link ConnectionFactory}.\n+ *\n+ * @author Eddú Meléndez\n+ * @author Phillip Webb\n+ * @since 1.3.0\n+ */\n+@Configuration\n+@ConditionalOnMissingBean(ConnectionFactory.class)\n+@ConditionalOnClass(TransactionManager.class)\n+@ConditionalOnBean(XAConnectionFactoryWrapper.class)\n+class ArtemisXAConnectionFactoryConfiguration {\n+\n+\t@Primary\n+\t@Bean(name = { "jmsConnectionFactory", "xaJmsConnectionFactory" })\n+\tpublic ConnectionFactory jmsConnectionFactory(ListableBeanFactory beanFactory,\n+\t\t\tArtemisProperties properties, XAConnectionFactoryWrapper wrapper)\n+\t\t\tthrows Exception {\n+\t\treturn wrapper.wrapConnectionFactory(new ArtemisConnectionFactoryFactory(\n+\t\t\t\tbeanFactory, properties)\n+\t\t\t\t.createConnectionFactory(ActiveMQXAConnectionFactory.class));\n+\t}\n+\n+\t@Bean\n+\tpublic ConnectionFactory nonXaJmsConnectionFactory(ListableBeanFactory beanFactory,\n+\t\t\tArtemisProperties properties) {\n+\t\treturn new ArtemisConnectionFactoryFactory(beanFactory, properties)\n+\t\t\t\t.createConnectionFactory(ActiveMQXAConnectionFactory.class);\n+\t}\n+\n+}\n', 'source_code': '/*\n * Copyright 2012-2015 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.boot.autoconfigure.jms.artemis;\n\nimport javax.jms.ConnectionFactory;\nimport javax.transaction.TransactionManager;\n\nimport org.apache.activemq.artemis.jms.client.ActiveMQXAConnectionFactory;\nimport org.springframework.beans.factory.ListableBeanFactory;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.jta.XAConnectionFactoryWrapper;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Primary;\n\n/**\n * Configuration for Artemis XA {@link ConnectionFactory}.\n *\n * @author Eddú Meléndez\n * @author Phillip Webb\n * @since 1.3.0\n */\n@Configuration\n@ConditionalOnMissingBean(ConnectionFactory.class)\n@ConditionalOnClass(TransactionManager.class)\n@ConditionalOnBean(XAConnectionFactoryWrapper.class)\nclass ArtemisXAConnectionFactoryConfiguration {\n\n\t@Primary\n\t@Bean(name = { "jmsConnectionFactory", "xaJmsConnectionFactory" })\n\tpublic ConnectionFactory jmsConnectionFactory(ListableBeanFactory beanFactory,\n\t\t\tArtemisProperties properties, XAConnectionFactoryWrapper wrapper)\n\t\t\tthrows Exception {\n\t\treturn wrapper.wrapConnectionFactory(new ArtemisConnectionFactoryFactory(\n\t\t\t\tbeanFactory, properties)\n\t\t\t\t.createConnectionFactory(ActiveMQXAConnectionFactory.class));\n\t}\n\n\t@Bean\n\tpublic ConnectionFactory nonXaJmsConnectionFactory(ListableBeanFactory beanFactory,\n\t\t\tArtemisProperties properties) {\n\t\treturn new ArtemisConnectionFactoryFactory(beanFactory, properties)\n\t\t\t\t.createConnectionFactory(ActiveMQXAConnectionFactory.class);\n\t}\n\n}\n', 'source_code_before': None, '_nloc': None, '_complexity': None, '_token_count': None, '_function_list': []}
