@@ -0,0 +1,65 @@
+
+
+package org.springframework.boot.autoconfigure.data.jdbc;
+
+import org.springframework.boot.autoconfigure.AutoConfigureAfter;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
+import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Import;
+import org.springframework.data.jdbc.repository.config.EnableJdbcRepositories;
+import org.springframework.data.jdbc.repository.config.JdbcConfiguration;
+import org.springframework.data.jdbc.repository.config.JdbcRepositoryConfigExtension;
+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;
+
+
+@Configuration
+@ConditionalOnBean(NamedParameterJdbcOperations.class)
+@ConditionalOnClass({ NamedParameterJdbcOperations.class, JdbcConfiguration.class })
+@ConditionalOnProperty(prefix = , name = , havingValue = , matchIfMissing = true)
+@AutoConfigureAfter(JdbcTemplateAutoConfiguration.class)
+public class JdbcRepositoriesAutoConfiguration {
+
+	@Configuration
+	@ConditionalOnMissingBean(JdbcRepositoryConfigExtension.class)
+	@Import(JdbcRepositoriesAutoConfigureRegistrar.class)
+	static class JdbcRepositoriesConfiguration {
+
+	}
+
+	@Configuration
+	@ConditionalOnMissingBean(JdbcConfiguration.class)
+	static class SpringBootJdbcConfiguration extends JdbcConfiguration {
+
+	}
+
+}

